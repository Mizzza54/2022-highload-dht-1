<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='utf-8'>
<style>
	body {margin: 0; padding: 4px 8px 24px; background-color: #ffffff; overflow-y: scroll}
    h1 {margin: 5px 0 0 0; font-size: 18px; font-weight: normal; text-align: center}
	header {margin: -24px 0 5px 0; line-height: 24px}
	button {font: 12px sans-serif; cursor: pointer}
	p {margin: 5px 0 5px 0}
	a {color: #0366d6}
	#hl {position: absolute; display: none; overflow: hidden; white-space: nowrap; pointer-events: none; background-color: #ffffe0; outline: 1px solid #ffc000; height: 15px}
	#hl span {padding: 0 3px 0 3px}
	#status {overflow: hidden; white-space: nowrap}
	#match {overflow: hidden; white-space: nowrap; display: none; float: right; text-align: right}
	#reset {cursor: pointer}
	#canvas {width: 100%; height: 300px}

    .selectionPart {position: absolute; display: none; pointer-events: none; box-sizing: border-box;}
    .sel {background-color: #dada0040}
    .act {background-color: #00da0040}
    .dif {background-color: #00dada40}
    .top {border-top: .1px solid #000}
    .left {border-left: .1px solid #000}
    .bottom {border-bottom: .1px solid #000}
    .right {border-right: .1px solid #000}

    #info-tooltip {display: none; position: absolute; top: 100px; right: 32px; width: 204px; border: 1px solid #666666; background: #ffffe0; border-radius: 8px; padding: 4px}
    #heatmap-height-line, #heatmap-info { text-decoration: #0366d6 dashed underline; cursor: pointer; font-family: monospace}
    #heatmap-info {cursor: help}
    #heatmap-info:hover + #info-tooltip {display: block}

    .colortip {width: 100px; box-sizing: border-box; padding: 4px; background: linear-gradient(var(--c1), var(--c2))}


</style>
</head>
<body style='font: 12px Verdana, sans-serif'>


<div style="display: flex">
    <div style="width: 20px; margin-right: 2px; float: left; writing-mode: vertical-rl; transform: scale(-1); text-align: center; user-select: none"><pre id="heatmap-height-line"> 1 sec : 20 ms </pre></div>

    <div id='heatmap-canvas-container' style="width: 100%; position: relative" autofocus>
        <div id='heatmap-canvas-wrapper' style='overflow: hidden; width: 100%'>
            <canvas id='heatmap-canvas' style='height: 314px'></canvas>
        </div>

        <div id='middleActive' class='selectionPart top bottom act'><span></span></div>
        <div id='leftActive' class='selectionPart top left bottom act'><span></span></div>
        <div id='rightActive' class='selectionPart top right bottom act'><span></span></div>
        <div id='leftMiddleActive' class='selectionPart right'><span></span></div>
        <div id='rightMiddleActive' class='selectionPart left'><span></span></div>

        <div id='middleSelection' class='selectionPart top bottom sel'><span></span></div>
        <div id='leftSelection' class='selectionPart top left bottom sel'><span></span></div>
        <div id='rightSelection' class='selectionPart top right bottom sel'><span></span></div>
        <div id='leftMiddleSelection' class='selectionPart right'><span></span></div>
        <div id='rightMiddleSelection' class='selectionPart left'><span></span></div>

        <div id='middleDiff' class='selectionPart top bottom dif'><span></span></div>
        <div id='leftDiff' class='selectionPart top left bottom dif'><span></span></div>
        <div id='rightDiff' class='selectionPart top right bottom dif'><span></span></div>
        <div id='leftMiddleDiff' class='selectionPart right'><span></span></div>
        <div id='rightMiddleDiff' class='selectionPart left'><span></span></div>
    </div>

    <div id="heatmap-info" style="width: 20px; margin-right: 2px; writing-mode: vertical-rl; text-align: center; user-select: none">
        <pre> Info </pre>
    </div>
    <div id="info-tooltip">
        <div style="float:left">
            <div style="padding: 4px;">Frame types:</div>
            <div class="colortip" style="--c1:#b2e1b2;--c2:#c6f5c6">Interpreted</div>
            <div class="colortip" style="--c1:#50e150;--c2:#6eff6e">JIT-Compiled</div>
            <div class="colortip" style="--c1:#50cccc;--c2:#6eeaea">Inlined</div>
            <div class="colortip" style="--c1:#e15a5a;--c2:#ff8282">Native</div>
            <div class="colortip" style="--c1:#c8c83c;--c2:#e6e646">C++</div>
            <div class="colortip" style="--c1:#e17d00;--c2:#ff9b00">Kernel</div>
            <div class="colortip" style="--c1:#cce880;--c2:#e0fc94">C1-Compiled</div>
        </div>
        <div style="float:left; margin-left: 4px">
            <div style="padding: 4px;">Special colors:</div>
            <div class="colortip" style="--c1:#ee00ee;--c2:#ee00ee">Matches regexp</div>
            <div class="colortip" style="--c1:#baa551;--c2:#baa551">New frames</div>
            <div class="colortip" style="--c1:#f0f0c0;--c2:#f0f0c0">Same frames</div>
            <div class="colortip" style="--c1:#99aaff;--c2:#99aaff">Less frames</div>
            <div class="colortip" style="--c1:#ffaa99;--c2:#ffaa99">More frames</div>
        </div>
        <div style="float:left; margin-top: 4px; width: 100%; border: 1px solid #666666; border-radius: 2px; padding: 2px; box-sizing: border-box;">
            Shift + Click - Select range<br>
            Ctrl + Click - Compare<br>
            Ctrl + F - Search<br>
        </div>
    </div>
</div>
<div id="executionsHeatmap" style="display:none">Bj@|lAANn@t@yA`BwBxCrDaEsKjLjMiPnSgUvUqVjYe]j]}]t^c_@m_@kb@ud@gi@pj@}j@sl@ln@_o@qs@lt@nu@dv@~x@|aAgcAihAiiAew@O???????????@?????????????????????????????????????????????????`px`a`^NJ`\W[VLNGiWii``hyp^NSHyah`NSNLOTTJa``h`hyFXxh`LVMJqxi[L^TIiqhpLMIpahbXai`pai`qxpYxi\MSULTKLUTLLMKNMOhbxpVIaxLKTQi`h^KKVLKTMMNIaaq]LJapa^SRhaUMNMIbxyahi`hia`h`pSJ``MKVUIx\VH`UVLTHqhhiiSQqi`aaKJy`ZxNKKRahahQyhBxyUKUKOxqSLSKMKQY`iaDLHaqpq`ax`aiDMSJaxi`MURaNMVNJp`x^Hpa`UNRp`xa\TKUSKNHxZxZiibZx[T[SYaaaCVKNNIpbp]TP[JzS[P^KMIQahxa`\JahVLK]MTVIjp`qxaTKTHxx[VHyh^NVKLLLKLK]Ix`i`aMRxhxiTMNMIhhq`TNLTQ`ix`p`aa`hxDVQi^JiapCVJpxxh\Yx`qaphYaKIbEKHxxpxa`hxiZ[XUJpqphp`[NTOaxbpy]LNVTPpaaBaxxMNJh`p[]USQ`haxaSMNLULNLJFRiyUSKGaah[TSLKSRixiaZh`UQCTSMMQah`C[KSWALI``qxpxa]KRqa`^TNKKVMXiaFKSIhhpi`hMO[Qjxhbx`Wxipy\SRhxyyFLTNKIjia^LMK]KLTSUUMMNKVOya[Jp]SKSNNKNSUNMLMJbp[\QyphQhhp`aaJpy`jphipxKSVMKPx`MTNLJqyi]]LO`xx`xyxTVI\SPip`FLZ^NSJiixyxhSSUTLVHpqhh^LRx[SZaxh[LS\KW\UTKRDJ`S[TJPaax\LTKIhi`CMNMUMJyixpxhiQiEHyixiyp`phaxx`bhRqphxpVTT]Ha]LSSGhaMLMKRii`hhObhahhpX\ULOyhhhiaaax`RbQbR`aTZqaia]TKRhp`iqjDMHiyrpa\TLKUVNL^Jph[VLLSL[PURZyhNK[SWxyTMKWaxx`NMLNJSS\Gq`hxqaaLKTMPSTPGjpyxhijBi]SNMKMUMTNVKMNKJphxhihqETLLKNLLHha`xyhq]TTNG`qq`VL^J`ia`a[QXypqqxixyp`haxRq[ULGx`xFKOa]SKKNMKMHpaxDSUJ`\MSMKSMSWhbhhaxiEMVQqLIphYxxiOyNSMRiqhLVMNLKULLLIqpppyy`yTSSR`VJ[LUNJy`x`^G]NVNKMNNKKMNKRapSLLNKKIxDH^LSHihC[UGah^K[TLMUTMK[KUPNJqihTSSSOipphiMNLSKK\PpphxxqhDKSMJpa`qFJqpVR`ahhhzx^SVIaphq`\UMI`pxaUJiDWU[KLNOaGpiSOqp^VNVOhx\^LYh`j\Ihha`hRxa`ih???????????????????????????????????????@??????????????????????????????????????????????@``E``EpkEmvEuaFt}E_rEzjFhsFskFgyFlmFjpFt|F}nGeaFpuG`dEzpH_yEqkErxG{jGl`EeoFszEbrGghEpyG{nH{dEsnEgeG{cHswFstHw}En|GesHajE}wErxEkeF|dEqpEnfFdjFioF~iH~dE`jEimFuyFd}FoeGqtGpfEehExiEc`FncFpjGhwG~qEelFebG~cGarGjuGcbH_jH|uEx}EgzFn~FxsGhcIsnIw~I}dEwfE{tEs{EcfFzvFixFhyF|_G~iGvqGwfHmgHnxHnaEdfEwgE`qEj_Fq`F~aFzgFaiFsiFwmFknF{nFwqFlsFqsF|zFx}FysG`aHlaHcrHzsH`aE{aEeeEukEolEbmEbnE~nEwyEvzE|zE`cFdcFedFogFgiFijFnrFmsFytF{tFivF{zFl{Fc~FveGokGomGfnG}qGtuGovGjxGcyGdzGw`HqhHmcI|fIszIabEybE|bEigErgEuhEfkEzkEplEmoErqEzqEovEfyEhzEj}EyaFrgFfhFopFdqFhtFdxFzxFliG`lGblGslG~qGzsGbtGitGnzGd`HqmHtpHw|Ho~Hj_I{_IekIomIpwIwaEbbEgbEpbExbEucEzdEceEkgElgEciEhjEujE{kE~kE`nEfnEdpEaqEbqEyqE`rEgtEwvEzvE}zEl{Eq{Ep}Eb~Ep~Ex~Eb_Fe_Fm`FhaFldFydF`fFkfFzfF~fFngFsgFtgFdkFkkFxmFupFxpFesFjsFnuFvwFmxFp{Fd|Fy~F~~FhbGvbGcfGhfGlfG~gGphGwiGqjGdlGjmGbnGepG{qGftGeuGzuG`wGewGpwGfzGv{Gq}Gd_Hl_HibHudHsfHwnHfpHhqH{tHgzH`oI{pImaJxcJk`E}`EtaEfbEobE_cE`cEpcEwcE_dEjdEldEtdEqeEzfEggEhgEwhEqiEviEbjEdjEgjEzjEkkEokEtkE~lEjmE~mE_nEanEynE`oEjoEuoEcpEcqExqE|qEgrEhrEkrEyrElsEdtEhuEjuEwwElxEgyEfzEy{Ez{Ei|E||Ed}Eh}Eu}Ee~Ey~En`F}`F_aFsaF~bF~cFjdFmdFxeFjfFqfFlgFwhFxhFyhFzhFciFfiFjiFtiFviF{iFejFsjF{jFbkFlkFrkFwkFflFslFmmFtmFhnFpnFvoFwoFkpFppFbqFfqFpqFrqFrsFatFztFbuFquFevFpvFsvFtvFwwFbxFxxFbyFeyFpyFczFrzFq{Fc}Fi}Fw}Ff`Gz`G|bGddGrdGafG{fGkiGqiGckGfkGflGjlGnmGgnGsnGxnGcoGppG~pGgqGqqGwqGcrGgsGssGhtGltGmtG|tGnvGcwGgxGmyGjzGp{Ge|Gg|Gp|Gu|GwbH_cHqdHneHreHkfHlfHufHmjHpkHjlHklHdnHunHkoHppH~pH}qHbuHyuHhwHtzHb|Hh|HbbIgbIxbIqcIbdIbfIvfIhgIbmIimIaoIopIdrIctIzuI}wIjzId{I_|Iw|Ic`JpoJq`Ey`EiaElaErbE~bEacEbcEdcEicEmcEqcErcEscExcEycEzcEadEhdEmdEndEodErdEfeEneEueEweEefEofExfEdgEjgEqgEzgE}gEihEohExhEaiEbiEeiEfiEiiEliEniEoiEriEuiEwiE_jEkjEsjEwjEjkEmkEflEilEmlExlEnmErmE}mEcnEdnEenE|nEaoEboEfoEkoEnoEpoEqoEyoEzoE_pEfpEgpEkpEnpEypE}pEeqEnqE}qEnrErrEsrEurEwrE{rE`sEbsEcsEjsExsE|sE~sEbtEetEltE|tEruEwuExuE_vEdvEpvE_wEgwEiwEpwEgxEhxEsxE`yEkyEoyEbzEjzErzExzEg{Ej{Er{E`|En|Ep|Ex|El}Em}Ey}Ej~En~Et~E~~E`_Fc_Ff_F{_F``Fl`Fw`Fx`F~`FaaFxaFzaF|aFmbFbcFecFfcFrcF|cFudFzdF{dFieFleFoeFrfF_gF`gFagFdgFxgF`hFohFphFqhF{hF~hFkiF_jFajFfjFljFtjFakFjkFnkFtkFalFbmFrmFzmF|mF_nFdnFjnFnoFooFapFhpFmpFvpF{pFlqFqqFzqF{qF|qF}qF~qF`rFdrFkrForFprFrrF_sFgsFisFnsFgtFktFrtFttFruF}uFkvFwvF|vFawFcwFgwFjwFtwFcxFhxFwxFyxF{xF|xF}xFlyFtyFbzFdzFkzFozFd{Ff{Fg{Fs{F~{Fb|Fu|Fy|F{|Fg}Fm}Fo}Fs}F~}Fw~F|~Fd_Gf_Gi_Gj_Gy_Gz_G{_Ga`Ge`G`aGgaGiaGgbGlbGmbGqbGtbGxbGfcGkcGmcGpcGrcGscGycG_dGwdG{dG~dG`eGkeGdfGufG`gGbgGigGogGugG|gGhhGihGlhGmhGzhG_iGciGoiGtiGuiGfjGljGrjGujGjkGkkGskGmlGxlGbmGgmGxmGymG~mG`nGjnGynGaoGdoGhoGmoGqoGtoGuoGwoG{oG~oGlpGopGqpG`rGfrGgrGurGwrGcsGpsG_tGdtGvtGmuGquGpvG_wGgwGjwGlwGnwGowG}wG~wGbxGcxGexGixGsxG_yGayGtyGuyGezGxzGzzGj{Go{Gt{G|{Gx|G||Gb}Gr}Gx}G`~Gp~Gs~Gz~Ga_Hh_Hm_Ho_Hj`Hx`H|`H_aHxaH{aHvbHybH|bHdcH~cHndHzdHbeHleHqeHzeH~eHcfHegHwgHbhHghHmhHohHwhHxhH}hH`iHeiHjiHwiH`jHqjHakHokHwkHzkH{kH}kH~kHflHhlHilHulH_mHcmHvmHxmHynHnoHapHbpHgpHkpH{pH}pHiqHnqHsqHqrH}rHbsHfsHjsHmsH{sH_tHftHhtHfuHruHvuHgvHkvHtvH~vHbwHcwHhxHixH`yHfyHgyHoyHryHxyHfzHqzHe{Hh{Hj{Hm{Hp{Hs{Ht{Hg|Hj|Hs|Hu|Hx|Hy|H{|H`}Ha~Ha_Ix_I~_Iu`I|`IoaItaIuaIwaImbIpbIrbIecIzcI_dIddImdIodImeIseIzeI{eI`fI`hIwhIzhItiIfjIokI_lI}lIpmIdnIhnIjnIynI_oIioI|oIxpI_tIotIvtIbuIcuImuIruIvuIgvIzvIkwImwIvwIpxIqyI`zIn{Ij|Iy|I{|I}_JeaJiaJjaJjdJ{fJ}gJohJvhJuiJdjJjjJhlJylJumJ~pJntJa`Ec`Ed`Ef`Ei`Em`Eo`Ep`Er`Ev`Ew`Ex`Ez`E{`E|`E~`E_aEbaEcaEdaEeaEfaEgaEhaEjaEkaEmaEpaEqaEraEyaEzaE|aE~aE_bE`bEdbEebEibEjbEkbElbEmbEtbEubEvbEwbE{bEccEecEfcEgcEhcEkcElcEncEocEtcEvcE|cE}cE~cEcdEddEfdEgdEidEkdEpdEqdEsdEudEvdEwdExdEydE`eEaeEbeEdeEgeEheEjeEkeEmeEoeEreEseEteEveExeEyeEzeE{eE|eE}eE~eE_fE`fEafEbfEcfEgfEhfEifEjfEkfElfEmfEnfEqfEsfEtfEufEvfEyfE{fE}fE`gEegEfgEmgEngEogEtgEugEvgExgE{gE|gE_hE`hEahEbhEchEdhEfhEkhElhEnhEphEqhErhEshEthEyhEzhE{hE|hE}hE~hE_iE`iEdiEhiEkiEsiEyiE{iE|iE}iE~iEejEfjEjjEljEmjEnjEojEqjErjEtjEvjEyjEhkErkEskEwkExkE}kE_lE`lEalEblEclEdlEelEglEhlEjlEklEllEnlErlEslEtlEulEvlEwlEzlE|lE}lE_mE`mEamEcmEemEfmEhmEimElmEmmEomEpmEqmEsmEtmEumEvmEwmExmEymEzmE{mE|mEgnEhnEinEjnEknElnEmnEnnEonEpnEqnErnEtnEunEvnEwnExnEznE{nE}nE_oEcoEeoEgoEhoEioEloEooEroEsoEtoEvoEwoExoE{oE~oEapEipEjpElpEmpEopEppErpEspEtpEupEvpEwpExpEzpE{pE|pE~pE_qEfqEhqEjqEkqElqEmqEoqEpqEqqEtqEuqEvqEwqE{qEarEcrEdrEerEfrEjrElrEorEprEqrEvrExrEzrE|rE}rE~rE_sEasEesEfsEgsEksEnsEosEpsEqsEssEtsEusEvsEwsEysEzsE{sE}sE_tE`tEatEctEhtEitEktEmtEntEotEptEqtErtEstEutEvtEwtExtEytEztE~tE_uE`uEauEbuEcuEduEeuEfuEguEiuEkuEmuEnuEouEpuEtuEuuEvuEyuEzuE{uEavEbvEfvEgvEhvEivEjvEkvEnvErvEsvEtvEvvE{vEdwEkwElwEmwEnwEowEqwEswEtwEuwEvwExwEywEzwE{wE|wE~wE`xEaxEbxEdxEexEfxEixEjxEkxEmxEoxEpxEqxEuxEwxExxEyxEzxE{xE}xE~xEayEbyEcyEdyEeyEiyEjyElyEmyEnyEqyEsyEtyEuyEvyExyEyyEzyE{yE|yE}yE_zE`zEazEczEdzEezElzEmzEnzEozEpzEqzEtzEuzEwzEyzEzzE{zE~zE`{Ea{Eb{Ec{Ed{Ee{Ei{Ek{Em{Eo{Ep{Eu{Ev{Ex{E{{E}{E_|Ea|Eb|Ec|Ee|Ef|Eg|Eh|Ek|El|Em|Eo|Eq|Eu|Ew|Ey|Ez|E{|E}|E~|E_}E`}Ea}Eb}Ec}Ef}Eg}Ei}Ek}Eq}Es}Ev}Ez}E{}E|}E}}E~}E_~Ea~Ec~Ef~Eh~Ei~El~Er~Es~Eu~Ev~Ew~E|~E}~E__Fa_Fd_Fg_Fh_Fi_Fk_Fl_Fm_Fn_Fo_Fp_Fr_Fx_Fy_F}_F~_F_`Fa`Fb`Fd`Ff`Fo`Fp`Fr`Ft`Fu`Fy`Fz`F{`F|`FcaFfaFgaFiaFkaFlaFmaFoaFpaFqaFraFtaFvaFwaF{aF}aFabFbbFdbFebFfbFhbFjbFkbFnbFobFpbFrbFsbFubFvbFwbFybFzbF{bF|bFgcFhcFicFkcFlcFmcFscFvcFxcFycF}cF_dF`dFbdFcdFddFfdFhdFkdFodFqdFvdFwdFxdF}dF~dF`eFaeFbeFceFeeFfeFheFmeFneFqeFreFseFueFveFweFyeFzeF{eF}eFafFbfFdfFefFffFifFlfFmfFofFtfFufFvfFwfFyfF{fF}fFcgFhgFigFjgFkgFmgFqgFugFygF_hFahFchFehFihFkhFmhFnhFrhFuhFvhF|hF}hF_iFdiFeiFhiFiiFxiFyiFziF}iF`jFbjFcjFgjFhjFnjFojFpjFqjFyjF}jF_kF`kFckFfkFhkFikFokFpkFvkFxkFzkF{kF|kF}kF~kFclFglFilFjlFklFllFmlFolFplFqlFtlFvlFwlFylF{lFdmFjmFkmFnmFpmFqmFumF{mF`nFcnFfnFinFmnFnnFonFqnFrnFtnFynF|nF}nFaoFdoFfoFjoFmoFqoFsoFtoFuoFyoF|oF~oF_pF`pFbpFcpFdpFepFfpFgpFnpFspFtpFwpFzpF~pF_qF`qFcqFeqFhqFjqFmqFnqFoqFsqFuqFarFbrFcrFerFfrFhrFirFjrFmrFqrFsrFxrF{rF|rF}rFasFcsFdsFksFtsFusFvsFysF{sF|sF}sF~sF_tF`tFctFdtFetFftFitFmtFqtFstFvtF|tF_uF`uFcuFduFeuFfuFguFiuFkuFluFmuFouFtuFuuFwuFxuFyuF{uF|uF~uFavFdvFhvFmvFnvFrvFuvFxvFyvF_wFewFiwFlwFmwFowFqwFrwFuwFywF`xFaxFexFfxFgxFjxFkxFlxFpxFqxFvxF~xF_yF`yFayFcyFnyFoyFryFsyFwyFxyFyyF}yF_zF`zFazFezFfzFhzFizFjzFlzFmzFqzFuzFvzFwzFxzFyzFzzF~zF_{F`{Fa{Fb{Fc{Fe{Fh{Fj{Fo{Ft{Fv{Fx{Fz{F|{F`|Fa|Fc|Fj|Fm|Fq|Fr|Fw|F}|F_}F`}Fa}Ff}Fh}Fk}Fl}Fn}Fp}Fq}Ft}Fv}Fy}Fz}F|}F`~Fa~Fb~Fd~Ff~Fh~Fi~Fj~Fk~Fm~Fo~Fx~Fz~F{~F}~F__G`_Ga_Gc_Gk_Gm_Gn_Go_Gr_Gu_Gw_Gx_G}_G_`G``Gb`Gc`Gg`Gj`Gl`Gm`Gn`Go`Gq`Gr`Gt`Gv`Gw`G|`G}`G~`G_aGaaGbaGcaGdaGfaGhaGjaGkaGlaGnaGpaGraGuaGyaG|aG}aG~aG_bG`bGbbGjbGnbGobGpbGsbGubGwbGzbG_cGbcGccGecGicGncGqcGtcGzcG|cGadGbdGcdGedGgdGhdGidGkdGldGndGodGsdGudGydG|dG}dG_eGbeGceGdeGeeGheGieGjeGleGmeGneGpeGseGueGweGxeGyeG~eG`fGbfGefGffGgfGifGjfGmfGnfGofGqfGtfGwfGxfGzfG|fG}fG_gGcgGdgGfgGjgGqgGrgGtgGwgGygG{gG`hGahGdhGfhGghGkhGnhGohGshGuhGwhGyhG{hG|hG~hG`iGbiGeiGfiGgiGiiGniGriGsiG`jGbjGdjGgjGhjGijGjjGkjGmjGnjG|jG}jG~jG_kG`kGakGbkGdkGekGikGmkGnkGqkGtkGwkGykGzkG{kG|kG~kGalGglGhlGilGklGolGplGqlGvlGylGzlG{lG|lG~lG`mGcmGdmGemGfmGhmGimGlmGpmGqmGsmGumGvmGwmG{mG|mG}mG_nGcnGdnGhnGknGlnGnnGonGqnGvnG{nG|nGfoGjoGkoGloGooGsoGvoGxoG|oG}oGcpGfpGhpGmpGtpGvpGwpGypGzpG_qGaqGhqGiqGjqGlqGoqGrqGsqGyqG|qGdrGhrGirGrrGtrGvrGyrG{rG|rG~rG_sGasGbsGesGfsGhsGjsGmsGnsGosGqsGvsG{sG|sGatGctGetGgtGktGntGotGptGutGwtGxtGytG{tG`uGauGbuGduGfuGiuGkuGouGruGsuGvuGxuGyuG|uG}uG~uG_vG`vGavGbvGcvGdvGgvGivGjvGkvGlvGtvGvvGwvGxvGzvG{vG}vGawGdwGfwGiwGmwGtwGvwGwwGywGzwG{wG|wG_xGdxGlxGuxGvxGwxGxxGyxGzxG{xG}xGfyGgyGhyGiyGkyGoyGqyGsyGvyGwyGxyGyyGzyG|yG~yG`zGizGlzGqzG|zG}zG_{G`{Gb{Ge{Gk{Gm{Gn{Gr{Gs{Gy{G{{G}{G~{G`|Ga|Gb|Gc|Gi|Gj|Gm|Gr|Gs|Gt|Gv|Gw|Gz|G{|G_}Ga}Ge}Gg}Gh}Gj}Gl}Go}Gp}Gt}Gu}Gz}G|}G}}G~}Gd~Ge~Gf~Gg~Gh~Gi~Gj~Gn~Go~Gq~Gr~Gw~Gy~G{~G|~G~~Gf_Hj_Hp_Hr_Hs_Ht_Hv_Hx_Hy_Hz_H{_H}_H_`H``Ha`Hf`Hh`Hi`Hk`Hl`Ho`Hr`Hs`Hv`H{`HaaHdaHfaHhaHjaHmaHnaHoaHpaHqaHraHuaHyaHzaH|aH}aH~aH`bHabHdbHfbHmbHpbHrbHsbHxbH{bH`cHacHbcHecHfcHgcHhcHicHjcHkcHlcHmcHncHocHpcHqcHrcHscHtcHvcHxcHzcH}cH_dH`dHedHgdHjdHldHmdHpdHrdHtdH|dH}dH_eHceHdeHfeHheHjeHteHueHweHyeH{eH_fH`fHafHdfHffHifHmfHnfHpfHtfH{fH|fH_gHbgHggHhgHigHjgHkgHsgHygHzgH|gH}gH_hHahHdhHfhHhhHihHkhHlhHvhHyhHzhH~hHaiHciHliHmiHniHoiHpiHriHsiHtiHuiHyiHajHgjHjjHojHsjHxjH{jH_kHbkHdkHjkHkkHmkHqkHrkHskHtkHukHykH|kH_lHalHblHclHelHnlHolH{lH|lH}lH~lHamHemHgmHmmHomHpmHsmHumHwmHymH{mH}mH_nH`nHanHbnHfnHhnHknHmnHonHrnHtnHxnH|nH~nH`oHaoHboHdoHfoHjoHloHpoHroHsoHtoHvoHwoHyoH~oH_pH`pHdpHepHhpHjpHlpHmpHnpHqpHvpHwpHxpHypH`qHaqHbqHeqHjqHlqHoqHqqHrqHtqHuqHvqHxqHyqHzqH{qHbrHdrHfrHhrHirHjrHlrHmrHnrHorHsrHurHwrHxrHyrH|rH~rH`sHasHksHnsHosHpsHxsH~sH`tHatHbtHctHdtHetHitHktHmtHotHptHttHvtHxtHztH}tH_uH`uHauHeuHkuHmuHpuHtuH{uH}uH~uHdvHevHhvHivHjvHmvHovHpvHqvHrvHsvHuvHvvHwvHxvH{vH}vH_wH`wHewHkwHmwHnwHrwHswHtwHuwHvwHxwHzwH{wH|wH_xHaxHcxHdxHexHfxHgxHjxHkxHqxHsxHyxH~xHbyHcyHiyHkyHlyHqyHsyHuyHvyHzyH}yH_zHazHczHdzHezHhzHmzHnzHszHuzHxzH|zH_{Hd{Hf{Hg{Hn{Ho{Hu{Hz{H{{H|{H}{Hd|He|Hf|Hl|Hm|Ho|Hr|Ht|Hv|Hc}He}Hh}Hi}Hk}Hl}Hm}Hn}Ho}Hp}Ht}Hz}H{}H|}H~}H_~H`~Hf~Hg~Hi~Hk~Hn~Hr~Hs~Hy~Hz~H}~Hf_Ih_Ik_Im_Io_Iq_I``Ie`Ig`Ih`Ir`It`Iv`Iy`Iz`I{`I}`I_aIbaIcaIfaIhaIjaIlaInaIraIxaI}aI`bIabIdbIkbIlbIsbIubIvbI{bI}bI_cIbcIfcIicIncIocIpcIrcIscIucIvcIwcIxcIycI|cI~cI`dIcdIfdIidIzdI~dI`eIbeIheIkeIleIteIueIveIweIyeI}eI_fIdfIffIhfIifIjfInfIofIrfIsfIwfIyfIzfI`gIagIdgIfgIigIkgIsgIvgI~gIchIfhIkhIyhI{hI|hI}hI_iIaiIeiIgiIliImiIsiIwiIxiIziI|iI~iI_jIajIbjIcjIdjImjItjIujIwjIxjIyjIzjI{jI~jIckIdkIfkIhkIjkImkIrkIskIykIzkI}kI`lIclIglIilIjlIllImlInlIplIqlItlI{lI|lIemIfmIkmImmInmIrmIsmItmIwmIymIzmI~mI_nIbnIfnIlnIpnIqnIxnI{nI|nIcoIeoIkoItoIuoIxoIapIbpIdpIepIgpIjpIkpIlpIppIvpIypI~pI`qIbqIeqIjqIlqIoqIqqItqIarIbrIcrIfrIirIjrImrIprIqrIrrIwrIyrI|rI~rIasIcsIdsIgsIisImsInsIpsIqsIwsIzsI`tIatIbtIftIhtIjtIktIltImtIntIstIutI|tIouIpuIwuI{uI`vIbvIcvIevIkvImvIpvItvIyvI}vI~vIawIbwIdwIewIgwIhwIowIrwItwIwwIzwI{wI|wI_xI`xIbxIfxIgxIixIlxImxIqxIyxI|xI}xI_yI`yIayIbyIeyIhyIkyInyItyIuyIwyIxyI}yI~yI_zIazIbzIdzIezIhzIlzInzIuzIxzI{zI|zI}zIb{Ic{Ig{Im{Iq{Is{Iu{Ix{I}{I~{Ih|Il|Iq|Iu|Ib}Ie}Ii}Ij}Ik}Im}Iu}Ix}I|}I_~Id~Ig~Ii~Il~Io~Ip~Iq~It~Iv~Iy~Ia_Jg_Jh_Jn_Jt_J_`J``Jb`Jj`Jw`J~`JfaJqaJraJxaJ_bJ`bJdbJgbJjbJmbJnbJqbJtbJwbJxbJzbJ`cJhcJmcJocJrcJucJ~cJadJcdJldJbeJkeJmeJreJseJueJveJyeJ{eJhfJkfJnfJofJsfJufJzfJagJbgJegJpgJtgJwgJ|gJ_hJahJfhJnhJqhJuhJxhJyhJzhJ{hJ}hJ_iJ`iJbiJhiJjiJoiJqiJsiJtiJ_jJojJyjJzjJ~jJfkJjkJlkJnkJokJ}kJ~kJ`lJclJflJqlJulJzlJ`mJcmJemJjmJ{mJlnJxnJynJ`oJhoJloJooJwoJ`pJbpJdpJepJspJtpJupJzpJbqJdqJgqJnqJqqJrqJsqJ~qJnrJtrJurJzrJ{rJcsJisJpsJgtJttJutJytJ_uJ`uJbuJeuJjuJ|uJ}uJxvJdwJgwJhwJjwJnwJpwJxwJcxJpxJrxJuxJ{xJ}xJbyJiyJkyJszJxzJyzJe{Jq{Jp|Jv|Jb}Jg~J|~Js`Kb`Ee`Eg`Eh`Ej`En`Es`Et`Eu`EaaEoaEsaEuaEvaExaE}aEcbEhbEnbEqbEsbEzbE}bEjcE{cEbdEedE_eEieEleEpeEffErfE|fE~fE_gEagEbgEcgEpgEsgEygE~gEhhEjhEmhEvhEgiEjiEmiEpiEtiEziEcjEijEpjExjE{jE|jE}jE~jE_kE`kEakEbkEckEdkEekEgkEikElkEnkEvkEykE|kEqlEylE{lEdmEgmEkmEdoE|oE}oE`pEbpEepEhpEdqEgqEiqEsqEbrEirEmrEtrEdsEhsEisEmsErsEftEjtEttE}tEluEquEsuE}uE~uE`vEcvEevElvEqvEuvExvEyvE|vE}vE~vE`wEawEbwEcwEewEfwEhwEjwErwE_xEcxEnxEtxEvxE|xEhyEpyEryE~yEgzEizEkzE_{Ef{Eh{En{Et{Ew{E|{E~{Ed|Ej|Er|Es|Et|Ev|Ee}En}Eo}Er}E`~Ed~Eg~Ek~Em~Eo~Eq~Ez~E{~Eq_Fs_Ft_Fu_Fv_Fw_Fz_F|_Fe`Fg`Fh`Fi`Fj`Fk`Fs`Fv`F`aFbaFdaFjaFnaF_bF`bFcbFgbFibFlbFqbFtbFxbF}bF_cFacFccFjcFocFpcFqcFtcFucFwcFzcF{cFadFgdFidFndFpdFrdFsdFtdF|dF_eFdeFgeFjeFpeFteF|eF~eF_fFgfFhfFpfFsfFxfF|fFbgFegFfgFggFpgFvgFwgF{gF|gF}gF~gFbhFdhFghFhhFjhFlhFshFthF`iFbiFliFmiFniFoiFpiFqiFriFuiFwiF|iF~iFjjFkjFmjFrjFujFvjFwjFxjF|jF~jFekFgkFmkFqkFukFykF_lF`lFblFdlFhlFnlFrlFulFxlFzlF|lF}lF~lF_mF`mFamFcmFemFfmFgmFhmFomFsmFvmFymF}mF~mFanFbnFenFgnFlnFsnFunFvnFwnFxnFznF~nF_oF`oFboFcoFgoFhoFkoFloFpoFroFxoFzoF{oF}oFipFlpFqpFrpFypF|pF}pFaqFgqFiqFkqFtqFvqFxqFyqF_rFgrFlrFtrFurFvrFwrFyrFzrF~rF`sFbsFfsFosFpsFssFwsFxsFzsFbtFjtFltFntFotFptFutFwtFxtF}tF~tFauFhuFjuFpuFsuFvuFzuF_vF`vFbvFcvFfvFgvFjvFlvFovFqvFvvF{vF}vF~vF`wFbwFdwFfwFhwFkwFnwFpwFxwFzwF{wF|wF}wF~wF_xFnxFoxFrxFsxFtxFuxFdyFfyFiyFjyFkyFmyFqyFvyFzyF{yF|yF~yFnzFpzFszFtzF}zFi{Fk{Fm{Fn{Fr{Fu{Fw{Fy{F{{F}{F_|Fe|Ff|Fg|Fh|Fi|Fk|Fl|Fn|Fo|Fp|Fs|Fv|Fx|Fz|F||F~|Fb}Fe}Fj}Fr}Fu}F{}F}}F_~Fe~Fg~Fl~Fp~Fq~Fr~Fs~Ft~Fu~Fv~Fb_Ge_Gg_Gh_Gl_Gp_Gq_Gs_Gt_Gv_G~_Gd`Gh`Gi`Gk`Gp`Gs`Gu`Gx`Gy`G{`GeaGmaGoaGqaGsaGtaGvaGwaGxaGzaG{aGabGcbGdbGfbGibGkbGrbGybG{bG}bG~bG`cGacGdcGgcGhcGjcGlcGocGucGvcGwcGxcG{cG}cG`dGfdGjdGmdGpdGqdGtdGvdGxdGzdGaeGfeGqeGreGteGzeG{eG|eG}eG_fGkfGpfGrfGsfGvfGyfG~fGagGegGggGhgGkgGlgGmgGngGpgGsgGvgGxgGzgG}gG_hGbhGchGehGjhGqhGrhGthGvhGxhG}hGaiGdiGhiGjiGmiGpiGviGxiGyiGziG{iG|iG}iG_jGajGcjGejGojGsjGtjGvjGwjGxjGyjGzjGgkGhkGlkGpkGrkGukGvkGxkG}kG_lGclGelGllGnlGrlGtlGulGwlG}lG_mGamGkmGmmGrmGtmGzmGanGenGinGmnGpnGrnGtnGunGwnGznG~nG_oG`oGboGeoGgoGioGnoGpoGroGyoGzoG_pG`pGapGbpGdpGgpGipGjpGkpGnpGrpGspGupGxpG{pG|pG}pG`qGbqGcqGdqGeqGfqGkqGmqGnqGpqGtqGuqGxqGzqG_rGerGjrGkrGlrGmrGnrGorGprGqrGsrGxrGzrG}rG`sGdsGisGksGlsGrsGtsGusGwsG}sG~sG`tGjtGrtGstGttGztG}tG~tG_uGcuGguGhuGluGnuGuuGwuG{uGevGfvGhvGmvGqvGrvGsvGuvGyvG|vG~vGbwGkwGqwGrwGswGuwGxwG`xGaxGfxGhxGkxGmxGnxGoxGpxGqxGtxG|xG~xG`yGbyGdyGeyGjyGlyGnyGryG{yG}yG_zGazGbzGczGgzGhzGkzGmzGozGpzGrzGszGtzGuzGvzGwzGyzG{zG~zGa{Gc{Gd{Gf{Gg{Gh{Gi{Gl{Gq{Gu{Gw{Gx{Gz{G_|Gd|Gf|Gh|Gk|Gl|Go|Gq|Gy|G}|G~|G`}Gc}Gd}Gf}Gi}Gk}Gm}Gn}Gs}Gv}Gw}Gy}G{}G_~Ga~Gb~Gc~Gk~Gl~Gm~Gt~Gu~Gv~Gx~G}~G__H`_Hb_Hc_He_Hg_Hi_Hk_Hn_Hq_Hu_Hw_H|_H~_Hb`Hc`He`Hg`Hm`Hn`Hp`Hq`Ht`Hu`Hy`Hz`H}`H~`HbaHcaHeaHgaHiaHkaHsaHtaHvaHwaH_bHbbHebHgbHhbHjbHkbHlbHnbHobHqbHtbHubHzbH}bH~bHccHucHwcHycH|cHadHbdHcdHddHfdHhdHidHkdHodHsdHvdHwdHxdHydH{dH~dH`eHaeHeeHgeHieHkeHmeHoeHpeHseHveHxeH|eH}eHbfHefHgfHhfHjfHofHqfHrfHvfHxfHyfHzfH}fH~fH`gHagHcgHdgHfgHlgHngHogHpgHqgHrgHtgHugHvgHxgH{gH~gH`hHchHehHjhHnhHphHrhHshHthHuhH{hH|hH_iHbiHdiHfiHgiHhiHiiHkiHqiHviHxiHziH{iH|iH}iHbjHcjHdjHejHfjHhjHijHkjHljHnjHpjHrjHtjHujHvjHwjHyjHzjH|jH}jH~jH`kHckHekHfkHgkHhkHikHlkHnkHvkHxkH`lHdlHglHllHmlHplHqlHrlHslHtlHvlHwlHxlHylHzlH`mHbmHdmHfmHhmHimHjmHkmHlmHnmHrmHtmHzmH|mH~mHcnHenHgnHinHjnHlnHnnHpnHqnHsnHvnHznH}nH_oHcoHeoHgoHhoHioHmoHooHqoHuoHxoHzoH{oH|oH}oHcpHipHopHrpHspHupH|pH_qHcqHdqHfqHgqHkqHmqHpqHwqH|qH~qH_rH`rHarHerHgrHkrHprHrrHtrHvrHzrH{rH_sHcsHdsHgsHhsHisHlsHqsHrsHssHtsHusHvsHwsHysH|sH}sHgtHjtHltHntHqtHrtHutHwtHytH|tH~tHcuHduHguHhuHiuHjuHluHnuHouHquHsuHuuHwuHxuHzuH|uH_vH`vHavHbvHcvHfvHlvHnvHyvHzvH|vHawHdwHfwHgwHiwHjwHlwHowHpwHqwHwwHywH}wH~wH`xHbxHlxHmxHoxHpxHrxHtxHuxHvxHwxHxxHzxH{xH|xH}xH_yHayHdyHeyHhyHjyHmyHnyHpyHtyHwyHyyH{yH|yH~yH`zHbzHizHjzHkzHlzHozHpzHrzHvzHwzHyzHzzH{zH}zH~zH`{Ha{Hb{Hc{Hi{Hk{Hl{Hq{Hr{Hv{Hw{Hx{Hy{H~{H_|H`|Ha|Hc|Hi|Hk|Hn|Hp|Hq|Hz|H||H}|H~|H_}Ha}Hb}Hd}Hf}Hg}Hj}Hq}Hr}Hs}Hu}Hv}Hw}Hx}Hy}H}}Hb~Hc~Hd~He~Hh~Hj~Hl~Hm~Hp~Hq~Ht~Hu~Hv~Hw~Hx~H{~H|~H~~H__I`_Ib_Ic_Id_Ie_Ig_Ii_Il_In_Ip_Ir_Is_It_Iu_Iv_Iw_Iy_Iz_I|_I}_I_`Ia`Ib`Ic`Id`If`Ii`Ij`Ik`Il`Im`In`Io`Ip`Iq`Is`Iw`Ix`I~`I`aIaaIdaIeaIgaIiaIkaImaIpaIqaIsaIvaIyaIzaI{aI|aI~aI_bIcbIebIfbIhbIibIjbInbIobIqbItbIwbIybIzbI|bI~bI`cIacIccIdcIgcIjcIkcIlcItcI{cI}cIadIedIgdIhdIjdIkdIldIndIpdIqdIrdIsdItdIudIvdIwdIxdIydI{dI|dI}dI_eIaeIceIdeIeeIfeIgeIieIjeIneIoeIpeIqeIreIxeI|eI~eIafIcfIefIgfIkfIlfImfIpfIqfItfIufIxfI{fI}fI~fI_gIbgIcgIegIggIjgIlgImgIngIogIpgIqgIrgItgIugIwgIxgIygIzgI{gI|gI}gI_hIahIbhIdhIehIghIhhIihIjhIlhImhInhIohIphIqhIrhIshIthIuhIvhIxhI~hI`iIbiIciIdiIfiIhiIiiIjiIkiIniIoiIpiIqiIriIuiIviIyiI{iI}iI`jIejIgjIhjIijIjjIkjIljInjIojIpjIqjIrjIsjIvjI|jI}jI_kI`kIakIbkIgkIikIkkIlkInkIpkIqkItkIukIvkIwkIxkI{kI|kI~kIalIblIdlIelIflIhlIklIolIrlIslIulIvlIwlIxlIylIzlI~lI_mI`mIamIcmIdmIgmIhmIjmIlmIqmIumIvmIxmI{mI|mI}mI`nIanIcnIenIgnIinIknImnInnIonIrnItnIunIvnIwnIznI}nI~nIboIdoIfoIgoIhoIjoIloImoInoIooIpoIqoIroIsoIvoIwoIyoIzoI{oI}oI~oI_pI`pIcpIfpIhpIipImpInpIqpIrpIspItpIupIwpIzpI|pI}pI_qIaqIcqIdqIfqIgqIhqIiqIkqImqInqIpqIrqIsqIuqIvqIwqIxqIyqIzqI{qI|qI}qI~qI_rI`rIerIgrIhrIkrIlrInrIorIsrItrIurIvrIxrIzrI{rI}rI_sI`sIbsIesIfsIhsIjsIksIlsIosIrsIssItsIusIvsIxsIysI{sI|sI}sI~sIdtIetIgtIitIptIqtIrtIttIwtIxtIytIztI{tI}tI~tI_uI`uIauIduIeuIfuIguIhuIiuIjuIkuIluInuIquIsuItuIuuIxuIyuI|uI}uI~uI_vIavIdvIfvIhvIivIjvIlvInvIovIqvIrvIsvIuvIvvIwvIxvI{vI|vI_wI`wIcwIfwIiwIjwIlwInwIqwIswIuwIxwIywI~wIaxIcxIdxIexIhxIjxIkxInxIoxIrxIsxItxIuxIvxIwxIxxIzxI{xI~xIcyIdyIfyIgyIiyIjyIlyImyIoyIpyIryIsyIvyIyyIzyI{yI|yIczIfzIgzIizIkzImzIozIpzIqzIrzItzIvzIwzIyzIzzI~zI_{I`{Ia{Ie{If{Ih{Ii{Ij{Ik{Il{Io{Ip{Ir{It{Iv{Iw{Iy{Iz{I{{I|{I`|Ia|Ib|Ic|Id|Ie|If|Ig|Ii|Ik|Im|In|Io|Ip|Ir|Is|It|Iv|Ix|Iz|I||I}|I~|I_}I`}Ia}Ic}Id}If}Ig}Ih}Il}In}Io}Ip}Iq}Ir}Is}It}Iv}Iw}Iy}Iz}I{}I}}I~}I`~Ia~Ib~Ic~Ie~If~Ih~Ij~Ik~Im~In~Ir~Is~Iu~Ix~Iz~I{~I|~I}~I~~I__J`_Jb_Jc_Jd_Je_Jf_Ji_Jj_Jk_Jl_Jm_Jo_Jp_Jq_Jr_Js_Ju_Jv_Jw_Jx_Jy_Jz_J{_J|_J~_Ja`Jd`Je`Jf`Jg`Jh`Ji`Jk`Jl`Jm`Jn`Jo`Jp`Jq`Jr`Js`Jt`Ju`Jv`Jx`Jy`Jz`J{`J|`J}`J_aJ`aJaaJbaJcaJdaJgaJhaJkaJlaJnaJoaJpaJsaJtaJuaJvaJwaJyaJzaJ{aJ|aJ}aJ~aJabJbbJcbJebJfbJhbJibJkbJlbJobJpbJrbJsbJubJvbJybJ{bJ|bJ}bJ~bJ_cJacJbcJccJdcJecJfcJgcJicJjcJkcJlcJncJpcJqcJscJtcJvcJwcJycJzcJ{cJ|cJ}cJ_dJ`dJbdJddJedJfdJgdJhdJidJkdJmdJndJodJpdJqdJrdJsdJtdJudJvdJwdJxdJydJzdJ{dJ|dJ}dJ~dJ_eJ`eJaeJceJdeJeeJfeJgeJheJieJjeJleJneJoeJpeJqeJteJweJxeJzeJ|eJ}eJ~eJ_fJ`fJafJbfJcfJdfJefJffJgfJifJjfJlfJmfJpfJqfJrfJtfJvfJwfJxfJyfJ|fJ}fJ~fJ_gJ`gJcgJdgJfgJggJhgJigJjgJkgJlgJmgJngJogJqgJrgJsgJugJvgJxgJygJzgJ{gJ~gJ`hJbhJchJdhJehJghJhhJihJjhJkhJlhJmhJphJrhJshJthJwhJ|hJ~hJaiJciJdiJeiJfiJgiJiiJkiJliJmiJniJpiJriJviJwiJxiJyiJziJ{iJ|iJ}iJ~iJ`jJajJbjJcjJejJfjJgjJhjJijJkjJljJmjJnjJpjJqjJrjJsjJtjJujJvjJwjJxjJ{jJ|jJ}jJ_kJ`kJakJbkJckJdkJekJgkJhkJikJkkJmkJpkJqkJrkJskJtkJukJvkJwkJxkJykJzkJ{kJ|kJ_lJalJblJdlJelJglJilJjlJklJllJmlJnlJolJplJrlJslJtlJvlJwlJxlJ{lJ|lJ}lJ~lJ_mJamJbmJdmJfmJgmJhmJimJkmJlmJmmJnmJomJpmJqmJrmJsmJtmJvmJwmJxmJymJzmJ|mJ}mJ~mJ_nJ`nJanJbnJcnJdnJenJfnJgnJhnJinJjnJknJmnJnnJonJpnJqnJrnJsnJtnJunJvnJwnJznJ{nJ|nJ}nJ~nJ_oJaoJboJcoJdoJeoJfoJgoJioJjoJkoJmoJnoJqoJroJsoJtoJuoJvoJxoJyoJzoJ{oJ|oJ}oJ~oJ_pJapJcpJfpJgpJhpJipJjpJkpJlpJmpJnpJopJppJqpJrpJvpJwpJxpJypJ{pJ|pJ}pJ_qJ`qJaqJcqJeqJfqJhqJiqJjqJkqJlqJmqJoqJpqJtqJuqJvqJwqJxqJyqJzqJ{qJ|qJ}qJ_rJ`rJarJbrJcrJdrJerJfrJgrJhrJirJjrJkrJlrJmrJorJprJqrJrrJsrJvrJwrJxrJyrJ|rJ}rJ~rJ_sJ`sJasJbsJdsJesJfsJgsJhsJjsJksJlsJmsJnsJosJqsJrsJssJtsJusJvsJwsJxsJysJzsJ{sJ|sJ}sJ~sJ_tJ`tJatJbtJctJdtJetJftJhtJitJjtJktJltJmtJotJptJqtJrtJstJvtJwtJxtJztJ{tJ|tJ}tJ~tJauJcuJduJfuJguJhuJiuJkuJluJmuJnuJouJpuJquJruJsuJtuJuuJvuJwuJxuJyuJzuJ{uJ~uJ_vJ`vJavJbvJcvJdvJevJfvJgvJhvJivJjvJkvJlvJmvJnvJovJpvJqvJrvJsvJtvJuvJvvJwvJyvJzvJ{vJ|vJ}vJ~vJ_wJ`wJawJbwJcwJewJfwJiwJkwJlwJmwJowJqwJrwJswJtwJuwJvwJwwJywJzwJ{wJ|wJ}wJ~wJ_xJ`xJaxJbxJdxJexJfxJgxJhxJixJjxJkxJlxJmxJnxJoxJqxJsxJtxJvxJwxJxxJyxJzxJ|xJ~xJ_yJ`yJayJcyJdyJeyJfyJgyJhyJjyJlyJmyJnyJoyJpyJqyJryJsyJtyJuyJvyJwyJxyJyyJzyJ{yJ|yJ}yJ~yJ_zJ`zJazJbzJczJdzJezJfzJgzJhzJizJjzJkzJlzJmzJnzJozJpzJqzJrzJtzJuzJvzJwzJzzJ{zJ|zJ}zJ~zJ_{J`{Ja{Jb{Jc{Jd{Jf{Jg{Jh{Ji{Jj{Jk{Jl{Jm{Jn{Jo{Jp{Jr{Js{Jt{Ju{Jv{Jw{Jx{Jy{Jz{J{{J|{J}{J~{J_|J`|Ja|Jb|Jc|Jd|Je|Jf|Jg|Jh|Ji|Jj|Jk|Jl|Jm|Jn|Jo|Jq|Jr|Js|Jt|Ju|Jw|Jx|Jy|Jz|J{|J||J}|J~|J_}J`}Ja}Jc}Jd}Je}Jf}Jg}Jh}Ji}Jj}Jk}Jl}Jm}Jn}Jo}Jp}Jq}Jr}Js}Jt}Ju}Jv}Jw}Jx}Jy}Jz}J{}J|}J}}J~}J_~J`~Ja~Jb~Jc~Jd~Je~Jf~Jh~Ji~Jj~Jk~Jl~Jm~Jn~Jo~Jp~Jq~Jr~Js~Jt~Ju~Jv~Jw~Jx~Jy~Jz~J{~J}~J~~J__K`_Ka_Kb_Kc_Kd_Ke_Kf_Kg_Kh_Ki_Kj_Kk_Kl_Km_Kn_Ko_Kp_Kq_Kr_Ks_Kt_Ku_Kv_Kw_Kx_Ky_Kz_K{_K|_K}_K~_K_`K``Ka`Kb`Kc`Kd`Ke`Kf`Kg`Kh`Ki`Kj`Kk`Kl`Km`Kn`Ko`Kp`Kq`Kr`Kt`Ku`Kv`Kw`Kx`Ky`Kz`K{`K|`K}`K~`K_aK`aK|tG???UU??????sB??zC??OiE??U??zC??v@v@UO??UnAnA?OsB?U\????xOhHzC??@@??@wB@??O?sB???@?@@?@@@@D}O]xPj@@iE@O}A}A@p@}AhHv@O@?zC@@|A??tI]??]nAD?????@@@\??wBA@@p@?D@@{EoA@@v@??@f@{E?|A??dQnA@A{E}A@??@}C@?v@?g@j@@?g@@j@]?@fD?@O@iEsB@U]AmAD???@O?@?AgDoAU?WC?W?@DDA???@?f@U@O??UdF?@j@nAM@A?CzB@?oAnA?|CB@?DA@UD@B|Ag@@ACC@?O?B???AsBA?@@@@@A@@A?@zB|ADhE?@@?@@\BnAv@A@@@?gD??@f@@@|A?Bg@?@???A?{E??B?iF?D??@|B@UCC?@@?zBAA???C@mFj@?Ok@??B?@iE??BB\D?]@AoACA?rJ@??BA]@xOC?DDf@?@@CsBB|ACB@AC??wBD@@??pJ?@CADA?M@?DC??@AmJ@@B@@ACD@@?W?????Uk@?C??GdF???@?~@?A?D@@???O?GB???GD?????pJ?}@A`F?CgDBEM?B\rH]@jJ?oFDD@}C?@@AvB@@f@}OCC??G?qAD@Eqi@?@B?GB?@@CABAD]BO@A??A??~@rJCDE@@ACBEmJ@k@CGFB@B@@@sJG@k@@??~@@?F?@??qv@@@@?C@sJBM@U@v@C?D?`F?FAB@BA~J?tUtIfDC?@wB?@mD???IB@@@EGC?Bez@GD?C@W{B@\?Q@@???A?@`@@?k@G?@f@@}A@E@f@CCB@FEG@v@D?@QCG?@E??F@@G@BBMDA??OAD?B@@J??@H?@?~U?Eg@CDB@G@B@@H?@?vTDB?@@?G?B@@@WCO?OB?A??B@@DBJF@@@??v@???g@@E?O@@@BB@@BHAB?I@H@BB?O@?AE@~@A@?@@rAI~E?D@@E?g@@GQ@@BHBxH??@c~@DB@A@@@AA??AuHB@BOp@?zF?@bFABBKCCWfCAaD?@@@@@@@@DADHjS?Bk@DABDB?AfAW?C@`FAEAB@@@@@@GB@rAkDDABCuK?@@@KDM?ADB?uKGDEF?DEH`J`C~EWA?V@h@C@@A?E\?BAeBF@B@@@@A??\?MEDy@E?EI??f@A?FBBADByK@@qD??Bcm@@An}@@?AFH?BBbC?EJ??AEAF@@@BECACeBR@AfDQBFBECGCB@E@JD\@@@@GECEE??A?@EACBuA??ADk@BHB@hH??@?EE~@@hACE@??|B??g@B?@AC@@wB}AEVj@@@@@????AqAhAABA?lUk@CD@E]E?A?vB~A?D?IjJQE@AD?ACEB@AmAFCVJABrA??H?EqAt@EADoABlJH??E@@uK]AI@@@@eKAmD???v@mAAC?@FA?@@A?oWCACIEg@@?F}C??@@???AmFCAF@@j@eL@A?B@@??DfW@??f@CeKRy@?@@JBAEG@????ElBy_ADD?Fh@B@@qs@MB@A???@@TA?_K?@@@@KB??@]?bdAF@REjJ@??@@\@z@f@E@dCA?CC?`CW?J?@?KE@@hAGC??A?EDMFgA?@B@@@E?@?@?FH?@?HDF@k@?@TJ?DKD@@ADCg@DCOW?xz@OJGImFG@@MH?@??ET@?DArWjB}F@ARsL@@|T?HQD?HCDuA?@@A@@uHAgD??Ij@?f@?B@k@?D?\?dJE@?_L~@@??JuDI?EKhAMAE@@?CADH@D?@ECCIBI@OE?@?i`A@]?KR?@@CCg@Bp@?@?AC??BFM@GDM@H?@KG@BlfABCT@@@H@EY?@lbA?Aiz@???K@AqDB?D?D@@@@E@CACFIf@@@DA@D@A?GlC@t@DD@@@@@@???Qnz@@lB??@DH?@@@KCFqA@hA??`@TDQ??G@B@EChC@GF@H@D@ADDeLOCt@BCg@?E?@@?@@JDDD?@@@DJHFBE@@@@CQO?J@@D?B@?@@QC~@?@?@?A?gOC?@XWeCH@CLp@?DBTF@CDB@mDC?URgAzCF@@H??KBCBB@@@A?kX?@@@@N?EB|dACj@}JE@lw@?hCE@@@DGTD??lGGC?JC??HEAI??J@@iACSuX^rA?A??A|@D?F}@?@BA?KBDD@@@?@HF@KhACCD?B?gFF?Bj~@?@A@@@V@E?@@KI@|@C@?AFF@B~@p@L?RB@@@??D?CAC?EREH?DG?A@GCCF@L?@?BO?E?DAE@A??@ACBqAAB@@A@EGD??@H@@AMwDA?B?@?@@@EADDKax@I?rAAC?@E?@A`@?@@@@A?AB@E@@@GU?B@L?@H?WCIB??~J?KjBEABADCE@?GD?@@?iA|@OE@WbLtJFDF@EM@`BCC?BGg@D?I?EIIf@DIAT?BRmCj@E@AF?@A?`WBM@@@HFB@@@E@QG?E@?@AH`K@?CnDB@@@K`Ct@k@E@ALdFLOLB@@?DDE?@hC?CImjA@?@@@?@N@YnDCjB@MAF@@@C?BR@@@?@AGE?F@@@HA?HDD@Z@@A@B@E@@BoL@G@@?ADFBB@@@Hvz@?@@@@@?DJ?AA?kT@@???@@GDDuCF??@fA@JMD?G@?wv@@@HC]D?Aq@?@ApD_KA@IF@nBCDA?EzLGC@G?B?@A?@GiF@B@?V@ACcAEAJBD@DA?@@A@@`dA?NuA@@@EEG@BQ_GACDVqA?G?uG@m@?`y@@E@KQFrGdGAB?@A@iM?@X@??CLuWDhA@?H?B@?@NB?@A?GC@@DDmA|K@A@??j@C|KgO@SABAF?B\?U?HEGF~Z@?K?EEC@??N?A?EA^`J?Mc@?XGeL@@E@ErJA@JB@S{I@@@??hA@K?lBA?k@@@?F@F@@@GeCEE@C\b@ADC?j@@?L@@@shACC`@X@AUrA?NBXMG]wWU?rA?@@H?@A@A?FB?KaGA?NC|@?@h@Df@QC@EKCD?@DoB`@`@F@K??EoLtFBDj@AFG??QJF@CA}Y?LI?@?@?B@@@B?CC?e@??@?@jSADBKCC??@EDtU]]tI@CDBh~@@pZHCwDvnA@@@KOg@@CAmM@@CCG?@@K?niA@DDBCDIExJEA@c@_DuG?hCN@?p@?\@@?@p@D?@EG?eBMfAMDNFBEl@?E@@@@??B@E@B??^F@@?L@DECsnAKEDCH`M??@@aD@?EABBH@@oU?t@?dACCEG?CCB@Avs@@@@@@@T?dGB@@@UA??EABKB?D??@@m@nqAACCIHCXVrGCCfDA?xG@@@@@CEGBsC@@?@@E^gA@QE@nBF@TC@FF{Y@}F?EuX@@AFps@ADF{@@C??mK`B??CD@@@?@A?uA???OCI?GF@@@@^CS\EEAGE?oC@@@KxM???@O@?D?uGE@ADF@@B@?}@Ht@M?L@@ASEELvGXMsjANwK@@@H@?@@`B}@BHzqA@ECDABT@e@???ADzF?Q?iA@Ev[JAB?|GI@GEE@@HDDFI@@OC}YBB@ADI@HC?I@D?AgaAFME?Bl`ANDDF@tDLDCFjTvfAfCKDCaAlBN@m@G????UBnFEH@Ax@@@@D?AD????@N@@AC@?F@JCiB?aArkAGFSBd@@C?Ac@DB@?EaA?@GV@@@@???R@DADFu@aA?G?@?^M@@@ADAD?@DCWFc@?lU?@ADH??F@@ACC~Z@ACuCaAOCCP@?L@@KDT@AB?GB?mB?QBwW_G@xJJlK`@?ECD@B@@LC?@MGBmAqD@@AD@DgAlB?KF^nL[?@?_GBB@@EA?BB|@?_I?@@@H@@ECCoBT?BO@@a@WSEHd@@AFQLFE@SAjGB@M@LR^FEGCC?w}@@@@CGOsJIK@KC?@?@d@Ac@FF?@?rAGCDFI@CJC|@DeKvGUHB@MAB@@mD`FDKp@N@@?@EBB@@@BAqSgB?E@H?@RAVFB@@@@@@?BB@@@@@HPL@oBHA?B@R??D@@@@@^BBhA??JHTy@@@?T@H@A@?@G?@|D@EC?Z?jB@@GENDDF?@@A???@@AEKUZLECiA}~@@eBAQ@?BnB??OBSEVLD?]D?\C?B@@@?CoC?@?B?y@@gA?DrjA?XG@O?ACCbA?}G?mBLB?@A?Es@AEADB@@@JC?B?GBE?DDR@fD@@AB??@@@D@B@@[dAD?@DDJkGBA@B@?dAdAwBy`A@@iU?CEE@AC_@|[@@?D?TE@@@EJ@CiL@@@HB@E@`ADABD@?@H?Z@^??LgBxJBZFA??@p@@A?A?DC@?E@@?DD?pBIHQBmB@?D?c{@@@ADP??d@??CBvB@EG@@zBT^CDZ@?AAB?@E@?@?F@gu@@A@@EAQiFB@@A?BQE@A}AY?HD?@@P@@ABSEAB@@@@B@A|F?H?B?uZABAIe@oBQ@?@?vbA@pWq@KI@@?CDMt@C@uALCDhjABExxA?@~S@@@CABD@@J@QCoBK??JiI?|@?F@@DAD?E@iAFC@C@@@B@JF|FFE@@EmA?JPACMABB@ABFM@@@A~SuGKn@B@@@@D?yMt@_V?KDvGmAEamA?@H?@R@AkMABBu@@@a@BB@@@@@?D?@?Ck@d@@BAB@@@?CCxG?@kKG?@ApB?@ACpq@d@ADTrtAgT?ADDB`AACD@_kAibAj[EQ@AiA?@HBR@@@AI@BCCAGEdGG?@LCj^bApD?E?F@G@`@B@@EKABl@~UEE?ACC?B@@@DJmUpWtFM@ADIF??loA?@?a@B@BEE@c@?D@XEiHevA?~J?H@?G@o`APc@CXN@@J@@@BEA@@C?@l@??R?EH?q@@@KC?dA?BvT@@@??H?@@JCP?a@aDxA?AC@?NP@@@A@l@DD?@@@LvAF@GB?@@AB?@@EW@@A_^@EAFpJaE?GBwC?Hu@@ElJ^FB[@@rHa[K?F?zADl@?@@@H@@BmzA?[rxAA~KN@@@@@GsCDB@?@BG@@DAH?|A@@DuDAB?DDdC?@@G?B?R@PK?BB@AHD@mB@G?EtDK`MWDBB@E@?|CDDAB@@@?@@?@@@@A@M@@@DD@@N??@@@A??BB@D??AE@Dk]A@B@@A?D@@@@@A[@?ADm@xC??@AB@@B?VlyA?tCcAA|@@?A@BBJv@uD?uD?D?@DFHABT@?@NCmP}\?BLB?@@DD@@CA@BE@@VE?oC@DGMC`xAEBG?EKFE@@@AB??AB@@@@@@@BBB@@@@D@@@@@@A[VE@ABAB@@@@HAF@@AnHBBA?JBBADB@@@AB@@@@E@@AA??P?ADD@???@@Bc]@?G?@B@@@wDAPDGD@@isAFk@@@@HF@@E@HhL?@@A@??G@PEHCDBTnFGexArGEACA@@@d{AX?DHF@?w^D?bAFAEEdF?BP?AN?B@GFB@@EQlpABBkJqF?@@CJCa[EA?C@P@@EHDF@@dCABFESGB@DDAEE@?C?@?zwAGCD@@@B@A?F@?@E@A@ApjAD_@gD@CDjABE@@^BOA?FGj[@E@BGR??B@GL??A?BGl^CD@KVFC@nL@?h@aE?@oFFA}^D?BH@@AMGF@dAD@@?ZBFB@JD?@C?EH@@BH@@@?y@???hxA?F?CB@@@CpBeBitAB@hU@?ACS@@ACDEN?D?kDczAqM?yAG?PG@@@HB??jG@??zsAX??FuW@@@@?h[FpkA~aA@bE?@R[H{@@@?AF@HFG?C@M@@@s@??D@lB@aHxAA?Fj}ADC?@B_lA@{YJ?h@@@AeB@Qc@ACC|BE@@@HCBCd@@QF@MAFABh]aA@tO??yA?zYDaFukA@B@@?@@AB@oWoy@@ADF@CDLM@ACCuTm@?AnF@@A?BA_@C??BE[EHDB?x}AM@@@GC|B@E@@AF@`@ADC?E?@GDP@?kA@A_@FU@DU?DoR??B@@ACTG|BF@?H?@@uAfPC??@Aj^?@@Aq[c@CD?`@@d@ABx^@@@@Aa@Wy@c@?@~YH?@@?R@@@@ZAoC??DB@?c@bA?HACCy@WE~vAD_@?N]@@EO@}@TAD@@@B??w@JBjC@B??wDJCjwAe_BcjAJ?sC@Ey_BoCJ?BG~@?[@H?@HDq[??@ED@@@@VM@B?PsCL@E?@l@@@EA?@@fW?iLoU@@@A?kAfN@@?C?@@@LDD?E@K??CCIBSEJtYoNGC@FR?LqB?@HBMt@?l@?@EG@EEK?WHB@@CJcAA}@A?@?@?@?@fL|@CmDbAkv@MkMCkABB@E?@A?D@@G?MDAAGU@AqQ??@CACFEBE@?xA?@Stw@EHzlA@?DD@EsLCD\B@B?@ACACDHs_@A@_@Av_AhCE@aHADD@@H?PEB@@@AllA@B?A@GDCdAE?@AE@}rAO?@??M@@@ADCuA@G@@EkD?_@`C?OHF?iBrGJu\@@@EABBP@@DJDBy@@B?@@A~xA@u@?DG@HBvBCEHzBFqAFbEDCgA[SEBRcAgBFQLuCCE?GB?@a@kA@@@@HDN@@?@DAxA@?A@B?@@A@@ACCl_B@Q@AF@@ACCB@C~H@A?FS@@@@A?}dA@@Ia_@CD~@D?BB?ACCAwCGLPfL@IA?gAADkA?@@E|]?BEJB@C{@E?APaG@aE@@GCo_@h@@AZ@d@?DCD?IDDkAG??E?`A@CFBN?IGBB@?C}C@F?O?ABK?@t@?TqN`BB@He}@u@@@@@N?K`JB@fN@@ACSDQ@EH?dEBdC@GC?EE@LA?vM@@@@@A?D?DuC@@?ABE??P@T@CnA?oAi\E}@?ADF@?NDF@AB?G?@B@J??gBES@A??@HA@J??@H?hwA@@@@@AxCEAdCE?DCm@\hCKDD_@@NiI@@x`BjA?@J??A?AA?S@h@WDLD?M@@HuT@@jU?Eu@ABAD@D@@B@G?E@@AV@?CLD?TADU??AAE@y@Z??CI?@EACB?AEADFe@l@~HERe}A?AlACABBB@@@Rd@ACCiACD@@DII@@?B@@?mbB@G?A?CEMyAE@G?BFEagA@@HD?@@wU@EKf{AD_hA@@@G?@AqcA@A?@ACD?PE@ACC`Mn@xCzA?@A?@@O@@HcA@@@?AGkJIHBF@?D?@GacBSE?B?B@@@@@A??@@P??@A?CB?@@G@VADB@@@C@LCC@??cA@{@HMmMP@a@D@Gn@?DADmBgBE@Da`@B}jAF|]?u\CCqAHDD@@AF?CDa@Q@D|L@@?AABRoCA?D@ET?CALCC_@@I@n@mI@DACi_@E@ACI?y@RvAG?@ocB?AxCCh@u@@IDAD@EL@@qNA@@@ME?FI@@HFB@~DsC???wlAlAE@@@KF@E_PCD?B@@EE`ALEGB@EDD@I@J?eCvM{@zFEE{MWCGD}F[`A@njAA?@@?rbBC@P@CeJDB@??HCF@@@@GCBB?Xl@FF@@@r}A?D~D@@@@AFsCL[@|@CbLA?DaE@?{rA@AA@@jtA@BEK`E?AaABd@HCD?@yMh@?GfGIBo~A@DAbEB???Eu@@EGpbBDB@@DLD@@@@@@?@??BBEEH?@@j_@@EAC@?F@APVACD?IS@B?aE[@S@?B?PK`}A@C?F_N@@H@B@@@AC??XE@?hzAVk]?fCDC??@P\^Bw@AF?d@DGBSE?@AlA?T?AGFE@@AB@@@@AD@@DAD?E@@Bf@ADdY@@@?c@?K?}G@@ADn^@B@@HjAF?B?cA?EA@@DDL?bbB@GF??OAF@@@?iMG_@E?|MCCjBi_@@EoBAAB@EJCbABEE?@JBE@tNnBW?@DHC?X@ZzA?DGvGS@`CK``@`EG@@@AD?ELCjA?E@AB@GCBw]ENC?O?@@@xGmM??BZa`AG@DCJBwCACz{A@[D?H?BB@@@@FAE?JFBE@?@mAADF@PB@@?@nBBpyA@E|LbAl@B@@@@KCB@@DHI@MAFBwmA?@{`B@@@AB@@G?@@@?C_@ENCibB@EA_@D@@H@@@@B@@m\?c@H`@@DA@@@B??@?DBE@DA@m@?B@@wACAB@CCmJ^yCh@@CzA?h@xNh@h@DD@TV???@zFyAB@EJDg@IxzA@BAF?@KDnhA@@A?FMBmwAQA?R?AD?@Bs_@@oqAG?EAD~Ku@@@L@?@@??GB@@L@??DAnBF@HF@@@EHiI@E@EDDE@EK}FtJjA@@@??JoB?@@HvmAGC?@C@E@LoNqBOkDN_dA@@@?A@@EB@@xCLH@bVOBH@jL@AuCFO}GkARN@@Ca@JoAGwClACdHC?H?CGBh@zB?@@BN???EB?@@Al@DE@SCCIqCfFn@ACDF@j@V?O?yMDDZIFA?J?MCACM@@EGI@@KCCI?A?E@@DDB@@SEIDD@iA@@@UQD{vAn\Bc@@@?AC?{@@@?AF@LE?BBd@ClApwAH?o_@`BENF?@@@E@EBSEeC@@H?AS?dCdxAACqN@D@@NxpAJdEqBxK@@@@BRB@CItCDJ@@@CD@N?DjAkC@Q@yA???bfB?CCAI?C??E@ELB@E@~DZB?@@a@yA@ppA@?Se@@???E@PACDaAn@BMH@HDDB?@@JBm@@B@E??n@?CDOB?@@?XFdE@@GD?@D@?A@CCAfnAC`ABT?n@AC?kA@H?_CB?AkD?yyAgBzA@@nD@A@mBAD?@@idB@@Hw@?fCDDDDAAwxAACn^@EBSnLB@PCNE@C??C@@H@@@BE@H??X@CCA?`AIME`BvPAAB@CC@HV@vMB~|A`@@CA??LE?GHEE@@CAGBB}@``@??o^E@JjA?E[@AJDDF@@G@KDF@@?@q|AGh[E`AaDKDFE@J??@Acv@?@@@@ACpBBBEEc@F?EF@?Gu@@A?@B[A@m@EN?DF@@@N@kZAzX@K_@e@DDn@a@E@P@HX?MJD??i~A@E?{@?GM@EDNCFBu@z_@SC?B?kbBHFF@@@@HBM@EQCCECAEABn@LDDBE@E@c@~HB?@@@ADjAFHB?PoLlAA?@@@LDF@@@?LE@ADjBrdB@gB@|[D~DEj_@JGIAD@@?@@@AAH@kgBEa@t_@sL|EFmBE@bEC??@D@@NMGFPcdBt@d@h~ALd@@ECD?KEnCgAG?@?@m@@?CF?yCa@CCP@?GVDAE@B@ADlkAE?@xrA@AIq@@gACDqgBB?C}J?NR@@BACT@GF?w@@@?Bd@@?DI@@Av[CECB{@tNACGE@@@@@GB@@e{AP?@@X?EFFAD@@l@D||A@@@@@?Cc@xdB@EwCE@B@HC?aFtzA^bLdAC?A@LB@BXCLD?@GC@@IlAAM{Zb@xA?Q??`B[tgBA@mF@BdA_@FI@c`@NP`@eEnDjEiFhaBF@@ADCfC?F@KQCwgA~D@@@nD@mC@@B@@@_uApBA_{AID@@@@CAF@@@}M@?@@A@?@?EDaHxAIBACh@C@l@lJ@GD@@ABAC@FyZFE?AC_`@?@DD?lAcK@yCAI@DXefBACFF@B@@vLE@@?C@B@@@ABBn@C@@{_@UHx@oX@@hPxAEGBF@F?K?kaB`EZNcEFcEcE@KCCcEEcEEABSNF?@rcB???ADkkA@L@DCH@@@@DCLCaF?hcBLaA??cA?D@D?p{@@@JG@?@ABBDJy~A@G@wN?^ZB?CR@xC@@@y@n@MG?yCAA]Bm@@JCCZEw^FP}M?udBaD@@oX@?GD?El\C@E@?COJCDFqBAC@@?DCC?L@B@R@@Gm@BSEHaFizA?tYE@I[H@@@BtNiB@@ADC?lBAIB@swA@?I_K@B@vaABB@E@GBG@M?@@L@@d`B@a@@@m\@BB}sAH?lADJC?dqA??_@FB@@@G@@@@ENDDBB@u@E@@H?@s]Em@IBCDE@@@??phAdGQ}@mhBI??@QT??CZBEABME@MADBQPDC@@EA@ACCc`@Hh]@@AF@MA{_@@@AF@@}\@AdE?DlhBv]|K@[JMF?|B@fhAufBG@@VEA?@_^E@K@?KD_@FAAXN??@GCwN@EJ{hA@@G{BB@HCP@@l@@EJigB?@wC@A}MKD?iAiL@E@@dHQ@Kn@CNeBkJ@E@A@E@AKCCm`@NDC?@ACCAB?@NoDBB@@@CCbGABH?@@A@?w@?CzA?ACC@@@AFBBB@DDF?EuA@?@??N@HX@xGe@`EdEB@?Ei\AIGB@`@@@EJt\B@p@@@ACC@@AVB@@@L@E@?LBVSADjApB@@??CI_N_NAxAiBdHW@{aA@@?CI@@IO|jA{Z@@@@@GBS@?C?qBT@E?ygB@A}JEy`BDCA??UKp@@ABB@@SvBH?{]@@@?DL?B@@@E?E@@??EGBugBMD_@W}eBH?@?t@[MKchAa@|GEnB@ADDm`@lQzgB@I?@@@DC?B@@@@@`ZkA?h_BP@AF@??[o^ADIB@EYAC@AcA??@ADihBD?bG@Z?CCIP??@@AC?|MlG?AC@R?A`@@EVznACCE@A@@@@AcACH@@@GDB?^Y@@@@HoAbED`@@HA@@?EV?@@@ywALT@pdBFE@KCC?@wN@E?@CBFyA@aA?`EkcBA???ABRP@GDmU`@@F@JzA?@@@G?DCHIB@@AF?@@B@A@?@dHBfgBEA@ahBF?H?@ngB?}@BdfB\kZEa@?fCucB?|`B?@?G_@?AB@ACEEMC?@@DCpZCDIE@@@ACr`BBCn@dA@BXB?@^ZyCA@PG@@@ACDE@@Ea@ACBIS@?zAhoAa`@?qBLfL@XuCGB@@@H|MF@@m@JjBLb~A@?CB@LBs@HD?ACCEWjQGD?@R@EHZ}GElY|hB`C?CDB?`@a@EQE@?vAAEADFFGADC@?ByA?@AFB@E|L@@AB@ACFCBAbGAkM?EA^B@@@NfN@@A@z_@@J@vB@ADD@@J?JyCw]HX@aHqBI@|@CpBAE@B?_@I@@thB??CZ@@@[AF@P@?xN?A?B?C?D?E?F?G?Hq`@Br`@I?J?Ku`@Cs`@L?M?IeHK?N?O?P?Q?R?S?T?U?V?W?X?Y?Z?[y`@O?\?]?^?_@?`@?a@?b@?c@|`@U?d@?e@_a@Y`a@[rBP?f@?g@?h@?i@{Nj@?k@?l@?m@{Af@la@h@na@XfHZaa@K?n@?o@?p@?q@?r@?s@?t@?u@?v@ra@q@ta@s@rB\ba@^da@`@fa@b@ha@TyNd@ja@XfHw@?x@?y@?z@gE]ca@_@ea@a@ga@c@zNd@{a@Yka@KeEg@ma@i@{NZgE{@?|@?}@?~@?_A?`A?aA?bA?cA?dA?eA?fA?gA?hA?iA?jA?kA?lA?mA?nA?oA?pA?qA?rA?sA?tA?uA?vA?wA?xA?yA?zA?{A?|A?}A?~A?_BfEu@ua@p@sa@r@?`B?aB?bB?cB?dB?eB?{@?fB?gB?hB?iB?jB?kB?lB?mB?nB?oB?pB?qB?rB?sB?tB?uB?vB?wB?xB|N^wa@yB?zB?{B?|B?}B?~B?_C?`C?aC?bC?cC?dC?eC?fClb@|Anb@~A{Ch@oa@YgEgC?hC?iC?jCvb@mBlE{@jH_A?kC?lC?mC?nC?oC?pC?qC?rC?sC?tC?uC?vC?wC?xC?yC?zC?{C?|C?}C?~C?_D?`D?aD?bD?cDo@_@|a@b@ya@Uia@e@`b@[fc@i@bd@K|C|@}N~@kH`A_ObA`OdAcb@fAeb@hA?dD?eD?fD?gD?hD?iD?jD?kD?lD?mD?nD?oD?pD?qDiOv@va@r@?rD?sDkd@s@sOyCwc@{Cyc@}C{c@_D}c@aDtOcD~CzCxc@|Czc@~C|c@`D~c@bDuO}@rO`Aed@cAbb@eAdb@tD?uDyO_Dod@bDcd@Xpa@[w@Y?vDzO~@sHaAab@cAtd@fA?wD?xD?yD?zD?{D?|D?}D?~D?_E?`Ejd@p@ob@s@?aE?bE?cE?dE?eE?fE?gE?hEjOeBdOrAjb@tA?iE?jE_d@`@xa@c@~a@e@aPa@}a@Tza@e@pb@aBqb@cB~O{@tb@gBkOkE?lE?mEi@Y?j@gHnE?oE?pEYZbe@bEde@dEfe@fEhe@hE~OqAeOsAjEiE`PKx@[cPqE?rEwb@oBxb@qBzb@sB|b@uBaPyB}b@{B_c@}B`c@_CoOaCbc@sE?tE?uE?vE?wE?xE?yE?zE?{E?|E?}E?~E?_F?`F?aF?bF?cF?dF?eF?fF?gF?hF?iF?jF?kFpElF?mF?nF?oF?pF?qF?rF?sF?tF?uFe@Kx@_Bqa@o@vHq@af@r@{AQz`@SzNV~`@XfHvD?vFpEzB~b@|BlE~BtB`Cac@bC?sExe@uE?wFkPzEqExF?yF?zF?{F?|F?}F?~F?_GjO`G?aG?bGtHnDv`@D?cG?dG?eG?fG?gG?hG?iG?jG?kGne@cEee@eEge@gEie@dBsb@{@ePlG?mGwd@`Drd@cDxf@dEoe@gEzf@eBoHfBpHlG|f@}Cnd@`D|C~@sHnG?oG?pG?qG?rG?sGtBtG?uGlEvG?wG?xGtByGqEzG?{G?|G?}G?~G_PsAjEuAmHwAmE_H?`H?aH?bHxBcH?dH?eH|NfH?gH?hH?iH?jH?kH?lH?mH?nH?oH?pH?qH?rH?sHrE{Bue@~BsEaCwe@tEye@wFif@{E?xFkf@zFlf@|F?tH?uH?vH?wH?xH?yHgb@lA?zHmO{H?|H?}H?~H?_I?`I?aIcOqAre@tA?bI?cI~g@|Bdf@_Cve@bCff@tEbh@yE|e@{Ech@yFoP{Fmf@tHyBvHfIdI?eI?fI?gI?hI?iI?jI?kI?lI?mIbPb@`d@d@_b@ZcPbBrb@dB`IfBpHhBlOjBub@lBnOnBqHpByb@rB{b@tBkEvB_Q}BjP`Cef@sEgf@wFeIxFdh@{Fsh@uHfh@wHzPyH?nI?oI?pI?qIlHpAqg@tAkb@vAfOpD?_HtErI?sI?tI?uIaI_A~NvI?wI?xI|P}Hjh@_IgIaIlh@rAoEbI?yIji@`A?vIki@xImi@~Hkh@`I}PpA~AuAbIpDjI`HnEzI?{I?|I?}I_Is@`f@p@dDvIri@|Hih@~Hti@aI?~I?_J?`JrHhChc@jCqO}BoH~@kHaJ?bJ_h@_C?cJtPnBqHdJ?eJ?fJ?gJ?hJqPbGtHmD}CoDmE`HnEiJvPdHeQcBdPfBxh@iBmOkBqOnBgQqBte@tBuBR{`@TyNVcf@Y~f@eEyf@hEqe@rAoEiE~PcIpd@{Cmd@~Cqd@aDqI|C}f@aD}h@~B`h@bCoh@uEhf@yEhIxFbi@|Feh@uHhQdI?jJ?kJ?lJ?mJ?nJ~AiEnj@}Cbg@aDzEq@zj@~Cmj@bDYvDvEc@ke@Xyd@K|j@r@nIiCic@lBnO}BoI_Akc@lCmc@nCoc@pCqc@rCsc@tCuc@vC_k@jC|i@{@rOkClc@mCnc@oCpc@qCrc@sCtc@uCvc@wCgEoJ?pJ?qJ?rJ?sJ?tJ?uJ?vJ?wJ?xJ?yJ?zJ?{J?|J?}J}QpJnk@rJpk@tJrk@vJtk@xJvk@zJsI|Jyk@qJok@sJqk@uJsk@wJuk@yJwk@{J?~J`R_K?`K?aK~CbK?cK?dKeAeK?fK?gK?hKqPlD~QrJzk@uJ_l@xJ}k@{J`R~J?_Kbl@aKuQSbf@W~j@s@zQ_Dxd@cDpj@_Cnh@sE`i@yEsj@yFrh@|FpP~Fof@dB`I~@sHiK?jKdDnGcg@pGsPkK?lK?mK?nK?oK?pK?qK?rK?sK?tK?uKkj@fEpe@dBwh@gB?vK?wK?xK?yKsQoBse@rB|h@uB{O_A~NaAzd@zK?{K?|K?}Kfg@_C?~K?_L?`L?aLuIbLgRvBme@j@gPoEhP_Bll@`DcR`C_i@tEph@zEjf@yFol@tHaQwH?dIvj@kJxj@mJyj@qAcDiEdj@dBfRhBfQkBvl@pB{h@sB{HvB{QTle@Xgk@lB`k@{@hk@lCbk@oCkk@rCek@uCeRgE_g@{@{f@mGoj@bDi@xBuEgHsg@iHug@kHwg@mHyg@oH{g@qH}g@sHxl@`Asd@zKzl@|K|l@sGtB~K~l@`L`m@sGtBbLjRUad@Xpm@mBjc@~@kHkCik@nCck@qClk@tCfk@wCbn@}B|QkCdn@oCsm@sCmk@vC}EoGdg@qGeg@sGgg@uGhg@wGjg@_CoOcL?dL?eL?fL?gL?hL?iLem@aCah@uErj@zEgm@zFyPtHhRdIim@lJxQnJ~AbImh@_BmRd@yn@e@zn@Xdm@aDgn@{@qm@mCjk@pCdk@sCkn@wC?jLln@pGsPrGuItGtP}B?vGig@xGsEcLqn@eLxIkLlElL?mL?nL?oL?pLaj@lDum@hEej@gB?lGag@~C}j@cD{n@bDoRbCqj@wFai@yFhm@uHwQeI?qL?rL?sL?tL?uLwIaAyl@{K{l@}KuI~K_n@aLam@sBoo@bA`OzK}m@}KuR_L_m@aLro@tBqR~@}i@vLmQyGqEwL?xLoPyL?zL?{L?|L?}L?~L?_Mlm@eB`g@gBkOiBgj@lBzh@oBwl@sByHrEzHpBom@tBkRhHtg@jHvg@lHxg@nHzg@pH|g@rH_o@qG?kK?`M?aMyIsL?bM?cM?dM?eM?fM?gM?hM?iMho@dBfRlGjo@_DtRcDmp@eBpRcI{BYb@Z_JqAvIjEcp@iHym@lHfp@oH|m@rH?jM?kM?lM?mM?nMvEoM?pMwi@wIli@|Hxi@_IkQpAkIvA?w@iHqM?rMi@sMdO_B}o@{@ePhBmm@lB_p@pBbp@uBqp@jHep@mH{m@pHhp@sHso@cA{d@gAaOiAfb@kAbOmAib@oAoi@sAuPvAxE_HtEqD?iJ?tM?uM?vM~p@kHzm@nHgp@qH{I_Aak@mC}n@qCfn@uC{RrAvQjEbDcGrf@eGtf@gGvf@iGrPwM?xM?yM?zM?{Mlq@sAiPbIpAcCcc@eC?|M?}M?~M|RwAcI`Hvi@{IlQ}IpA_N?`NyQbI}EaN?bN?cN?dN~AeN?fN?gN?hN?iN?jN?kNpAsEml@zEtn@{Fci@vHfIlNhDmN?nN?oN?pN?qNdSpDeDqDaStMfFvMYrN_J{@vm@}C{j@bD?sNe@tNap@nBhj@rBfA[}IrG`o@uGon@xGsEuN?vN?wN?xN?yN?zN?{N?|N?}NhFKup@kMvp@mMwp@xBzE~N?_OyQjEfq@lHsp@pH}IkKip@aM~IbMiD`O?aO?bOcr@oB`p@tBkl@Tij@WcFfBfj@jByh@mB|IqBtQcO_BkCin@pC~n@tCer@sGnn@}Bbo@wGnR`C?uNhr@wNir@yNkr@{NeJdOmSlCrm@pC{r@uCvr@U}`@WrBeO?fOeAgO?hO?iO?jOqq@tAje@jEbs@mCjq@rCtm@vCaJzKto@sGlR_Lvo@sGan@sBaBkO?lO?mO?nO?oObm@k@?nExHpE{q@tEfm@{Eqh@zFun@uHwQpO?qOb@vD?rOtr@pB~RvBaJdAfd@wD|d@yD}d@{D_e@}Dae@_E?sO?tOes@Vjj@ZpSnCen@rCgs@wCpEuO?vO?wO?xO?yO?zO?{O?|OhJoCjn@tCsSpCds@vCb@w@iHy@ms@uEsn@{Ens@{F}q@wHdi@kAbOzHhh@|Hyp@`Iui@qAcD}Oxp@xIsi@_Izp@qAcDeNeSgNbJiNzq@kNgJqBtQuBws@WzE~O?_P?`P?aPiSfBpHvKsl@xKul@lB}p@qBgt@vBlSmH`q@qHrs@eAud@bP?cP?dP?ePdt@|Hbt@aIzi@_JmIsHwSrB|s@qCkq@vCpSfP?gPut@sBYhP?iP?jP?kPpr@Kwq@`NkI}O?lPuSwFko@zFos@vHfIxH{PnIfi@pI?mPar@_HeFnPeAoPnSpP?qP_FmDbj@pDtEaHxBuM?rPht@XySyEnl@zFyP}F?sP?tP?uP?vPYwP{AxPvt@rC~BiElj@_B{Bj@_ByP?zPhu@sCoFjE}SzE|q@|FpP{Pi@_BpFtCqt@fA?tD?|P?}P?~P|r@_C?tGao@vGco@_Cpn@dL?_Q?`QaRfKdl@hK?aQju@{E~s@|Fuj@vHbQjJwj@lJxn@qAcDuAyE_Hxt@tBpu@xFtj@tHvn@jJru@mJkm@rAoEuAaT`HnEnPkF}Hni@`Ict@rApi@cIqJ~Hyi@pAe@bQkt@gBio@mGwm@cDbBtDvd@}Cbr@cDcu@YiScQ}NdQ?eQau@iO?fQ?gQ?hQ?iQ?jQ?kQ?lQbTuBvH~NkSmQpAnQ?oQ?pQ{i@`Jku@uCuSvEze@xEeI|ElP~E~e@`F?qQ?rQ?sQzu@uDdB_Be@uIot@nHhq@rHld@sDaB`Mjp@rLzIbMiDtQ?uQuBvQ?wQ?xQ?yQhFbQaCZ`v@vCrEzQ?{Q?|Q?}Q?~QjTwCcBlGnp@`DaJ_R?`R?aR?bRuRcR?dR?eRwr@gB~o@jBxr@nBgQfR?gR{t@qA`TvAdq@`HyShR?iR?jR?kR?lR?mRyJ_BdBvBo@nR?oRhToHtp@sHYj@gHl@?pRlFjPzt@qAvIbItu@yFlo@vHbQqR?rR?sRdT_IkQ~I_v@sHfJtRbBgAaOdDgd@uR?vR?wR?xR?yR?zRlF{R?|R?}R?~RyJ[cSdCdc@|Msq@~MbDEt`@_S?`S?aS?bS?cS?dS?eS?fS?gS?hShw@F?_Siw@aSjw@iS?jS?kS?lSYw@{p@mSuv@pH`KK?nSo@oS?pS?qS?rS?sS?tS?uS?vS?wS?xSe@yS?zS|v@`I}P~Ilu@tGmu@wG~r@cLeo@fL?kLrR{ShD|SmT}Si@~S~C_TrB`T?aT?bT?cT?dT_BaJ?vLxo@{E?wLzo@zF?yL?eT?fT?gT?hT?iTsRjT?kT?lTls@nExHmTw@xBsTuGfr@_Cnu@eLxInT?oT|OpT?qT?rT?sT_FnD~w@}B}r@xGdo@tTrI_B{v@zF|t@wHzPuT?vT?wT?xT?yTbRsJ~k@vJ|k@yJ_R~Jal@`Kcl@sHbx@vG_TdRov@zT?{T?|TfBvLww@wLyw@yLzw@}T?~T?_U?`U?aU?bU?cU?dU?eUdP~@?fUqFK?gUyt@kP`u@`Hrv@rAxu@_Bcx@{F_t@dIwn@mJvu@sA`SwAuq@qD?zIlI|IwJwE{e@yEhI|ElPhU?iU?jU?kU{u@~CcFcQ}u@eQ?lU?mU?nUmw@qH}v@hA?oU?pU?qU?rU?sU?tU?uU?vU?wU?xU?yU}x@rHcBvKlt@yKnm@qBz@zUhK|Fqu@wHiR{U?|Uqw@}U?~Uid@lDnI_V?`VeTfQ?aV?bV?cV?dVvOkDhs@{Kpo@sGis@`L`n@_C?bLfv@p@sTdRix@eVq@x@hEy@?fV?gV?hV?iVuBjV?kV?lV?mVhBtHhRxH{PkA`t@jB?{Het@`Irw@_JfKwGnRyGlg@{Gng@}Gpg@qAcDbIhOnV?oVop@_BlKsHnToRrTaItt@`JYpV?qVfBbJmQcJ{JrVfA_Bjx@|B`QyGyo@xLvRzLwR|L?sV?tVjKiAaq@lAhb@nAlH~IzJmGxv@kPdv@}CxFpArFhBfQ{H|PuV?vV?wV?xV?yVhTzV?{V?|V{y@jAgh@mA_S~Io@}V?~V?_W?`W?aW?bW`DmF_f@cW?dWqUeW?fWrTgW{TqD?nPkUxGgr@vN?hWnKiBxRmB|IfR~BuAyEiW~y@}Ctx@sAiPjExS_Pit@aPvFxEav@}E?hU?jW?kWpKvAsFaHxBlWoz@~CeAmW?nW?oW~QpWrg@hHdp@kHgq@oHex@tJ{k@wJ`l@zJsIqWxk@}J|z@uJfl@yJ_RqW_{@vJfx@zJ~z@|JqK_DpFrW?sW?tWa{@`Dz@uW?vW?wW?xW?yWgKjPyv@rAfw@eCrq@}Mtq@qAlTwAmEiWpy@uHhQlNfSnN~q@pN`r@qApp@KzQzW?{W?|W?}WvJ~W?_XyR`X?aXkFuVcz@wVf{@vH}t@uTdx@wTxTbXoFbIlz@jBpv@oBur@uBsz@yExx@}Etz@jW?cXdu@uPfu@dXiB_BlFeXec@}AnH_BcCy@hEfXiJvOys@xOzs@gX?hX?iX?jX?kXdUlX?mX?nX?oX?pX?qX?rX?sX?tXkz@_C?yGty@|Gog@~Gj{@wHiReImo@rLzItL?uXiDvX?wX?xX?yXvOjDcUmDzS`Hcj@bH?cHwPeH?zX{UkBdy@rBb{@aDcVlBnt@rB_|@bDhB{X?|XxF}X?~XyKcDaBlK?_Y?`Y?aY{FxH~t@oIiQmPoKiJ`{@wJ}z@{Jhl@_Kaz@qAvy@cI{FdIth@bY?cY|OzD~d@|D?dYlSeY?fYvFgYyBhYgCiY}{@kDqQnDwOpD?iW?jY?kYby@xU_UvBs{@mXwKoXpDqXv{@sX`|@mByr@rBgR_Bcy@wKtl@yK~{@sBsA`C?cLtTkLrRlY?mY?nY?oY?pY?qYmr@_Br@eI?rY?sY~IuXiDtY?uY?vY?wYl|@lD?xY?yY?zY?{Y?|Yuw@aTcKcTpz@tAwE}Y?~Yi@_Zb@pV?`Z?aZ~BbIr@jJuu@nJf}@kJjm@nJxq@cI?bZpUkAbq@nAhi@qAzv@cIdVyHei@oIiQqIj}@rAnJvAxEcZ?dZ}QeZ?fZ?gZ?hZ?iZ?jZ?kZ{KlZrz@`Pjt@cDaCj@gPmZo}@aPkUnZ?oZp}@cDkBrY||@rLzIuXiTpZ?qZ?rZ?sZ?tZiy@|K~m@_C}l@_Ljs@_Cly@sBz@uZmVcIvv@k@?vZi@wZgKeXq{@~A}KcLtTnT?xZ?yZ?zZ?{Z?|Z?}Z?~Z?_[xF~IpUnI?`[k}@oAcq@tAoSK_z@qAfEa[?b[?c[?d[gCe[?f[?g[s|@nBdr@sBs@nEaBh[?i[rKj[?k[?l[wVf[{Am[nVnI_u@qIl}@sAqz@KvFn[?o[?p[?q[?r[?s[?t[?u[hy@lDk{@cIi}@lA|y@oAaLiEfKtG?v[}UpXsV{Amb@}AkBqL~ItL|{@cMlp@eM?`X?w[?x[?y[nr@lMiCbIsK|Mgw@qAtKpDeDaHr@z[?{[?|[?}[bU~[dJ_\_B`\?a\?b\?c\|VmM{CfR?d\fPe\~FmA_SpA?f\?g\?h\?i\v~@}Me{@rAoVwAuFnPg}@lJsu@rAvQbIrl@bE?j\?k\?l\?m\?n\?o\`z@~Ck~@oIc|@qAnU|B`Q`C?p\?q\?r\?s\eAcK?t\?u\bUkDm|@oD`~@rAbWpDx~@bHxBv\?w\eCqAvIx\_J_B~~@nAl~@tAwEwAd~@oBl{@vBmRy\?z\c_AmJux@tAnVkAqy@{Hsy@aIaLbIhFySm{@zEqE|E}TiU?{\?|\?}\?~\dB_]zK~Xay@wUkKyUuE`]?a]}HrFnPtF?b]kBfI?c]s@d]x_ApB~R_B?e]?f]o|@yUsAyGy{@}Guy@rAbWxAlDg]?h]nFnDfV`H`VcHwPi]jCmZ?j]?k]?l]?m]`LdLrn@fLsw@}B?lL?n]?o]?p]s}@}Kuo@`Lky@bL~_A{E}e@}En{@q]jD_OoKzIdWoAcOf\`_Ah\a_AqA`T}O~KaZr`AqAeV_B}w@oEnw@pSow@rSqTr]?s]?t]?u]j|@uH?hY~Ev]?w]cCqMyz@gHxm@jH_q@nHev@sH{_AnJoKnPmK}BjPyGxy@zFdKeT{w@gT|w@x]i_A_Dp`AsGjy@aLwo@uBdLeLxIgLhDiLzKy]pVsY}|@cMzV`X{Vz]sA{]?|]?}]?sM?~]sKfCx}@_Bd{@kPgUq@|F_BY_^nK`^?a^mW~Iq_AsAiCb^_L_B{Fc^?d^?e^zT_Aiq@nCxs@sCgVkYgWvBf|@rAoEeNeS~]iVxKmt@mBt|@sBjFx@?f^_aA`DwaAaDbBg^?h^?i^?j^taAyKu|@tBrFk^?l^?m^kCqMdUn^?o^?p^?q^j_ApIgi@oAaLuAoJr^?s^kaA_JsaAsAt`ArAoVw@tSy@iUgVjUiVb_A~M{FlNvUoN_r@qNabA`Jb@rO?t^?u^?v^}BhOnSiDhd@kD~}@`[_~@pAmWpAh}@_BcaArLr}@cM?`Osr@bO?w^`GqBu`AqSpw@sS?r]?x^?y^?z^?{^faA{As~@~A?|^bFnM}B}^?~^?__@?`_@?a_@?b_@z`AqA~FxT?bX{WpI_bApAdSxAlW|E}TjW?q]vV_J?c_@?d_@?e_@?f_@?g_@?h_@maAd^oaAdB|E_ApaAoC{s@uCx@rNd}@bTvw@dT{`A~Bkg@{Exw@xLyy@{L|o@sV?i_@hLj_@?k_@?l_@?m_@?n_@?o_@j`AoD{KxJgl@~Jhx@aKecAyJgx@~Jil@`KubArA|WqAeVp_@r~@|ApO|^rbAxBbaAfL?nTy}@yZtV{Z?q_@xaAbD~VnMcGr_@?s_@?}X?y]r{@wO?t_@?u_@?v_@?w_@?x_@?y_@jCoE?z_@icArAnJ}OyaAlBa|@sBocAmB|I{_@`W|_@?}_@gC~_@?_`@?``@?a`@o_AlDp|@nX_GqXhVtX`LtTfXpDeFiJwFb`@?c`@dL_Qou@d`@?e`@?f`@?g`@?h`@gbAsHzWhL?mNgSoNfbAqAw~@_HpcAnBe~@tBwbA}E?i`@w@j@rKsW?j`@sVk`@?l`@tAm`@gXzJsI~JfcAsH}WrBpX{Je|@`KcGqIw_AuAoJqD|T{ItAn`@{Ao`@cdAsB{Hp`@eUaVfy@cVfUiD_VnDwOxAhcAsAuPq`@bbAtA}cAoBYr`@?s`@fdAtBkE_]ldApB{bAe^xWkCzr@qCwt@wCe@t`@bFu`@hW{E?zGmg@|Gz{@qA|cA`HdIv`@?w`@pAx`@kPy`@hGcZ?z`@cS{`@?|`@?}`@?~`@?_a@?`a@?aa@?ba@?ca@~TuUlDda@r|@rX?ea@b@~YxbA`Jiu@zPlC~JmLqB}Efa@?ga@?ha@?ia@cCf^iGuB`eArBmcAs_@jXy]kL~EfTja@?ka@?la@?ma@?na@?oa@?pa@?qa@?ra@?sa@?ta@?ua@?va@?wa@?xa@?ya@?za@?{a@kdAtAnCbIsDuAyE|a@bP}a@eGqI}y@_JmI~a@cbAsAhJ_b@?`b@gc@_V?lXt{@nX?ab@jCpRsKbb@?cb@b`AxUdVuTzUdb@jaAeb@qLrQmCvBfKfb@?gb@?hb@ebAqAtKxAiaAib@mKnB?jb@|Wf\nWi\?kb@?lb@tVmb@?nb@uVob@?pb@?qb@?rb@zKsb@`aA_Ct}@`Lq`AsBpLcIncAsAjEbIoeAoA`bAvAsFtb@sUnWaCpV|XrAcW_H`Y~Kqo@sG?ub@?vb@sAwb@beAsB{H_Bs@l@o@xb@?yb@?zb@?{b@?|b@?}b@ddAoA~eAwAmEcZneAvAsFqDjKoU~x@qU_y@~b@vWqAlT}Y?_c@?`c@?ac@_Wd\dDbc@?cc@~FzHxRaGqf@lDsWhHzz@lHqr@qHpXdc@lCec@?fc@?gc@?hc@afAtBlGvZgv@wQiv@yQ~Bic@fYpA_Xjc@?kc@rUlc@?mc@jeAta@?nc@?oc@?pc@qSqc@vLuBkRrc@?sc@rDtc@?uc@hG`HdIbHq@_B|_AlAo~@~IraAwUc`AvBjLcDnCuAoJaH|SvM?vc@nCiE?wc@_fAsApT_Skw@bS?iS?xc@?yc@?zc@?{c@uB|c@?}c@?~c@qWpEnKkEwHmEzJ_d@?`d@xcAmNzcApNh{@rAjfAiHrp@mHpt@rH}Kad@?bd@?cd@?dd@b@j@gHed@mfAxQjv@sBsDiEd_Aj\e_Al\g_An\?fd@?gd@r@hd@?id@yRfM?jd@?kd@_Cld@jbAiO?pPbu@aGuLmDzSiWmC_Bs@_B`AmScYpAreA`b@seAlXqLmd@rUnF?cWjz@aW~BeNofAqAsdAqDaSbHqDdHxPzX?nd@bYtA~P~]_Aod@uh@iI?pd@?qd@lXmDxKqDyfA_BnTrd@?sd@?td@bgAyQzOdQtJlU|x@nU?ud@?r_@iXkYlaAtAeWxAuJ_O?vd@cLa]?wd@?xd@?yd@yDuAqeAtAobArSqTzd@?{d@hY|d@kLi`@vJoQ~u@_JrXzGqdA}Gh`AsAwAvBoD{WaCw@dbAfXhB}Fnf@_GxW`A?bc@?}d@?~d@pA_e@?`e@?ae@jr@zNlr@|NcGmPi@wUf`Af]ugAsBdY_Bt~@rL{{@uXiTbe@?ce@mCp`@iCuAqXzI?v\?de@t_Aee@?fe@nYk@{fAnNg{@qNkIxBdBge@eY_Lu}@~K?cRq~@oXpDhe@?ie@`hApQ~gAsS?je@~W{^cCmSiOke@wfAtAeWpDcJnPyFwAngArAmq@KsDbIoGiElcAxBefArAkLhUuz@q]kYjEiYxUhaAr@z@le@yLvAxE|a@zJme@?ne@xVmDtgAnPmLfRo@oe@?pe@?qe@?re@?se@?te@?ue@?ve@_Awe@?xe@?ye@tXpXu{@rXmhAtByFw@aYp_@pG`e@ghAyNas@|N~bA_Cx{@{E_cAzFdKzLzy@sV?ze@?{e@?|e@~dAsHiWoB?}e@?~e@hv@xQcgAtBkE_BmbAsLu~@tQ?pZqV_f@?`f@?af@?bf@?cf@?df@?ef@khA_BwJff@hDgf@vhAuG?hf@?if@?jf@?kf@uYoN{cArA`fA`H`VrPjhAqAyYKohAsLno@uXrr@lf@?mf@?nf@?of@?pf@?qf@?rf@?sf@?tf@?uf@?vf@mdAdBdXwf@eGmP~Axf@~Xyf@?zf@mGqDedA|Iz@lO?~_@qU{f@f~@i[yiAtLpiA|f@wiApN|fAsAxYiU?}f@?~f@wInGql@qGmn@_C_TuG_x@yGg`A~G|RpVxDfNY~YrDnTkcAzZ{}@|Z?_g@?`g@?ag@wFoV?bg@dgAk\f_Am\h_Ao\?cg@?dg@?eg@_Bfg@cY~IyDiEdMuXziAmf@?gg@hLv^fJfO{LfQey@bVgy@dVxVnDbAqAqYzIwx@}IfAhg@s@rIoiAuXiDig@?jg@b@r`@?kg@hZgNbJlg@qWmTfgAid@xUw[?mg@?ng@gYwAcIog@fBpg@?qg@?rg@?sg@?tg@q@hPyhA_JzYs@iJug@y~@{[?vg@?wg@w`Axg@gMyg@?zg@?{g@wV|g@?}g@?~g@?_h@`D`h@ggAeM?ah@_Cbh@?ch@nPdh@bjAqAi@eh@tWfh@?gh@deA_F|Hja@eeAla@geAna@wXhh@heAra@wLua@yXwa@kGih@?jh@tAkh@`UwY?lh@jZjElGpReEmh@{XvTwTnh@wHoh@yDbIhZph@sWrc@?qh@?rh@?sh@}fAjHx`AoHsY{GybAe_@aXth@?uh@s@m@uYvh@?wh@?xh@{@aGuLxYkVzYc}@yh@?zh@?{h@~hAcIjZbIsGwA{x@}@?dQ``AjNoD{V?|h@?}h@bZ}e@kiAwQnfAsBqGiE`PtNu_ArAcWiW}kA~e@liAyQsY~h@uhA`L|eAtByW_i@}gAvAm}@dZgJ`i@x@ai@aBbi@?ci@?di@?ei@wA_B|Cfi@vgAmUiCiE?gi@?{`@udAhi@djAqNqkAkH{z@pH}KuN_s@xNhhA{NeJ}NcBk^gLii@tFji@rDkLv|@mYx|@oYz|@qYalAwQ~kAtBkEp`@qjAcM?tQqiAqZr@ki@oZfMoYkd@_CsOxgAr_@ygAwUkKli@|u@}@|kAeQiKmUteAcb@b@k@kgAqAtKmi@jkA|UaU~UcUnDtG~_@scAni@?oi@lXnDxYjWr@pi@}Lqi@?ri@jDsi@weAg\aWi\~Ati@kBui@?vi@?wi@?xi@lv@`Rmv@bRbCaMyIyi@?zi@|U{AqbA_BpG{i@?|i@?}i@?~i@?_j@?`j@gCvWbKaj@ucA~UrCyG|`AyLlx@~TyT`Uox@bUqx@dUsx@dB|Ebj@?cj@naAe^pf@aGuLnD~Xlb@xeAnb@zeApb@?dj@?ej@ljAcMnbAlf@?fj@wAp`@qgAhIcQpd@rgA~UjdAoDpIr^{jA`J{lAh\s`ArAnJxBq@qMekA`Fbv@oXtZpDjIgj@jMhj@fkAma@vXij@?jj@tCnPbCkj@cLdKhKlj@eIwLkx@eT?}Tmx@_Unx@aUpx@cUrx@eUzTmj@?nj@?oj@mmAdBdXkCodArC?pj@acAk_@bcAqj@yGtQce@mf@?rj@__Ag\aWsj@tXoB?tj@xfAaGrmAsHwAuIzWse@giAue@?uj@`Lvj@fTqQo@wj@?xj@?yj@vDmAgz@_JhlAvN?zj@?{j@ciApe@diAre@fiAte@|Yve@hM|[z~@~UqmApDeFzIqnAqe@eiAse@e[ve@sX|`@vdA~`@xdA`a@ydAba@zdAtUsZ|GrdArA`lAsAvx@pDeDr^wZaLaaAge@wS|j@jF_B?}j@pnAwN`s@~j@d|@bHnGvFvDzHat@}HcTaIp~@bI}hAsAq@_k@?`k@vEak@tGiYjVnDyG`O?lf@eZnf@{iApf@}iAbk@?ck@?dk@yGig@tCiJrQeH?ek@fBfk@?gk@?hk@fUaGjgAnDfVcZfMpDijAqAft@fNgFac@qJik@?gWynAsGks@tBaMpDwGwAr@jk@}Lpd@?kk@?lk@lCmk@?nk@mkAwTxTok@lC|J?pk@aY_BaBqk@?rk@oTsk@?qi@lDgKel@oRyLxBpfAmc@wLnc@rfApFe`AsF?tk@Yuk@nX`Q?d`@?vk@?wk@?xk@?yk@?zk@?{k@tD_BeE|k@uB}k@?~k@?_l@?`l@?al@dQ[?ji@sAbl@}nAjBry@|Hst@pAzDjUyx@uDpVcl@?dl@?el@kBfl@?gl@_iAsAqGuA?pVg[}GahAtA`mA|ApO_B~oA~GeRhl@gIil@?jl@?kl@?ll@?ml@iiAuBaInl@ioA_Cv}@tByZeQiKol@?pl@vkAbGp_ApD{SbHzZjEflAqApCql@?rl@fXxAonAnApeA`JvZjE?sl@gWge@`pAqArCtl@rcAaW?ul@YrOeYcR{JeRsmAi\|nAcHfpArAcMqDgZ}IajAeBoH|@dd@_A|bApC}s@wCwA_]vCbLm[iWnMlf@_oAof@|iAqf@~iAvl@?wl@?xl@?yl@w[KuZkNrFzl@|p@mBuaAtBtAmKdR{l@rY|l@?}l@unAre@rnAue@lD~l@?_m@?`m@?am@wnAtA|hA_H{Sv`@jYbm@aKzi@{Acm@i~@g[r@dm@?em@?fm@?gm@vCfb@?hm@?im@cVmXq|@jm@rDkm@?lm@wcArXw{@mm@pdAmM}Znm@?om@?pm@?qm@?rm@r@sm@?tm@?um@lCqWglAlHkfArH_eA~JgcAaK~pA|Jg~@k[upAse@aCvDrpAsBrI_k@jGga@aeAvm@fEwm@?xm@cqAtBvjAeMzRjd@igA~DpMpDcJzIgMqg@yjAym@{nAxNilA|NipArAcMzm@rMiEb[_HtE{m@rLyUzLbI_MiEd\`HnEcH|JiRmTkRtv@mRo@|m@?}m@?~m@?_n@?`n@`qA_Kjl@sHiG_]nCan@rZ~]i[bn@eAcn@aqAte@iCeNvSee@n[d`@roAwk@toAyk@voAdn@xFen@xDfn@b\_HmXtMdJvc@uDgn@eMhn@?in@?jn@lFkn@?ln@?uTzUxT?ok@uMqDhSvMdDmn@?nn@?on@{DdMhgAjd@gqA_E{U{Hbz@pn@g[qn@?rn@?sn@?tn@mGr^zLjE`Gun@?|j@iM|TfJzi@eC_BnmAzZ?mb@yeA|Z?ob@_Yvn@?wn@?xn@_Ayn@oTzn@mlA}Bn`AmLfo@{n@vD|n@?}n@xlArAyoAkUzx@_D|DiJeq@uMbSvc@?~n@`rAK?_o@ulAxU_MuAyEcZqhAvAtLiJjrAvMp[}OpoAsa@xXnc@?`o@?ao@sG}YffAbo@sDeNvShNyq@jNf\~]aMxAsMvCiZxZz}@zZfjA_g@?co@?do@?eo@?fo@dLgo@hDte@|Yuj@apA`I?il@bpAkl@r[ho@bCio@|GbHnGzXrZcIrEjo@?ko@yBlo@zrAmE?e\fqAuB{GxT?mo@nCeNjpAsAxnA_HmXbHnGeHbVnd@qFtNwMuDyOzWwUno@grAlL?lYw|@nYy|@pY{|@}NoMiWp\vBj\eM?oo@tCzIvFpo@?qo@?ro@?so@?to@?uo@?vo@?wo@?xo@?yo@tqA`Hvq@|IvqAuTwqAok@gCzo@?{o@?|o@prAta@qfAoc@?}o@{gA~o@tD_^{Gdb@ueAmXeG_p@?`p@qpAjNf[}[sgAnDjWqDogAcHaG|IyqAnn@o@ap@?bp@?cp@{oAdp@s[vB_qAmH~fAsH_pA}AjFy@e@ep@_[{EjiAyLhmA_U{mAbUjmAeU~mAnj@`nAd^cX`G_Afp@?gp@?hp@?ip@?jp@?kp@|sA~ApqAue@a~@b[b~@lp@mZ_^?mp@hOzAvAq`@wYbI~GqDlhAwUq\tAbMnp@d\r^qZKooAhK?op@?pp@?qp@tMjE~sAwLd[rp@zmA`U?sp@?tp@?up@?vp@?wp@h\e`@?xp@_jAtf@`jAvf@hMyp@dWs_@jXsb@ykA_BvAzp@~C{p@?|p@fB}p@tlAs_@n|@wUcRcJ?~p@?_q@?`q@?aq@?bq@?cq@nnA_F|Hdq@?eq@?fq@?gq@hpAwUiB`ZmtAxLvReT~`AhT?x]{\KpGhq@?iq@?jq@eAkq@nsAvTwTxTxqAwUzhAr]?lq@?mq@?nq@yGdMxUoq@?pq@_Fqq@v\s`@bCrq@_MbIiqAyNaZdOa]~j@cBsq@lOtq@bMae@jqA}NsZd_@zbAf_@bXuq@joAhIcQqi@cLt\n_A~U`uAwTmoAwUf\cIvYvq@?wq@p\_BmZ_B{[xq@?yq@yVv[jKdD~v@vR`w@xRbw@zq@?{q@sO|q@}[nMz@}q@`UvS?}UxsAoDpIqDltAxUi[tAs@vZxmAyEhIwLd[}T|\aU|mAdUkmAeBoImj@_nAoj@anAeBhn@lCcs@qC{~@a\|~@c\arA~q@k_A}B~h@p\?_r@?`r@?ar@?br@|HqQceAen@kBbYg|@yDts@|D?cr@|Zdr@_mArL?yi@~Eer@guAyNaZ}NoGbIpC~Fpl@eB|Q`A_Ofr@zfAe\bvAzNihA}NesA}C{DtYrVgr@|tAzFdKhr@?ir@yBjr@?kr@?lr@YvFbBmr@cZnr@gU~NkSqAg\`KbRor@qMpk@goArAhvA~Cy\iE}Zq]o@pr@?qr@?rr@?sr@epAK}Dn]?tr@zD{\_`Aur@?vr@?wr@cw@|Rew@~R}XoB?dJnQfJ?xr@_Hyr@?zr@wAai@{Q{r@?|r@kqAsAkCmSsGpViZoT`x@}r@?~r@s\{I}oAtAoStNcrAmb@drA_s@?`s@jMja@c[as@oZ`X{Vmg@?bs@_wAka@feAma@vXoa@?cs@hkAsa@xXua@ikAds@|DzIlIes@~MsLkp@cMzVfMslA~D_Dfs@uvAqr@?gs@?hs@?is@nMjs@fvA{NjlA_Bj]jE|uAb\tAks@bKwYgCls@?ms@j\ns@|rAcH{Mes@cvAcIsfAuc@{Dos@vpAxVpvAaKrvAKplAxQmiAuBttAdRmy@ps@?qs@?rs@?ss@}uA~BsEp\~uA`r@_vAbr@ytAeq@ztAts@klAl^?ii@i@qAm[_Hu[bHnGi]krAs_@stAxUoM_HwpAvc@{Dig@fMxA}RqA{LiDkbAlD?qq@zvAus@hfAmEv\kg@_Avs@?ws@?xs@i@ys@~Vzs@lL{s@iG~]tvA_DdkArAkpAnPhtAc[?lp@{A|s@psAnc@qrA}s@iJ~s@{wA`D{sAnHvKy@|qA|H?_t@|aA`t@dBat@w@bt@jcA}AnH|^yWo^}aAq^zMct@rrAfNgFhNsrAkNy[qAqYnPnuAxBz[dt@e]iEq\eNp[vAtLzIlIvFrBet@fAft@lDgt@?ht@?it@uUjt@?kt@?lt@?mt@qGeNrqAfe@_Ant@?ot@?pt@?qt@?rt@?st@?tt@?ut@?vt@uUxWvCtG_j@oB?wt@_Hxt@buA|o@?yt@pMmi@jDzt@?{t@kwAuSylAkDmpA{@|n@nCqaAtC}vAnb@omA|t@?}t@qCvZjLsN?~t@zE_u@?`u@txA~@cn@lC{uArChBau@?bu@~wAaDjvAyL{o@{L?cu@trAyZhX|Z|}@du@?eu@?fu@jDgu@b@[{@~SvC~KsiAhf@uiAjf@_EzLwRhu@?iu@?ju@?{n@?ku@?lu@pKmu@?hPo[{H}_ApAayA|HxoAqAr]K?nu@?si@yrAhLe[uj@|xAzZurA`g@huAe_@aXg_@?uq@?ou@?pu@?qu@~Myi@y\uAufAv`@jYw`@n\_Bo@ru@?su@e]uAaTr^hbAu^?j_@eXl_@?qj@gJtu@nq@dGsf@fGuf@hGwf@jG?uu@?vu@?wu@?xu@?yu@?zu@?{u@?|u@?}u@bD~u@?_v@?`v@mrAwAuFzIg\av@?bv@~\kY{@iDw@cv@`Noc@qsAwd@?~o@?dv@?ev@or@nMx\{AxiArAcMaH?fv@zDgv@?hv@wLiv@?jv@?kv@?lv@?mv@?nv@?ov@_Ehr@kvAuH?lo@?pv@}[qv@b^rv@lrAvAwz@bHuqAw`@byA}H~nApAaMbt@i]sv@?nr@dZef@?tv@?uv@gV}X?vv@hqArg@zjAwv@m~@o[?xv@qyAyv@l]tA~Fdb@tsAnX{Wzv@~jAzg@dnAu^dwAbM~|@uY`}@wY}Xvb@~Gr^_E{v@luAoXz]|v@aK}v@vcAoX{dAsXm^cMdaAw[xjAbs@_A~v@?_w@?`w@?aw@{yA~Hyu@qAw[tNkuAyq@iuAiI~Lkk@`kA}g@?bw@sAcw@gtAve@cNuAmHw@yHdw@?kEnwAsH_xAoHmL{_@kX}_@sAcJutA_q@wtAaq@_]ew@eNv[gTsQirAsA`S}Y?fw@z[mf@fZof@spAbk@aoAdk@eN~p@vtA`q@xtAbq@?gw@y]e\bGmSa^wAuFbHr\fMewA_E?hw@ckAiw@?jw@qRfi@?kw@?lw@cKmw@`N`o@?nw@?ow@?pw@kGqw@tArw@?sw@?tw@?uw@hiAxe@?vw@fyAf_@bXh_@yLfn@b]ww@oGuAbIxAnXxw@?yw@?zw@?{w@?|w@zoAdl@?dp@?}w@?~w@r\`Xo]_x@tMbItyAsAbsA`Hl]`x@p^rT?ax@fGbx@~]cx@ftA_BpCsPo{@vP?dX{C`i@wDvFuJzt@rSdx@qwA_C~i@uGzHdJyvAgJpQaGfoAoDquAex@xLqh@?fx@?gx@?hx@suAzEgmAeTymA~T`[aUvuAeUbtAoj@yuA{@uxAoC}bAvCgzA_IgIgW{TaH?v`@o{A`Iwu@sAv^rIjQtI?ix@bmAjx@?kx@?lx@?mx@ujA_Bx[nx@z]ox@lZb^e^vAsFrIhNw\?ee@qGbIb@hPzpApx@?qx@_EeTk{A_U?rx@?sx@?tx@?ux@?vx@?|SmqAku@pmAiI~Lqd@puApDtwAcHaGwx@~lAaRnv@sGtBxx@kCnPx\k`@?yx@~Tzx@?{x@q{AaIdfApDcJiJoD|x@vJ}x@?~x@?_y@i]cYh|@{Dus@~D_Dbh@?`y@sMay@hyAeGoq@hGjyAby@?cy@?dy@?ey@?fy@?gy@?hy@?iy@?jy@?ky@vH~O?ly@?my@cpAll@?ny@?oy@?py@yKqy@?ry@?sy@?ty@_Iqy@e|Asy@f|A`v@fBuy@zHtj@?vy@g|AnBqHtj@h|AaGjCzp@{xAbD~GaHp{Avc@yV~p@r^wy@?xy@?yy@u{AwAuFiJorAvc@sxAvSd]aGz^pDeFcH`Zx@hUfVbkAid@{qAzy@pYoFsMl[ktAnPiN}TuuAbUatAdB|Emj@f]{y@qKzWfz@|y@wM|P?}y@_rApRfA~y@?_z@h^}o@rsAlh@r@`z@?az@?bz@zGcz@?k`@adAdz@iNrp@|\sp@otAez@xQhk@eoAbGt[iWfrArR?fz@~Lgz@?hz@_QnB`j@eJoQxr@?iz@jzAvAtLnPe\vBgGxO?jz@?kz@?lz@?mz@?nz@?oz@fEpz@?qz@bBwDss@zDi|@}D_C`E|^ly@?rz@?sz@?tz@?uz@?vz@}{ApA{DtQqlAgg@hWwz@pxAxz@?yz@azAj_@eXzz@{zAg_@?{z@y^`Cl_A_r@g]ar@`vA`F?hj@c[|z@?}z@inAh\?sj@g}AqAo}ArAb{AtPeu@vPY~z@lwAdHpgAnd@g^xAkzApH~B_{@?`{@`Da{@hz@aW?b{@uOc{@|wAsAv^qDssAa^?eb@veAsQ?d{@aRe{@c^|Z?f{@?g{@zgAwd@?h{@j|AnPv`AhYcBhB?i{@eMaVhdAdVt}AqHw{AcI~[}JiNfT?j{@?k{@?l{@?m{@c^n{@?o{@`wAla@gkAoa@?p{@bwAta@keAva@?q{@uEr{@vKfV_gAbd@`gAs{@d^t{@s^pD{^tMxSly@a|Akl@r[ny@c|Apy@yxA_AopAqCv]`HdInPp}AsAszA_c@gfAiNq@og@f}Amy@s^xAaKu{@i|AcDgMv{@?w{@blAd\s}Ai]c]_By^cJwhApX_Zx{@?y{@?z{@t]{m@oGeN|DnPg~Akl@?{{@?|{@eM}{@?~{@?_|@gX`|@bhAx@lLtWb@a|@a]zNgvA_B}Ib|@?c|@?d|@?e|@~[f|@bFg|@?h|@Y_Bb_@i|@?j|@`_@qf@mGaH|SrPpYcWmgAk|@tZxA`Dl|@{Xm|@?n|@mYo|@ryAev@kWp|@gNrh@bxAp^d`Aa]}Hq|@cxAgNbJbo@?rIo\r|@lvAkr@?s|@w}At|@s~Au|@rzAtAi{@_XwjAmg@?_x@gyAj_@_Hs]?v|@rWjZ?w|@mNiEwIbc@ehA~d@f~AtA?eNxMiNpEx|@vUy|@e_@kCcnAsCnyAwU__@z|@?{|@hrA||@?}|@p^~g@akAsTaI|l@pC~|@?_}@?`}@?a}@skAwh@n]uAmHvFxD}OkCy@hEfVny@hVrBb}@wJc}@aQd}@?e}@b\iWsUf}@dRg}@?h}@?i}@s[_BnYl@u~AqF~~AlCzxAsCifAj}@_~Ama@awApa@a~Aua@yXq{@{Rcx@lqAjE`^jEcFk}@iKl}@?m}@`zA{g@w@w@f_BmCfs@sCnvAbf@?n}@zMo}@?p}@?q}@tW|]lYlE_Hx^?r}@?s}@gpAoAwy@sHb_@eb@qLoXxhAie@pbA|AjCt}@bHbIq]{IejAfa@?u}@rKv}@?w}@?x}@?y}@kWk]m`Am]vCz}@cB{}@?|}@tkA}}@q~AbHrQi]?~}@?_~@?`~@rXa~@jNob@_Yqb@{eAb~@d~A_HlM{IzZbIjN_s@fmAc~@z}ArHaxA~A_}AwA~^bHuwA|I__@{V?d~@oyAkDt[r^eqAha@?vm@lLe~@n~A{N{]fV`Df~@?g~@?h~@}xA}Z}}@i~@?j~@lnAte@_sAe\r_B~IzMqo@jsAso@lsAk~@?l~@o@m~@vvAn~@syA|Ah^pc@?o~@`Xp~@pAq~@z|AdVqZtNlgAhC?_V?r~@pRwc@f[s~@ivAsZ?t~@?jt@?u~@r~AlMzDv~@?w~@dz@xVtjAhN?bo@k^wA~^tMfFvc@}Vwc@tFzSiWh]tCcHsGmi@~_B`HtfAbHnIx~@usAy~@}yAvv@s@pR}~AhLycAnN?y|@?z~@pNvFcNbIbAaGv_B|IpL~]jNf{@?{~@iwA|N?dOrCcJnzA`q@wzAzi@lZrAw_Bw}@x_B|~@?}~@x|A~T`[sp@y|AmJdoAdV`Hc\vsAkNgG~~@cmA}i@emA__A?`_Ak_@jEjnAtj@knAbGY_k@q}@oZn|Af^u`B~p@r^aq@_]zi@_Ea_AyBb_A|Z_`@tcAa`@r_@pDeDv`@`iAyUiYc_Ae`B|Nk_BK}Ed_AezA_w@fzAaw@w`B_U?e_A?f_A?g_Ago@aGwkAh_Af_@aHxBbHu_BcIgaB_BkNkE}R_BwZi_A?j_A?k_AaN}HcTil@?l_A`sAm_An]iEpN{m@}VcIpFn_A?o_A~]rAbfAyb@cfAp_A?q_Ag^pDc\{IsSr_A?s_AtRt_AeNuGg{AeJoQgJh{AbGj{A{E_tAeTy{A`UimAcU}mAdBu|Anj@ctAe^ndAlCg_BtCj`B_JjuAxTauAxUccAn_@dcAaGwwAjDi^ir@x~As|@t~Aq^vCu_A?v_AvzA_q@ozAbq@?w_AbNym@bzApXj~Ay{@?x_Az~AeMa\kd@_Cfs@?y_AhBz_AyB{_A?|_A}wA}_A?~_AfY~It`B}Ny_@iWabB_B__BxUzG}`@wdA_`AaN_t@u^}s@kGya@meA``AaBa`A?b`At]`Ho`BcHw_@c`A{\tNqCpRo@d`A?e`A?f`A?g`Aw_@vBfMmi@u_@jx@s{Alx@?h`A?i`ArCj`A?yv@b`BlD_Wk`A}DlYfsAoYolA}Nj_BKgGl`Au]kY~{A_y@eaBbHs_Ade@r{AjNnbBmYnlApYhsA_Bz_Az\oDz|@?m`A?n`AnNna@wXpa@i_Bva@?o`A?p`A?q`A?r`Aq^nf@`oAg~@?s`A|^t`A?u`A}_Bpb@?vn@erAxn@gdAbVojAiDz`BKjDv`A?w`AvEx`AbZdJnQy`A?z`AwoAe@p~Aj|@m_BnCvxAuC{C{`A?|`Am]|Ix@wP~Y}`An_@~`A?_aAk}Ap\m_A`aA?aaA?baAebBo^?`t@cuAeMa\caA?daA?eaAs_BmXwKfaAfGlPvDgaAcCnP_Agl@~Gtb@ruAyUqbBnYgsAqYv|Awd@?haA|GtMl^gn@f^vAnrAbHoN}IbYeN`_@xD_|A|D`e@~D_DiaA?jaAyJ~y@?kaA?laA|zAvAv{AsIii@ix@rMbI|aB`Xo]ng@f`BgV}SmaAx_@g_A?naA?oaA?paAw\gp@dtAip@etAkp@ubBof@uzAck@?qaAe@hg@q@~]laBjEz@raAtdAxBc_@j{@|}Al{@?saAzbB}IrMuArhA{Iz\taA?uaAaiAnDysAnPv_@iWl_@sHpCvaAixAot@jxAqt@lxAst@nxAut@?waAmPqF|gAy_A|vAyDavA}Db^xaA?yaAbKvSd]oRgxAzaAzG{aAjcBk{@}}Am{@jVmDxKaHxBvM?|aA_`@nXc~Acd@q@ed@pF}aAvA~aAlzAd\?|_@hFhg@pcBpt@kxArt@mxAtt@oxAvt@fxA_bAqqAfNgFee@vwA_B`N`bAaaB}NlNll@b|Aoy@d|AaGk|ApDjIr^vW_B|lAvi@}lApF}Ht|@z\oRk[bHcBabA?bbAbAcbA{Gnh@wHdbAy]ebAtMwc@q^_f@riAaf@cZcf@|yAfbA}BgbAdvA_GdhAbc@?hbAtGmO?ibAwGpVfBjbAl[hk@{|AlDb}@yYlVkbAdTlbAlHaGjF_k@t_@}IkF_t@z_B|}@{_BaGm|A`Ht\}IosA{o@`bB_JrNqDhSuMl\mbA?nbAsNbHdsAzXeTpP?obA_\pbAyDwc@vVqbAo|AeM}aB~D_DsO~aBuFwsA~UtnA`Hk`AdH?i]u}AtAwElZ|_@rbA?sbAncBoDpIvFmC_]xDti@eAtbA?ubAcG_p@?y~@b[iWeaAsMgcBpf@h`Bs`AnN|z@rlAjd@k\fs@?vbAk`B}A}cBcH`^bIoMcZ`yA{L`cAi_@dbB~`@?_`ArLge@eU}{@m~A_|@bMwbAtGe[?xbA?ybA?zbAzaB{bAypAhm@?|bA}B}bA_cBwAuJsi@qxA~bA?_cAsD}OobBwUtcBoXndBxU_Uc`Ax@vFx{Aqx@hB`cA?acAuNfMoYcaA~_@eaA_`B_BqIbcA?ccA?dcA?ecA?fcAkdB_`AfGlaAd_BlPdNdMduApq@qCnE?zp@?gcAkN`^?hcAyUicA?jcAlcBvA{KkcA?og@uQlcA?mcAn_@ro@ksAto@?ncAmsAocAbNsg@?wv@?oh@vDpcA?qcA?rcA?scAo[kBsQtcAf_@qDuBucAt^vcA?wcAbcByDqcBxcAodByUuMrIhNix@?ycA_BzcAgL{cA|pA|cA?}cA?~cA_zAp[?_dA?`dA{OadA?bdA?cdApQddAowAyQnaBsAv}AzIqDedAnMfdA?gdA`HhdAiaBj_AjaBmE``BpDeDrIhNac@|_@oa@`~Aqa@ieAsa@cwAva@sbBp`AtbBr`AboAaG{IidAgLm^iCjdAdNtQhnAnf@?kdAycBcH{M}I|Xb^s`BcIjMqQ}UldA?mdA}W|j@mNuAbIbt@p`BmNgSy|@g_@~p@~`Bbq@vAndAkYbIceBvAfOxAcHzI{dBodAwMbPrt@pdA~bB~o@cNiEc`Bvm@tAqdA{LpP?rdAdcBcIzGhi@yF}Y?_k@umAka@p]na@?ij@?sdA?tdAbdBpDcsAcHaVudA|JvdAr|A~TyTrx@wAge@ybBoCn{AwCqCvF}`B_q@{aBzi@yDeNwFwdA?xdAe`@wAa`BcHaVzXw\ydA?zdAwbBcVidAkDtHxYxkA{Y?{dA|bB`t@wGvFedBqAeO|dAp_@}dAb]u\jeB_U`tAcUsaBeBoIbj@?~dAleBfN}]iNkyA_v@?_eA?`eA?aeA?beA?ceA?deAh`@_eAseBaeAueBceAx`@J?ySweB`eAteBbeAveBIzeBaeAxeBIeHySyHeeAtpAnB~cAuB?_]}D{SfSpv@bT_BfeBlh@yaBuH?jr@mvAlr@t_B}AydBsBzdBtAwEw@y}AbVxbBkDoeByYlV{Y?yh@?feAn`BaGb`@aHfaBcHsXgeA?heAxLieA?jeAqdBjd@k\hw@zzAjw@`_B}|@rIdx@hBkeA{cBdVk[tMfFleAhJmeA?neAicBK_BoeA?peA?qeAi@reA_AgI}LjIvh@lIvNcZ{kAdQmuAeDdDseA_bBuH?{_Ak|@iDx]nD|cBo^mdBpDr_AbHeeBcIeGteAlWueAiGcOdpAlDuHnDjWaHafBdHhdB~ApeB~UfuAcIi`Bue@mnAmEqaBwLtuA~Tl{AbUt|AeBxuAnj@taBdBbnAlCvaBuC~dB_HlMv\thAw\{Cun@brAmE?veAm`BiNjfBxL}tA}Ts|AcUqeB{@jHmj@f]d^cXeBzuAmCn_BtCzkAcI_yAcR{JweA|oAgl@Y~]`]`Fl}Aka@p]|z@m}Af\nWsj@_FxYkVxeA?yeArNaH`fBtB_X~^sbA`_@tbAb_@}bBvB_fB~Aq]cHgY}Y?ph@b@bZo\ko@`aBjRsv@t{@b|@|XwYjEvYzeAffBnDbDLw`@IeH{eAxDxB|{AbRkTdRgGt_@?|eA?}eAhbBjNa}Ajz@b}Alz@c}A~eA?_fAbB`fAbHeNxMlg@v~AhNscBl{@~}AiDx]mDwvA|\?ur@xvAwr@lN{{@nZafAjGbfAbqA_BqvAcfA{{A`H?zm@heBdfArFefAdMffA~MgfA?hfAhGiWcHcHkeBpC{eBiBmz@nB|eBvBwFifA?jfAmGv`@pAkfA~rAue@ifBe\yUvVl`ByV~\}X~yAwUvdBvB`KzSvN|a@mVwc@v`BsA}eAcIouA|UaUaGz^mi@vfBsGlRcRz@lfA`HmfA?nfAa_@k_@h_@jdA~CofA?pfAcfBuR_w@wRaw@qfAj`@kd@}_@rfAe_@yPkCf^uyAhv@vyAjv@wyAlv@xyAnv@dzApX_ZsX?sfAl`@v[qzAd{@}fBuz@l~AtfA?ufA?vfAdyAmNzyAaGb`@qDlKwfAxfBqCh}AbEeZrj@n}Asj@hG{m@xwAws@?sk@noAri@jRxfA?yfAgbBzfAclA{fA?|fA?}fAbaB~fAkfBjNbHuAqXiJkB_gAyI`gAxLagA?bgAq_@cgA}pAdgAxZegA`YfgAi`@uAmcB|ItDmp@`GggAegBvAxEiWs@hgA_aBuH?igA`eBdH`dB|I|JjgA?kgAvKz@beBrQgNlgAsAtl@s]_m@Yog@wcBny@?mgA?ngAjdB|L?ogA{GpgA?qgAiXrgAenAsgAf^q`@vL~]x@ac@`\fMeyA{ZuV_g@vrAtgA?ugAjbBkx@t{Ah`Ap|ApFqoAtFsdBeMzRvgAn[wgA{BxBbBxgA?ygA?zgA?{gAg`Bg~@m_@zZ?|gA?}gA?~gAs\cH?edAzcBdB|FaZecBf_AdaBnaAfcB_hAyfBvv@pMxAu]}XzfBxUzX`hApC{P_Lp_@pzAoXpDahA?bhAmSchA?dhA?ehAqIfhA?ghAd_@my@}^ny@mgBngAogB|ZgjAco@wrAeo@{tAxUy_@_HlMcHaeB_B{Bcv@|dBhhArLc_AfbBxa@leAza@?``A?ihA?jhAgK{Rdw@}R?khAg`@lhA?mhAlgBoy@xcBbGd}AnhA?ohA?phAkjAdg@?qhAwdB_dAlNrhAhYshA?thA?uhA?vhAwGw@hgBwAp_@_V?whAnUxhAnNas@gdBkd@|DbHn~@_B`\yhAn`@fNreBjNvN_HtAzhAieB`H_gBqXhVsfAsvAsAbgBrCpNqDgfB_BrgBeBnpA}@vlAlUrYkw@t^bT?{hA~tAiq@dM|hA`G{`A?}hAmY~hA?_iA`hBrfAe\c`AfArN?bx@sNuMbSrPg_@v[{pAx{@k~Az{@b@dx@_hBlw@dNtY_}@vYa}@iDdgBkNgeBjEtdBoErC`iA~gB{@?fi@?aiA?ddAx[{f@lbBnDh`@`v@`|AfGiyAiGrPbiA?ciA?diA?eiAr@{UggBfiA?giA?hiAyYtNdlA{`@elAwUqtAen@d`@w@?iiA?jiAk`@aGi@lMdBp`@q}AuP`]kiAw~AuH~eBkr@_eBpZqVrZrVtZaNuV?pn@ccBwAmyA{IpLyIwaB`JbDliA?miA?niAyeBKpK}On`@fn@meBpDc\vFehBsHv_@_Hu[uMvAoiAqfBuBl`@uGtiAif@viAzi@h\vk@soAxk@uoAzk@a_B_}@b_Ba}@ldB|g@nZrT~fB~D?piAfwAgs@gwAqiAa{AtAyzAjd@?caAc_BvAnkAqh@okAsh@vbBriA?siApGcb@?tiA?uiA{[viAb@wPvcB_BcHnP{}A_BgnAbe@uMr^dhBpDpaB|IiVwiA?xiA?yiAuEziAg`@`UraBdUwuA{@jHbj@lmA{iA?|iAr_@xA{gB`Hf`@}iA?~iAp`@pDovAsi@|gBsC|~A}d@{bB_r@g]_jAq_@`jAc{AajA?bjA?cjAz@djA}DejA?fjA?gjAl[hjA?ijA?jjA?kjApfByY?ljAy[_Bq_By^oaBzb@?mjA?njA~WojAe^}O?pjArfB|^r@qjAkoAkk@gNfx@i{ArjA?sjA`XbXx@~y@jjAl\egAo\hKtjAsfBkR?t{@r]mMcFujA?vjA}dBk_ArCwjAnhBiW_AxjA?yjAdBgj@?zjAwgB`HbHiE`gBpv@rE{jAc_@|jAi@}jAj`@caA~_@~jAmNbIzaAl^}B_kA?`kA`{AcIhMvg@uNah@sNv\p`@xAh_@fN}]uIu_@|i@dmA~i@?__AhfB_BqhBqDgZrMvhBjEi`@iE{fBvSl|AbGuN`X?oq@euAaGagBnP|VnMzD}f@?akAf`@bkA?ckAqKdkAz@ekArhB`r@rwA`FtmApX?ahAvZbIx^aZo_Bnr@dZfkAcyAsi@a^w@shBgkA?hkA?ikA?jkA?kkA?lkAjgBi]l_@~a@aC_k@xhBKqFmkAddBnkAdeBnNq`BaGxgB`dA`ArMj]wc@pgBh~@hXq_@iBaZo`@xBo`@vA`cBcHneBnd@}_@|`AbhBKm^okArDpkAsRpL{hBaG_[wz@i}Azi@lfBzF}`A}TmfBdUphB~@?mj@nfBe^uaBmCofBuCbNqkAxaBo_@fdBg~@m_@rkA?skA?tkA?ukA_dBoo@|_BbH~cBnd@d_@vkA?wkA?xkA?ykA?zkAsgBwUtfBKcgBmf@fZkdA_\{kAmaB_B}gBnPcC|kAwhBwg@jhBwk@sqAzk@?dn@yFrOkhBuAe`@w@?ed@}DmL?}kAvgBkl@e~AmgAeA~kAwfB}\?_lA?`lA?alA?blAyhB|IcbByU}|Azn@uhBqDbiAd\rS_Bx@clAkNdlA?elAqMac@bCflAzhBy|@}hBvB|Uk`@w|A~AasAfNohBaUm{AdB`I|@?nl@qJglAk`@iDu^hlA?ilA?jlA?klAeQllA}zAyw@~zA{w@?mlAd^lR?nlAk_@bIrNrIqC_Bp_BmEadBiE|fBzz@`HolA}qArn@~qAtn@m]es@k^w@tSfVkFplAcHiJcoAzXcaB`UntAtp@ptAvp@?qlAx_@rlAxZslAi^tlAchBbGhhBiWd`@wAcIvF~hBpD{^bH}BulA?vlA{~AkZpTwlA?xlA?ylA?zlA?{lAfhBmiAghBI?|lA</div>
<div id="globalStacks" style="display:none"></div>
<div id="methods" style="display:none">@??A??B?????B??C??B?????B??D??B?????E??F??C?????E??G??C?????E??H??C?????E??I??C?????E??J??C?????K??L??B?????E??M??C?????E??N??C?????K??O??B?????E??P??C?????E??Q??C?????R??S??pA?Cs?T??S??P@?kf?U??V??`E?GE@U??W??pc?WA@X??Y??pE?KZ?Z??[??PY?[d@\??]??@G?gUB\??^??`D?[WB_??`??p@?g^?a??b??P@?ST?c??b??@?????d??e??C?????E??f??C?????E??g??C?????U??V??@V??F@h??S??@C????i??j??p@?wC?k??l??@g??B?m??n??`@?kF?o??n??`E?ca?p??q??pA?_@Ap??r??PW?gu@s??`??PC?_s@a??b??`B?KL?U??W??@`?SA@t??u??pA?[w?v??w??pA@CX?a??x??@D?oN?d??y??C?????E??z??B?????E??{??C?????E??|??C?????}??S??@`Bcv?~???@?pF?sG?~??@@?`I?CG?A@?B@?pW?gF?C@?u??@?????K??D@?B?????E@?S??@M?KC?F@??@?@A?cE?~???@?P@?GH?E??G@?C?????E??H@?C?????E??I@?C?????J@?K@?B?????L@?S??`B?WM?M@?S??P@?[H?N@?O@?`g?kT?M@?S??P??SH?P@?S??`G?sK?Q@?S??@@????R@?S@?@L?WL?R@?T@?@R?kW?U@?V@?`A?So?W@?V@?PR?ga?X@?S??@@????Y@?Z@?pS?s_?[@?\@?`[?sW?]@?^@?@A?kH?]@?^@?pH?cI?]@?_@?PK?CL?`@?a@?`E?cO@`@?b@?PH?CF?c@?b@?`j?Cc?d@?e@?PZ?wi?o??f@?P@??_?}??g@?P@?km?E??h@?C?????E??i@?C?????E??j@?C?????E??k@?C?????E??l@?C?????d??m@?C?????d??n@?C?????K??o@?B?????}??S??pnACu?]@?p@?PB?WO?q@?r@?@??KP?s@?t@?P@?G^?u@?v@?@?????E??w@?B?????B??x@?B?????}??S??PBASs?y@?z@?@@?WB?{@?S??@@????d@?|@?pR?gj?}@?~@?`@??O?}@?~@?`T?{Q??A?S??`G?SJ?@A?S??@@????d@?AA?PW?Wp?d@?BA?PB@[y?CA?DA?@M?gg?EA?V@?p^?{a?}@?~@?`@?GP?}@?~@?`V?CR?FA?GA?PC?kH?U??GA?PN?sS@t??HA?pC?ku?v??w??Pj@WY?IA?JA?pF?[O?a??KA?@A?CJ?c??KA?@?????E??LA?C?????K??MA?B?????A??NA?B?????K??OA?B?????o??n??PD?_a?o??PA?@e?wg?QA?RA?PF?WQ?p??SA?`E?CfAFA?GA?`E?sH?TA?S??PM?sm@p??UA?@R?w^?VA?WA?PY?wF@XA?YA?@A????QA?ZA?P??ST?QA?[A?PK?[W?\A?]A?P@?cA?\A?^A?PC?sA?_A?^A?@D?KB?`A?S??@@????aA?bA?`@?oW?cA?bA?Pb?{^?dA?eA?PV?[m?fA?S??`@A[l?`@?gA?P@?gB?`@?gA?P@?[G?aA?gA?`T?sR?aA?hA?@Y?wT?`@?iA?PG?OL@jA?kA?P@?Gg?lA?kA?@J?Kb?mA?kA?PA?cH?mA?kA?pR@cL?nA?oA?@@?GC?pA?qA?@?????K??oA?B?????E@?S??pS?WC?rA?sA?@U?wL?tA?uA?@F?WC?rA?AA?@A??G?vA?AA?`D?CF?lA?AA?@Z?CY?mA?AA?@A?KO?mA?AA?@U?_Q?mA?wA?@`?gS?nA?AA?@@?{A?nA?xA?@?????K??AA?B?????]@?^@?p`?cJ?]@?yA?p@?SN?zA?q??`??oa?zA?{A?pN?gb?|A?}A?@G?wD?E??~A?C?????E???B?C?????E??@B?C?????E??AB?C?????E??BB?C?????CB?DB?B?????d??EB?C?????d??FB?C?????E??GB?C?????}??S??@pCGy?~??HB?p??[H?[@?\@?@V?kW?[@?IB?pB?kJ?E??JB?C?????[@?\@?@N?[W?KB?LB?`??GD?KB?MB?`A?wE?NB?q??P@?w\@OB?q??`??[P?OB?PB?QA?_T?OB?QB?QF?WV?RB?SB?QA?k~@RB?SB?aG?W?ATB?UB?AD?oH?}??S??puCWy?VB?WB?`J?[]@XB?YB?@A????}??ZB?p??Wy?}??[B?@D?K|?\B?z@?P@?sN?]B?^B?`C?sz?d@?_B?@@?Wo?E??`B?C?????E??aB?C?????d@?BA?qi??y?bB?cB?a@?kF?dB?eB?aK?OC?E??fB?C?????E??gB?C?????E??hB?C?????iB?S??@@????aA?jB?@b?OW?QA?[A?@X?_X?kB?RA?`??OV?kB?[A?@C?oV?kB?lB?PO?k\?kB?mB?pX?[T?nB?q??@U?GE?p??z@?p??OQAp??oB?`L?Wz?p??pB?`M?Wy?qB?YA?@C????nB?rB?@@?GE?nB?sB?pz?CH?p??tB?p??_FAp??uB?PE?Wh?p??vB?A??{h?wB?YA?AA????nB?xB?Q??GH?kB?yB?AC?sR?zB?{B?aG?SQ?|B?}B?Q??GL?|B?~B?aG?{N?|B??C?a??oL?@C?AC?q@?S^?BC?CC?Q@?wR?BC?DC?QF?_o?o??PA?PG?Cf?zB?^A?p}?cG?zB?EC?A@?wQ?FC??@?Qb?{J?GC?HC?QG?wy@GC?IC?aW?WJATB?JC?AS?OX?KC?LC?Q@?OKIMC?LC?A@?oG?MC?NC?q@?gC?OC?PC?B?????kB?lB?pQ?o\?QC?YA?@C????kB?RC?@@?o\?kB?SC?@j?OX?TC?YA?@B????kB?UC?P??_\?VC?WC?@L?[M?Y@?^A?`b?KE?R@?b@?`X?OZ?}@?~@?@@?[P?E??XC?C?????E??YC?C?????E??ZC?C?????E??[C?C?????E??\C?C?????E??]C?C?????E??^C?C?????E??_C?C?????E??`C?C?????E??aC?C?????E??bC?C?????d@?AA?`gACs?`@?cC?PK?GH@R@?S@?`p?cM?dC?eC?pH?oh?fC?YB?PD?Oe?dC?z@?p@?se?dC?z@?@i?[j?p??O@?p@?KEAgC?WA?PU?Gg?hC?iC?pE?ob?jC?S??`??G]?gC?WA?Pc?sg?p??kC?@O?We?lC?WA?@L?{w?mC?YA?@B????QA?nC?P??cZ?QA?oC?pB?OM?o??oC?pA?[K@pC?qC?`E?oL?E??rC?C?????E??sC?C?????E??tC?C?????E??uC?C?????E??vC?C?????E??wC?C?????E??xC?C?????i??j??`A?wC?tA?yC?@W?GN?tA?zC?pA?gO?rA?kA?@B?WH?rA?kA?PG?OI?{C?kA?pE?WQ?vA?kA?`D?[D?lA?kA?pH?O`?mA?kA?@A?SB?mA?kA?@a?CE?mA?|C?@`?OG?nA?kA?@@?wB?pA?}C?@?????K??kA?B?????VC?WC?Pz?SO?p??~C?p??SOAp???D?`[?KI@@D?YA?@A????VC?AD?`F??P?VC?a@?@K?_L?c@?b@?`Z?_b?BD?V@?`??S_?CA?eA?@B?ke?d@?eA?pL?Gl?d@?CD?@L?gm?`@?DD?pM?GN@o??ED?`E?c_?}??ED?`V?Om?E??FD?C?????E??GD?C?????VC?AD?PN?KP?HD?ID?`q?WR?HD?JD?pV?[F?HD?KD?@[?OK?LD?MD?`??KJ?ND?MD?PD?Wc?ND?OD?@E?SM?ND?PD?PF?CO?QD?RD?@C?wf?A??SD?B?????`@?a@?pF?gO@TD?b@?`V?Cg?`@?V@?P@?GG?aA?V@?@^?{Q?E??UD?C?????E??VD?C?????E??WD?C?????B??XD?B?????R@?S@?@N@KO?R@?YD?@P?wS?EA?bA?`P?ob?B??ZD?B?????E??[D?C?????E??\D?C?????E??]D?C?????E??^D?C?????}??g@?pB?om?A@?_D?pC?SQ?mA?`D?@?????fA?S??@~?wj?VC?aD?pK@wd?VA?WA?PU?kF@X??HA?@K?kX?bD?cD?@@?GS?dD?cD?P??_H?eD?fD?pB?GM?gD?hD?`??gC?E??iD?C?????HD?ID?@F?kP?HD?jD?@K?gN?HD?kD?PJ?[L?lD?mD?`@????nD?oD?`N????pD?S??@B????i??qD?p??CC?rD?sD?PG?GC?tD?sD?@B????uD?vD?PI?kD?wD?xD?PB?oq?wD?xD???????yD?zD?B?????yD?{D?C?????yD?|D?C?????yD?}D?C?????yD?~D?C?????yD??E?C?????yD?@E?C?????K??AE?B?????yD?BE?C?????yD?CE?C?????yD?DE?C?????yD?EE?C?????tA?uA?PJ?sC?tA?FE?pr??K?GE?HE?QH?gN?tA?FE?@A@sK?tA?IE?PD??H?i??sD?pD?sB?k??JE?PA?cC?R@?S@?P|?SN?KE?LE?a??cH?dC?z@?@W?Gj?ME?NE?@Z?cF?ME?OE?Qd?OK?PE?QE?q??Gp?PE?QE?an?gh?KC?RE?a??CVIKC?RE?a@?SYIMC?RE?q@?WK?}??S??`~Cwy?VB?WB?`L?W]@SE?YB?@?????d@?AA?ptBct?EA?gA?P@?s`?EA?gA?pJ?_c?R@?TE?@P??\?W@?V@?PU?ka?UE?VE?`??WW?UE?O@?pK?KT?WE?VE?@D?oV?XE?WA?@L?cs?p??YE?PM?{t?ZE?YB?PA????[E?\E?pB?GG@s??WA?pB?_r@]E?YA?@A????QA?^E?PL?CU?kB?_E?@H?cJ?VC?_E?@I?_V?Y@?`E?`y?O^?p??aE?p??SPAp??bE?AF?Sv?}??S??PG@_q?Y@?`E?@r?WY?cE?S??@D????Y@?dE?pT?W[?U@?eE?P@?Km?fE?^A?`??gC?fE?^A?@C??D?HD?JD?PT??F?KB?]A?@B?OL?KB?gE?`I??N?NB?WB?P@?C`@OB?WB?`L?CO@VC?aD?Px?Wd?hE?YA?@C????kB?iE?@@?c\?jE?YA?@A????kB?kE?QK?{Z?VC?lE?QL??S?HD?mE?aL?[S?nE?b@?AF?oE?oE?b@?QX?{B?pE?^A?aD?{C?ME?NE?@f?{F?ME?qE?pK?wS?zA?WB?`Q?sW@rE?YB?@E????KB?sE?`^?GO?OB?xD?@@?W`?OB?xD?`B?Cp?OB?tE?qB?co?uE?^A?Q??GTAvE?^A?A??oA?E@?S??pV?_C?rA?sA?pX?KM?E??wE?C?????xE?yE?B?????xE?zE?B?????p??r??@@?Wt@R??{E?A??s~?E??|E?C?????E??}E?C?????A??~E?B?????E???F?C?????E??@F?C?????E??AF?C?????E??BF?C?????E??CF?C?????E??DF?C?????E??EF?C?????E??FF?C?????_A?^A?@E?KB?q@?GF?`??Op?HF?IF?`@?{C@QA?[A?PI?WW?JF?KF?@@?gH?dC?eC?p@?gh?LF?MF?`??wD?LF?NF?`D?GD?OF?q??P??_E?E??PF?C?????E??QF?C?????E??RF?C?????E??SF?C?????E??TF?C?????B??UF?B?????K??VF?B?????VC?AD?PD?_O?p??bE?pH?Sv?p??WF?`@?gc?p??XF?`A?KP?dB?YF?PJ?SB?ZF?LE?pF?OH?E??[F?C?????\F?]F?B?????K??^F?B?????_F?YA?@B????QA?`F?`??sX?QA?aF?pK?_N?bF?cF?@@?KN?bF?dF?PA?_U?eF?q??p@?GX?eF?fF?P??{Q?vE?gF?@?????E??hF?B?????A@?B@?pM?KF?A@?iF?@??GH?KB?sE?@L?WN?jF?WB?a@?gC?kF?lF?a@?gP?E??mF?C?????E??nF?C?????U??V??@??oD@`A?S??@?????tA?FE?Pf?cJ?tA?oF?`L?sL?pF?AA?@A?SG?pF?AA?@??cG?ME?NE?@d?wF?ME?qF?PQ?{Q?ME?rF?PL?_O?@C?sF?A@?CY?GC?tF?a@?[[@HD?ID?Pw?cR?GC?uF?@??_r?E??vF?C?????TB?UB?aM?{H?MC?wF?qG?sH?o??PA?pb?[g?QA?^A?pP?WI?o??xF?@@?gJ@yF?zF?pJ?sA?{F?|F?aF??]?{F?}F?QM??^?{F?~F?qH?w`?{F??G?a??sa?E??@G?C?????A@?B@?pr?kG?A@?AG?@p?wM?A@?BG?pA?CR?mA?CG?@?????[@?IB?@B?kJ?DG?EG?AC?kU?FG?^A?aA??C?DG?^A?QH?CQ?aA?gA?`U?SS?aA?hA?@??WT?E??GG?C?????}??S??@rBKw?o??HG?@C?WL@IG?JG?@@?_L?E??KG?C?????aA?V@?PR?kQ?CB?LG?B?????tA?FE?@o?oJ?pF?AA?PA?cG?pF?MG?PF?SI?E??NG?C?????Y@?^A?PD??D?@C?OG?AC?Gt?@C?OG?Q@?Cr?PG?QG?AA?cO?E??RG?C?????U??W??Pa?SA@fA?S??Po?oj?PG?SG?Q??wF?Y@?^A?@E??D?[@?IB?P??_J?[@?TG?QD?[H?`@?UG?A@?oD?kB?_E?AH?cJ?VC?_E?AI?_V?VG?WG?@H?_@?B??XG?B??????A?S??@Q?gJ?M@?S??Q??SH?P@?S??A@?gK?pF?AA?`C?gG?pF?YG?QC?wJ?ZG?[G?qA?sb?c??[G?QA??q?c??\G?QA??s?c??]G?q??{b?c??^G?aC?Oa?_G?`G?@??sK?QA?[A?pN?_W?o??aG?pE?KK@}??bG?@@?_n?p??vB?qM?ci?FA?GA?A@?gH?cG?dG?A@????KB?sE?@??CN?VB?WB?QF?W]@X??Y??PN?gZ?bD?eG?P@?w]?fG?gG?@B??~?fG?hG?`F?Ke?QA?RA?PA?OQ?iG?^A?aA?kJ?jG?^A?a??cB?kG?^A?q???^?kG?^A?QD?S^?W@?V@?pW?oa?lG?YB?@C????Y@?mG?`G??[?U@?VE?`J?Wq?p??YE?pB?Wt?hC?iC?AA?_b?nG?oG?QE?KR@v??w??`_@sX?v??pG?QC?sR?p??z@?q??OQAp??oB?QB?Cz?fE?qG?Q??WA?fE?qG?AA?SD?fE?^A?AA?{C?OF?rG?AA?cM?k??l??P@?GA?VG?WG?@??O@?E??sG?C?????HD?ID?pL?wP?LD?MD?`??WN?ND?MD?@??Gc?L@?S??@??WM?zA?q??a??oa?zA?{A?qN?gb?|A?}A?AG?wD?tG?}A?qA??C?uG?}A?AD?OZ?vG?}A?AZ?OG?o??HG?PL?kL@wG?xG?Q??O_@yG?zG?QI?{[@OB?{G?q@?WYAE??|G?C?????E??}G?C?????E??~G?C?????E???H?C?????E??@H?C?????E??AH?C?????E??BH?C?????E??CH?C?????E??DH?C?????E??EH?C?????E??FH?C?????E??GH?C?????E??HH?C?????E??IH?C?????E??JH?C?????}??S??@CAWs?k??l??`D?OA?KH?LH?P@?_w?KH?^A?pC?{e?MH?NE?@Z?[EBMH?NH?PK?KHBMH?OH?Pf??LBGC?PH?PI?_hATB?QH?@C?Co?RH?SH?`M?{mBA??TH?B?????B??UH?B?????B??VH?B?????Y@?dE?@c?o[?p??bE?QB?Gv?fE?qG?A??SD?WH?XH?@??K^?tA?uA?QE?WC?U??V??p_?cF@T??eG?a??[h?fG?gG?a??{}?T??YH?q@?Ch?fG?ZH?a??s`?kB?kE?PK?{Z?VC?lE?PL??S?HD?mE?PJ?WS?[H?^A?`A?wW?\H?^A?PA?cF?fE?^A?P??wC?p??^A?P???z@p??]H?@??ol?E??^H?C?????Y@?`E?p_?gX?KB?_H?`??CE?`H?q??@C?KL@`H?aH?P??cQ@GC?gF?pE?WQATB?gF?@??KK?QA?^E?@??[T?VC?a@?AK?_L?`@?a@?aE?cO@`@?b@?QH?CF?c@?b@?AD??b?CA?^A?aB?Od?nG?bH?a@?[P?dB?cH?qJ?cG?dH?eH?AA?KF?VC?lE?`f?gS?p??fH?p??WGAp??]H?PE?{l?p??gH?PQ?Sn?hH?YB?@A????VC?iH?P??gS?VC?jH?PF??a?\H?eA?`J?cG?pE?eA?pJ?gG?kH?S??aB?sD?}??S??`cAgt?nB?sB?`x??H?nB?lH?`@?CI?VC?^A?@l?[K?[@?mH?pJ?{N?bD?nH?A@?GX?dD?nH?AE?GG?gD?hD?a??gC?]@?^@?`k?wJ?oH?pH?@@?GV?q@?qH?`W?gn?q@?rH?p??kw?q@?GF?pK?Cy?q@?sH?qE?oS?q@?LH?aE?oX?}??S??pD@_q?E??tH?C?????E??uH?C?????E??vH?C?????ME?qF?qg?gR?HD?ID?`r?[R?LD?wH?@C?S[?RH?SH?PI?wmBE??xH?C?????cA?bA?@??K^?dA?eA?AB?Om?pF?YG?`E??K?yH?zH?@D????{H?|H?@A????}H?~H?@B?__?dB?cH?aK?cG?J@??I?B?????J@?@I?B?????J@?AI?B?????J@?BI?B?????X??Y??aL?_Z?Z??CI?QA??[@dD?DI?Q??gJ?gD?EI?Q??OD?]@?p@?@C?WO?]@?p@?pF?WP?E??FI?B?????A??GI?B?????nG?oG?qA?GR@nE?b@?QB?gE?nE?HI?qN?GE?d@?eA?qL?Gl?d@?CD?qJ?gm?lD?mD?Q@????II?|H?Q?????}H?~H?AB?__?mA?kA?pW?cD?JI?KI?AE?_M?LI?q??A_?WI?k??l??PE?OA?MI?NI?`??kA?MI?NI?@A?[C?MI?OI?pD??D?GC?LC?QB?{RBTB?LC?aE?gZ?FC??@?qs??L?GC?LC?A@?[TBTB?LC?AO?C[?PI?QI?A@?[K@}??ED?@??Sl?QA?aF?AG?WN?K??RI?B?????nB?lH?a@?CI?VC?^A?aD?cC?E??SI?C?????tA?FE?Px?GK?tA?TI?QT?gG?GE?UI?a??GQ?tD?sD?pB????yD?VI?C?????mA?kA?P??_I?WI?q??AI?cE?WI?^A?AF?kD?ME?qF?@s?GS?ME?rF?@I?KO?GC?PH?QI?_hATB?QH?AD?Co?GC?^A?a@?gZCmA?AA?pP?SQ?JI?KI?qB?[M?XI?q??AC?SI?YI?PB?aC?KZ?o??aG?pC?GK@IG?pH?@A?{N?OB?xD?@u?or?OB?ZI?AD?{n?CA?^A?QC?Od?VC?^A?qB?cB?PG?[I?qE?WG?o??HG?pE?_L@J@?\I?B?????{F?}F?aC?c]?]I?^I?a@?Ci?]I?_I?QH?[j?]I?`I?qC?_h?kG?aI?a??wU?dA?eA?QV?[m?}@?~@?a@?GP?}@?~@?aV?CR?FA?GA?QC?kH?U??GA?QN?sS@X??HA?AK?kX?bD?cD?A@?GS?dD?cD?Q??_H?eD?fD?QD?OM?OB?WB?@F?GO@KB?sE?p]?GO?bI?cI?P??oA@dI?eI?pG?oI?bI?]A?`G?K@@E??fI?C?????VC?WC?pL?[M?Y@?^A?@??[D?}??g@?qB?om?A@?_D?qB?SQ?ME?OE?qS?sJ?GC?gI?q??oNAGC?gI?AU?oLAHD?JD?`[??G?HD?hI?p??{H?OB?QB?qC?SV?lA?kA?Ph?Ga?mA?kA?@??kC?nB?q??@X?KE?p???D?`C?OH@ME?rF?@a??P?}??ED?`V?Om?}??g@?qC?sm?Y@?dE?pe??]?[@?iI?P@?SE?jI?pH?pB?cD?kI?xD?pC?wY?kI?fF?P??kQ?lI?mI?@?????HD?JD?`E?WE?nI?oI?p@?gC?KB?sE?@A?CN?GC?pI?pA?o[BTB?pI?@P?Sd?TB?QH?p@?Co?E??qI?C?????E??rI?C?????E??sI?C?????E??tI?C?????E??uI?C?????E??vI?C?????E??wI?C?????A??xI?B?????E??yI?C?????E??zI?C?????E??{I?C?????d??|I?C?????d??}I?C?????i??qD?q??CC?rD?sD?QG?GC?tD?sD?AA????GE?~I?a???J?GE??C?aC?{F?GC??J?QB?SVATB??J?AG?SL?E??@J?C?????E??AJ?C?????p??kC?AO?We?p??UA?aU??_?VB?WB?aJ?[]@BJ?YB?AC????KB?CJ?q@?[N?GC?pI?qA?o[BTB?pI?Q??oc?ME?qF?qq?CS?E??DJ?C?????a??EJ?@??WR?KB?_H?@D?CE?FJ?GJ?P@?[`?WH?HJ?@U?gM?IJ?JJ?`B?WH?WH?XH?PB?K^?WH?KJ?QK?C_?WH?LJ?AG?{_?MJ?NJ?qA?CG?BD?b@?`??G`?F@??@?PO?OF?OJ?PJ?@@?OU?_G?PJ?@@?SN?zA?PJ?@??gt?ME?rF?p_??P?zA?QJ?PM?wI@zA?RJ?`K@sl?ME?NE?@X?_F?ME?SJ?AL?wI?WI?q??@I?cE?WI?^A?PD?gD?A??TJ?B?????U??W??`T?o@@nB?q??PL?sD?|B?UJ?`B?GE?VJ?WJ?pE?k`?VJ?XJ?pR?{b?YJ?mD?p@????ZJ?oD?@n????II?[J?PB????\J?QH?`@?KW?hC?iC?qE?ob?OB?ZI?qG?Go?OB?]J?AR?c`AOB?^J?A??k\AHD?ID?`v?cR?GC?_J?PD?gn@GC?uF?`A?cr?GC?`J?`G?ON@E??aJ?C?????E??bJ?C?????fA?S??`w?sj?VC?cJ?A@?g`?dJ?JG?Q??WC@dJ?eJ?q@?cu?v??pG?aB?sR?ZF?cB?AJ?OJ?VB?pH?@D?K\?VB?pH?p@?W[?VB?fJ?p@?ON?VB?fJ?@M?{M?SE?YB?@@????}??gJ?Q??wy?hJ?S??AA????}??iJ?a??{x?jJ?kJ?a@?OA@_G?lF?q@?wI?lJ?YA?@A????kB?mJ?Q@??[?VC?nJ?QF?WT?Y@?oJ?A@?WI?GE?HE?pH?gN?GE?pI?p@?{S?E??pJ?C?????E??qJ?C?????E??rJ?C?????s??`??P??Ws@s??sJ?A??sr@VC?^A?PK?GD?TD?^A?`L?[f?}@?tJ?@B?_X?}@?^A?`B?gL?E??uJ?C?????tA?yC?PF?oM?GE?HE?`E?cN?MC?NC?Q??cC?HD?KD?`C?wJ?E??vJ?C?????QA?[A?pN?_W?o??aG?AE?KK@i??sD?@U?oC?U??GA?@]?OT@E??wJ?C?????}??S??@}?{p?xJ?WJ?PA?oI?xJ?yJ?@J?OG?]@?p@?@??SO?Y@?dE?pY?_[?R@?b@?`R?CZ?o??zJ?A@?s_?VC?^A?aC?cB?MH?OH?@_?sKBMH?{J?PA?sNBMH?|J?qD?G~AGC??J?q??gSAjJ?^A?QA?c~?_G?^A?Q@?kE?\H?^A?pG?{F?A@?_D?a@?GQ?OB?]J?qg?WaA}J?WA?@I?cC@p??~J?QA?cV?A???K?B?????E??@K?C?????E??AK?C?????d@?BA?QB@[y?CA?DA?AM?gg?E??BK?C?????VC?AD?Pe?cP?VC?CK?`A?w_?VC?CK?pI?O`?CB?DK?B?????[@?\@?@P?_W?JF?EK?PD?OO?FK?YA?@@????[@?GK?@??_W?d@?AA?PcAwr?LF?MF?a??wD?LF?NF?qJ?OD?dA?eA?qC?Om?LF?HK?QG?OB?OF?IK?QG?OS?OF?JK?QA?S`?E??KK?C?????E??LK?C?????}??S??plC{x?VB?pH?AD?K\?VB?pH?aB?[[?MK?NK?Q??cb?MH?{J?pz?wPBMH?OK?`B?CYBMH?|J?QE??BBKH?PK?QJ?GdAE??QK?C?????tA?oF?@T?wL?GE?^A?`K?SD?GC??J?p??gSAGC??J?PB?SVATB??J?P??kK?TB?RK?@@?WB?QA?nC?P??cZ?QA?oC?qB?OM?o??oC?qC?_K@IG?SK?Q@?OP?OB?SK?a??Cv?OB?PB?QF?sT?nE?HI?qP?KE?VB?pH?q@?W[?VB?fJ?q@?ON?VB?fJ?QH?sM?}??S??`cBsv?o??TK?P??C^?o??UK?@@?{U?E??VK?C?????WH?XH?`@?K^?aA?V@?A^?{Q?o??f@?Q@??_?yF?zF?@I?sA?WK?XK?@E?{LAWK?YK?`B?g^BWK?ZK?P??GQBWK?[K?qB?wGB\K?q??Q???F?E??]K?C?????v??w??PAAOZ?dB?eB?q??GC?^K?_K?A@?g~@ME?rF?p]??P?GC?LC?PB?{RBTB?LC?`l??\?GC?^A?P??cZC]@?p@?a@?CP?oH?`K?A??_T?Y@?`E?q_?gX?KB?_H?Q@?CE?aK?bK?Q??[m?bI?cK?AB?go?dK?^A?Q??Oh?nB?sB?@??sE?WI?^A?AH?oD?q@?r@?A??KP?s@?t@?Q@?G^?ME?OE?qp?gK?ME?OE?As?sK?U??W??pV?o@@E??eK?C?????E??fK?C?????E??gK?C?????J@?hK?B?????E??iK?C?????K??jK?B?????E??kK?C?????E??lK?C?????QA?[A?p\?[Z?p??oB?@F?Oz?d??mK?C?????\A?]A?Q@?cA?\A?^A?QC?sA?_A?^A?AE?KB?q@?GF?a??Op?HF?IF?QC??D@q@?GF?q??{K?q@?GF?QW?_t?q@?nK?q??{u?q@?GF?qK?Cy?i??sD?PI?{B?dD?cD?AB?gH?dC?eC?AL?sh?oK?eA?QE?cH?}@?~@?a@??O?}@?~@?A@?[P?p??vB?PR?oi?wB?YA?@A????nB?xB?P??GH?kB?yB?@C?sR?zB?{B?`G?SQ?|B?}B?P??GL?|B?~B?`G?{N?|B??C?`??oL?@C?AC?p@?S^?BC?CC?P@?wR?BC?DC?PF?_o?pK?S??@A????@C?qK?a??W^?rK?sK?q@?WF?tK?uK?Q@?wC@vK?q??Q??_y?GC?gF?qE?WQATB?gF?QH?OK?d??wK?C?????p??q??pB?c@A\F?xK?B?????aA?hA?PL@kU?yK?S??@@????FA?GA?QA?gH?_A?^A?@C?GB?QA?zK?@??cM?c@?b@?aZ?_b?EA?V@?q^?{a?gC?WA?`Y?Wg?{K?YA?@A????Y@?|K?PW?oK?CA?DA?AR?kg?lC?WA?@??sw?}??S??@iCwx?MJ?WB?`@?Od?}K?JJ?p??sI?~K?JJ?p??WH?WH?KJ?@G?s^??L?@L?Pc?ki@AL?YB?PD?KJ?}K?YB?P@?[J?A@?_D?qA?KQ?E??BL?C?????p??UA?PS?w^?}J?WA?@??SC@}J?WA?PM?kC@k??l??aD?OA?KH?LH?Q@?_w?KH?^A?qC?{e?MH?NE?AZ?[EBMH?NH?aG?CHBMH?|J?qD?S?Bq@?GF?@??gx?E??CL?C?????E??DL?C?????B??EL?B?????R@?S@?`^?wL?R@?FL?A??cT?yD?GL?C?????yD?HL?C?????yD?IL?C?????yD?JL?C?????yD?KL?C?????d??LL?C?????GE?^A?`H?KD?GE?pI?@??wS?zB?EC?@@?wQ?FC??@?`x?cL?ML?S??P??gL?ML?S??@G?OM?GC?HC?aC?sy@GC?NL?q??{ZCtA?zC?`??cO?OL?PL?PV?OJ?Y@?`E?pZ?WX?UE?^A?PC?{Q?E??QL?C?????E??RL?C?????E??SL?C?????E??TL?C?????E??UL?C?????E??VL?C?????X??Y??`L?_Z?Z??CI?`F?K[@Z??WL?@B?kY@`@?cC?QK?GH@lA?AA?Q[?GY?XL?YA?@A????kB?YL?a@?G]?kB?ZL?aU??c?fE?[L?A??GB?E??\L?C?????_G?lF?A@?wI?zA?]L?AD?kw?HD?ID?@V?OQ?nI?^L?pD?wB?OB?tE?q??_o?OB?SB?aE?Ga@TB?UB?aF?sH?FA?GA?QB?kH?E??_L?C?????HD?KD?p^?SK?ND?OD?@G?OM?RH?cI?`B?G\BVG?WG?P@?O@?`L?fF?Q@?g??aL?fF?aD?o??`@?V@?P@?GG?lA?bL?@??wW@GC?IC?`W?WJATB?JC?QL?{W?MC?wF?aC?kH?MH?OH?@d??LBMH?{J?@??cNBoH?pH?@D?gV?R@?FL?`F?oT?R@?T@?@??kU?QA?[A?`S?CX?QA?zK?@L?oM?bF?eA?P??WH?VB?WB?pI?[]@cL?dL?@??sU?E??eL?C?????B??fL?B?????K??gL?B?????B??hL?B?????X??HA?qG?cX?iL?^A?Q??WG?MH?OH?`R??KB~???@?Q@?GH?ME?qF?aT?GR?`@?cC?Pl?gJ@jL?kL?PD?w@@k??l??Ag??B?m??n??a@?kF?o??n??QD?_a?o??PA?Qg?wg?p??aE?q??SPAp??bE?qH?Sv?p??WF?a@?gc?p??XF?A??GP?HD?KD?@F?wJ?lL?xG?Q??_i@lL?xG?AC?{i@nE?HI?qJ?{D?FG?xD?Q??KM?mL?nL?a@?Oo?X??HA?`^?[Y?X??oL?pC?KJ?KB?CJ?aB?_N?pL?qL?AB????HD?rL?a??CF?KB?LB?a??GD?KB?MB?A??sE?`H?q??AC?KL@`H?aH?Q??cQ@kB?mB?pa?kT?p??bE?`L?[v?FA?GA?@@?gH?cG?dG?@@????o??zJ?p@?s_?sL?YB?@?????jF?WB?`F?kC?BJ?YB?@C????KB?CJ?`B?_N?pL?qL?@B????HD?rL?`??CF?KB?LB?P@?GD?aK?bK?p@?[m?tL?bK?qB?WC?uL?^A?A@?_m?MJ?^A?A@?WD?WH?^A?qA?[J?fA?S??`d?[j?E??vL?C?????MJ?WB?p??Od?wL?xL?P@?_C?TB?LC?A^?c[?VB?WB?Q??G]@VC?^A?`C?cB?fE?[L?@??GB?WH?KJ?PK?C_?WH?LJ?`H??`?yL?zL?@???G?VB?lF?@??Kz?{L?lF?AA?[|?|L?^A?q@?Gd@}L?^A?qQ?Cb@fA?S??Py?sj?KB?CJ?AE?cN?E??~L?C?????KB?sE?`C?GN?A???M?B?????J@?@M?B?????E??AM?C?????OB?]J?Qc?GaAOB?BM?qT?g_AE??CM?C?????VC?aD?@B?[b?dJ?DM?@I?cx?dJ?EM?`F?[W?dJ?FM?aL?W`?dJ?GM?AM?Gi?QA?^A?PC?wD?GC?uF?@H?{r?GC?HM?QD?Wz?_G?^A?AB?kE?dJ?DM?AG?_x?dB?eB?qJ?OC?dH?eH?Q@?GF?zA?QJ?PB?[I@zA?fF?PA?GT?GC?gF?PC?WQAGC?IM?`A?[[CzB?^A?ps?CG?OB?xD?`I?kp?TB?UB?AS?GI?KC?LC?Q??[IIMC?LC?QH?KH?E??JM?C?????p??~J?a@?cV?p??KM?AA?sU?|B?~B?@V?GP?vK?q??aG?gy?vK?LM?qB?_n?ME?OE?@N?kJ?A??MM?B?????t??u??aC?_w?c@?b@?AY?[b?dB?eB?q@?KC?E??NM?C?????OL?PL?`V?OJ?OM?MD?a??oE?pF?tF?aF??B?OB?SK?qC?Wv?OB?PM?ab?[dAp??XF?pC?OP?dB?eB?p??GC?TB?QH?@??wn?E??QM?C?????E??RM?C?????E??SM?C?????LI?q??QN?WH?LI?xG?a@?sF?QA?nC?@??cZ?LF?HK?AI?SB?v??w??@m@[Y?E??TM?C?????ME?NE?@`?oF?ME?UM?`L?{M?ME?q??P??OI?LD?wH?@??S[?M@?S??@??SH?QA?[A?PK?[W?_A?^A?AC?GB?LF?NF?AJ?OD?B??VM?B?????HD?ID?pi??R?E??WM?C?????d??XM?C?????TB?LC?@O?C[?PI?QI?@@?[K@HD?ID?PO??Q?ND?OD?AG?OM?RH?cI?Q??C\BA@?iF?A??GH?E??YM?C?????HD?JD?@A?CE?[@?ZM?QG?KS?zB?[M?q@?oM?GC?HC?aA?wy@KB?gE?pK?[O?A??\M?B?????QA?zK?PB?gM?]M?lF?P??wM?^M?_M?`??[R?`M?_M?pA?_u?aM?^A?pG?Kv?bM?q??@??cV?TB?QH?@D?Co?kH?S??Pv?kF?[H?VE?pc?O\?AL?YB?P??GJ?yL?cM?@??gG?BJ?YB?PA????E??dM?C?????p??vB?@??{h?|B?}B?`@?KL?eM?fM?@@?wG?ME?qE?qK?wS?kB?UC?pA?c\?kH?S??pg?WF?[H?gA?P@?kW?[H?gA?`h?sY?}??S??pv?cp?RH?cI?a@?cXBKB?CJ?@E?cN?VB?fJ?PI?sM?X??HA?`W?GY?p??XF?qC?OP?QA?^E?@O?GU?k??l??@e?CB?MI?oI?pI?kL?gM?^A?PF?GB?QA?aF?@??KN?bF?cF?@??KN?IA?JA?qB?SO?}??S??@DA[s?eF?q??`F?SX?E??hM?C?????E??iM?C?????p??r??@X?su@aK?bK?P??[m?bI?cK?@B?go?dK?^A?qE?[h?E??jM?C?????VC?aD?@N@?e?lD?mD?P@????II?|H?P?????d@?CD?@@?cm?HD?ID?`K?sP?RH?cI?P??C\BA??kM?B?????yD?lM?C?????mM?nM?C?????CA?^A?qM?{d?mM?oM?C?????ME?NE?@\?gF?ME?pM?pU?cL?ND?MD?q@?Gq?MC?LC?QD?wG?E??qM?C?????KB?_H?qB?CE?MJ?rM?aD??M?sM?^A?AC?CM?tM?^A?q??cf?FJ?^A?q??kD?WH?^A?AF?sK?t??u??QD?_w?X??Y??PB??Z?bD?uM?@@?OV?dD?uM?pD?CI?fG?vM?PD?wz?fG?wM?pU@kk?}J?WA?pK?gC@nI?oI?q@?gC?KB?]A?AB?OL?KB?gE?aC?wM?HD?JD?pX?oF?HD?KD?@??wJ?]B?^B?pA?oz?}??ED?@I?cl?jJ?g@?@H?S?@_G?pH?@A?sL?zA?xD?PA?Ge?zA?xM?Po?Sg?N@?O@?@??oR?dD?nH?Q@?{F?fG?yM?Q??O`?Y@?^A?``?GE?dC?eE?`@?{g?o??HG?P_?WM@VA?WA?`O?OF@TB?LC?Aj?_[?tL?bK?pB?WC?uL?^A?@@?_m?MJ?^A?@@?WD?WH?^A?pA?[J?d@?AA?@t??x?PE?QE?ak?_h?P@?S??aG?sK?Q@?S??A@????i??sD?@H?{B?lD?mD?q@????II?|H?aD????pD?^A?AC????E??zM?C?????U??W??`O?g@@HD?ID?AF?kP?HD?jD?AK?gN?HD?kD?AG?OL?GC?JG?A@?O\@{M?YA?PB????QA?|M?qA?OU?U??GA?QM?sS@Y@?`E?Pv?w]?[E?}M?PU?oF@eD?fD?q@?CM?VC?^A?QK?GD?TD?^A?aL?[f?}@?tJ?AB?_X?}@?^A?qA?gL?~M?^A?a@?gC?HD?ID?`H?oP?LD?^A?`??[F?ND?^A?@B?_D?}@?~@?A??[P?F@??@?P??_E?F@??N?AH?CG?dJ?FM?aA?K`?E??@N?C?????E??AN?C?????k??l??pB?OA?GC?BN?pA?OlA\J?CN?`L?OY?\J?DN?`??WG?GC?tF?`@?[[@E??EN?C?????E??FN?C?????tA?FE?`Z??J?WH?^A?aN?GL?}??g@?A??km?E??GN?C?????E??HN?C?????pF?YG?aE??K?yH?zH?AD????{H?|H?AA????o??HG?pR?sL@VC?AD?`F??P?R@?S@?@N?cL?dJ?IN?Q??K}?dJ?eJ?AA?cu?d@?CD?qI?gm?o??oC?pC?_K@IG?SK?P@?OP?OB?SK?pC?Wv?OB?PM?@J?OcAv??w??`~@KZ?AL?YB?@A?GJ?JN?qL?@A????jJ?KN?Q??g@@HD?KD?`]?OK?LN?xG?@??s]@fE?^A?a??gC?c@?b@?@D??b?CA?^A?`A?Od?E??MN?C?????d@?e@?PZ?wi?ML?S??pQ?gM?rK?q??A??sD?E??NN?C?????WH?LJ?@G?{_?MJ?NJ?PB?CG?dK?ON?PK?Kk?PN?YB?@??gM?kB?_E?PJ?gJ?zA?xM?@H?Of?ME?qE?aE?kS?QA?RA?`C?SQ?QA?QN?p@?ST?p???D?pH?SH@CA?^A?AO??e?XI?q??a@?KI?OB?xD?``?wq?nB?q??QL?sD?|B?UJ?aB?GE?VJ?WJ?qE?k`?VJ?XJ?qR?{b?YJ?mD?q@????ZJ?oD?QJ????RN?oD?qD????II?[J?QB????\J?DN?q@??F?\J?SN?a??WB?ME?rF?@U?oO?@C?TN?AB?S]?GC?UN?Q??g]@GC?HC?PG?wy@TB?JC?PL?{W?aA?V@?AO?_Q?cA?VN?qK?s]?k??l??Ae?CB?MI?oI?qI?kL?gM?^A?qI?KB?KB?gE?aI??N?E??WN?C?????HD?KD?@@?wJ?NB?XN?PD?c^@YN?^A?`??Od@ZN?^A?`??gF@[N?^A?`C?w?@yG?dL?@??W[@zA?PJ?`I?wt?J@?\N?B?????]N?eA?aC??C?VG?WG?pC?S@?OB?^N?a??_?@OB?_N?AB?kW?VC?lE?Pd?cS?`N?YB?@A????VC?aN?`??cS?VC?bN?`C?_Q?p??cN?`@?{PAp??bE?@F?Sv?aK?bK?q@?[m?GC?uF?`C?kr?E??dN?C?????tA?uA?pK?wC?tA?FE?@??kH?VC?aD?P?@kd?hC?iC?@A?_b?nG?oG?PE?KR@nG?bH?`@?[P?dB?cH?`K?cG?eN?cB?`C?GJ?XA?YA?@?????p??vB?QR?oi?{M?YA?QB????QA?|M?AC?OU?fN?^A?AL?KC?QA?zK?pE?gM?aM?xG?Q@?sv?aM?dL?qA?_v?tA?FE?PC@{I?MH?{J?`Q?SOBMH?gN?aA?syAGC?UN?A@?g]@OB?ZI?pG?Go?OB?]J?p^?CaAE??hN?C?????ME?qE?aL?wS?d@?AA?`QC?x?CA?DA?AA?Sg?OB?PB?QH?wT?~??@@?a@?kF?~??iN?Q??{C?d@?BA?qc?{x?LF?jN?Q@?oE?vG?}A?AG?wF?kN?}A?AC?OU?rA?sA?@A?OL?ME?qF?@M?sQ?IA?JA?qE?WO?kB?mJ?P@??[?VC?nJ?PF?WT?Y@?oJ?py?oL?p??lN?`@?GGAOB?QB?aD?WV?GC?LC?Q??{RBjJ?^A?AB?c~?R@?T@?PD?oU?TB?pI?q@?wc?kB?kE?@O?C[?kB?mN?`B?G]?p???D?@H?SH@VA?^A?A@?cE@hC?^A?qA?sa?[@?\@?AN?[W?KB?MB?aA?wE?uD?vD?PP?{D?k??l??qB?OA?GC?BN?qA?OlA\J?CN?aL?OY?\J?DN?a??WG?R@?b@?pW?OZ?}@?tJ?PA?_X?P@?^A?PA?{J?bD?^A?@B?WQ?eD?fD?pK?_M?MH?{J?`A@SQBMH?|J?a@?K?B\??]??AG?gUB\??^??qE?[WB`H?aH?pG?{Q@GC?}A?@J?Wq@WH?KJ?PE?o^?nN?oN?@??_f@zB?{B?PH?SQ?OB?BM?aS?c_A|B?~B?pP?sO?tK?uK?aF?CD@E??pN?C?????TB?UB?qI?wH?\J?CN?QN?SY?\J?qN?qC?w]?c??rN?aG?oT@jF?WB?aD?gC?ME?OE?`c?OK?ME?rF?`^??P?lD?mD?A@????OB?xD?A@?W`?KB?sE?pJ?WN?eN?cB?aC?GJ?}??S??`j?Wp?VB?PJ?PF?og?_G?PJ?@??SN?fN?^A?AN?OC?\??^??QB?[WBHD?KD?P\?OK?LD?MD?a??WN?ND?MD?AI?Oq?Y@?Z@?@??O_?K??sN?B?????WI?^A?aB?cD?U??W??pK?g@@rK?q??A@?sD?QA?^A?@j?OJ?d@?eA?qA?{k?OF?IK?aB?GS?E??tN?C?????CB?uN?B?????|B?UJ?ak?kF?cL?xG?@??GV?U??V??pH?_E@B??vN?B?????i??sD?p??_B?GE??C?aN?GG?GC?PH?a@?_fATB?QH?AC?Co?RH?SH?QI?wmB}??S??`q?[p?wN?xG?AO?{{?HD?KD?`W?GK?xN?qL?`A????yN?zN?`B?cC?{N?qL?@A????@C?|N?A@?oO?}N?qL?Q@????~N??O?a???D?@O?qL?A@????@C?AO?AD??K?{M?YA?@?????MH?{J?`E?wNBGC?IM?aA?[[CA@?iF?AG?WH?BO?DM?QC?oV?AL?YB?PB?GJ?JN?qL?@?????E??CO?C?????A@?B@?pN?OF?~??DO?qR?sO?VC?WC?@F?SM?R@?EO?Q@?oX?HD?mE?aK?[S?WH?LJ?qC?w_?FO?GO?qC?wX?dK?HO?QA?Wl?A@?iF?AZ?wH?HD?mE?QJ?WS?[H?^A?aA?wW?\H?^A?QA?cF?fE?^A?Q??wC?p??^A?Q???z@E??IO?C?????A@?B@?pM?KF?_A?JO?Q@?_A?\A?JO?a??GA?_A?JO?qB?OC?k??l??Pn?OB?OL?^A?`B?WD?v??w??P`@sX?E??KO?C?????E??LO?C?????E??MO?C?????E??NO?C?????E??OO?C?????E??PO?C?????E??QO?C?????E??RO?C?????E??SO?C?????E??TO?C?????E??UO?C?????K??VO?B?????yD?WO?C?????yD?XO?C?????d??YO?C?????rA?kA?@B?WH?rA?kA?AZ?WJ?E??ZO?C?????VC?^A?pg?WK?zB?[O?PQ?[W?\O?S??@A????zB?]O?`@?WW?uG?^A?pB?SM?^O?_O?P??[M@^O?`O?`??cP@^O?`O?p[?GR@aO?RE?A??wc?p??WF?pH?Cd?xE?bO?B?????GE??C?aI?GG?HD?hI?qA??I?GC?gF?QC?WQAGC?IM?q??[[CA@?_D?aI?kQ?dJ?GM?QO?Gi?VJ?WJ?p@?[`?p??pB?@??gx?`@?b@?@??{E?kB?kE?AF?wZ?J@?cO?B?????iB?S??@?????HD?KD?PA?wJ?YN?lF?P@?_i@lL?^A?`D?ci@uE?dO?E??[UATB?gF?PB?OK?lC?WA?P??sw?aA?jB?qU?CW?_F?YA?@?????E??eO?C?????]E?YA?@?????TB?UB?QQ?CI?KC?LC?Q??OKIfO?]A?A@?_C?P@?S??qJ?{K?bD?eG?Q@?w]?dD?YH?aJ?KJ?rK?q??aA?{D?lI?uK?aD?gz?tK?uK?a??GE@vK?q??QQ?oy?ME?OE?pS?sJ?GC?gI?p??oNAGC?gI?`K?cLAME?rF?@??{N?lL?xG?A??{i@GE?pI?pD?{S?VC?_E?QE?SV?gO?YA?Q?????hO?iO?A??ki?jO?kO?q@?sA@WE?^A?qD?kS?OB?WB?aK?CO@OB?{G?aF?cYAOB?BM?AV?k_AE??lO?C?????TB?gF?PH?OK?E??mO?C?????E??nO?C?????E??oO?C?????E??pO?C?????OM?MD?aD?sE?pF?kA?QB?kC?pF?kA?aL?sD?E??qO?C?????]M?lF?Q??wM?^M?_M?a??[R?`M?_M?qA?_u?aM?^A?a??Cv?TB?LC?Q]?_[?J@?rO?B?????}@?~@?QD?cP?~M?cB?QA?_G?p??gH?QQ?Sn?`N?YB?AA????VC?aN?a??cS?VC?bN?aC?_Q?p??cN?a@?{PAE??sO?C?????XE?WA?`N?ks?s@?t@?AS?{_?q@?LH?QJ?{X?q@?^A?Q??gY?JI?KI?aC?[M?o??aG?A??CK@E@?S??PX?KC?rA?sA?@??GL?KC?LC?A@?[IIA??tO?B?????E??uO?C?????E??vO?C?????E??wO?C?????E??xO?C?????E??yO?C?????E??zO?C?????xE?{O?B?????xE?|O?B?????xE?}O?B?????CB?~O?B?????A@?AG?`d?OM?~???P?PY?KR?zA?xM?@M?Sf?@P?AP?PC?KO?@P?BP?p@?CM?E??CP?C?????E??DP?C?????E??EP?C?????E??FP?C?????VC?aD?PO@?e?Z??CI?PA??[@dB?cH?pJ?cG?dH?eH?@A?KF?VA?WA?@??{E@OB?SB?AA?Ca@VC?CK?P??w_?LI?q??qI?KH?[@?TG?@@?WH?E??GP?C?????E??HP?C?????HD?ID?@y?gR?bI?]A?P@?oq?MK?^A?PA?oa?_A?^A?AD?KB?u@?v@?A?????VC?bN?PA?_Q?ND?MD?p@?Gq?RH?cI?pA?K\BA??IP?B?????JP?q??@?????{F?|F?`F??]?{F?}F?`C?c]?]I?^I?`@?Ci?]I?_I?pK?sj?]I?KP?@C?kk?LP?MP?`C?sG?F@??@?@N?KF?F@?NP?aD?{G?~???P?@O?oQ?_G?`G?P@?sK?zA?OP?a??Gd?zA?{A?qD?_b?zA?fF?Q??GT?p??pB?@B?ox?X??HA?PE?WX?mC?YA?@?????VB?fJ?QI?sM?OB?PB?AQ?SU?zB?{B?`A?KQ?nI?^L?pA?sB?E??PP?C?????E??QP?C?????E??RP?C?????zB?^A?@i?oF?TB?LC?QB?[Z?N@?O@?pH?KS?o??zJ?q@?s_?tA?IE?QC??H?WH?KJ?AG?s^??L?@L?Qi?{i@TB?JC?QD?gW?d@?BA?aS?kx?HD?mE?`L?[S?nE?b@?@F?oE?oE?b@?PX?{B?pE?^A?`??OD?WH?XH?PA?K^?WH?SP?AA?Ga?|B?~B?pC?kN?rK?sK?A??KF?tA?yC?@??SM?fE?[L?A@?GB?fE?^A?AC??D?{@?S??@?????dJ?DM?Q??Kx?dJ?TP?AK?wk?dD?cD?QA?cH?fG?wM?a??cy?eD?UP?Q??GN?zA?xD?`??Ge?zA?fF?QA?GT?pF?YG?PC?wJ?ZG?[G?pA?sb?c??[G?PF?Wq?yD?VP?C?????E??WP?C?????dC?z@?qf?Wj?XP?YB?AA????Y@?YP?AO?_b?R@?ZP?AC??[?mM?[P?C?????xE?\P?B?????K??]P?B?????EA?V@?AX?sa?KE?LE?aA?cH?TB?LC?QD?cZ?zB?^A?pY?GF?`@?a@?qF?gO@TD?b@?aN??g?lA?AA?QB?KX?xJ?WJ?QA?oI?TB?JC?aB?gW?QA?QN?@C?WT?hC?^A?a@?sa?TB?JC?QA?cW?xJ?yJ?AJ?OG?MH?|J?qG?O~ATB??J?A??kK?o??PA?Pg?wg?p??XF?@??GP?JI?KI?@E?_M?LI?q??@e?kI?CA?^A?pM?{d?`@?V@?@??GG?Y@?^A?P[??E?ME?^A?AD?[B?zA?^A?Q??S\?^P?^A?Q??cC?U??V??pF?GE@kB?mB?@f?CU?_P?YA?@A????kB?`P?`??KU?tA?TI?Q??kF?PE?QE?aZ?_g?GC?UN?AB?k]@TB?UN?q@?{A?R@?FL?Q??cT??A?S??@@?GJ?dD?nH?AC?CG?fG?aP?QA?oa?KB?MB?a@?wE?|B?UJ?Qp?oF?fE?[L?aA?KB?p??O@?A??GEAMH?OK?PK?[YBMH?|J?q??wABE??bP?C?????oK?eA?aD?cH?WI?q??qM?gE?cP?g@?QD?oL?dP?^A?q??OI?eP?^A?a??GC?XE?WA?`A?[s?d@?AA?`w@Or?bB?cB?`@?kF?^K?_K?@@?g~@E??fP?C?????E??gP?C?????E??hP?C?????mC?YA?P@????iP?YB?P@????GC?PH?QC?OhALI?q??Ae?kI?WI?^A?QD?gD?zB?^A?Po??G?KB?LB?`A?GD?MJ?GJ?P@?[g?MJ?NJ?QB?CG?dK?ON?aC?{j?ZJ?oD?AF????II?[J?aA????k??l??qC?OA?\J?CN?a@?_X?GC?tF?A@?[[@CA?^A?qE?sd?QA?[A?PY?_X?dA?eA?p@?Gm?GC?`J?Q]?SN@TB?pI?AP?Sd?RH?SH?aM?{mBVC?^A?@t?gK?R@?^A?PG?cI?cA?bA?PY?w^?cA?VN?QA?k]?MI?OI?@??sC??L?@L?Ah?wi@eP?^A?AB?GC?jP?^A?q??kD?yF?zF?@B?gA?aM?^A?`B?{u?kP?|F?@?????kB?kE?`M??[?p???D?PB?GH@E??lP?C?????dC?eC?q@?gh?p??gH?P??_m?fE?qG?P??WA?fE?qG?@A?SD?E??mP?C?????[E?\E?qB?GG@p??O@?q@?KEAp??UA?qH?W^?jJ?g@?QJ?W?@CA?^A?aD?od?mA?kA?`d?{J?WI?nP?a@?CF?MH?NE?AD?wDBMH?|J?qB?C~A`@?iA?aB??L@@C?oP?qB??h?\F?pP?B?????XE?WA?`R?os?p??kC?AJ?Ge?qP?YA?@?????eD?UP?aA?GN?MC?wF?A@?_H?VC?WC?`|?OQ?p???D?p\?KI@rP?YA?@?????JF?EK?aE?OO?JF?sP?aA??G?HF?IF?a@?{C@TB?gF?QB?OK?ME?NE?@b?sF?ME?tP?qZ??Q?E??uP?C?????k??l??@k?OB?GC?vP?P??SMCPE?wH?P??W[?PE?wP?AE?wa?aM?^A?qG?Kv?`M?xP?AL?Sc?lC?WA?`N?Cx?v??pG?Q@?oR?yF?zF?PC?gA?LI?q??pc?_I?A??yP?B?????rK?sK?aA?WF?lI?uK?Q??Kz?lI?zP?AC?[@@GC?JG?Q??O\@aK?bK?@??[m?A@?AG?ad?OM?~???P?QY?KR?A@?iF?aX?sH?{P?|P?Q@?WI?p??r??@C?kt@dD?cD?PA?cH?fG?wM?pB?gy?v??w??@^@sX?v??}P?@@?_S?X??HA?aC?WX?VJ?WJ?AB?c`?KH?~P?A??WS@VC?nJ?aJ?cT?`M?pH?a??WT?`M??Q?aC?KH?OB?SB?AB?Ca@PE?JO?Q@?[C?PE?JO?Q@?S[@FA?GA?qF?{H?OB?xD?@??{o?TB?JC?PA?cW?TB?UB?qL?{H?TB?@Q?a@?gm?E??AQ?C?????E??BQ?C?????p??oB?PB?Cz?fE?^A?@A?{C?OF?rG?@A?cM?VC?WC?@???M?dK?^A?pE?[h?ME?qF?@W?OR?pE?^A?`B?{C?VG?WG?@C?S@?PE?vP?p??[B@Y@?^A?PP?oD?@C?AO?qD??K?GE??C?`N?GG?GC?PH?`@?_fAwN?xG?aB?c{?_A?^A?qE?KB?E@?S??`a?CD?mA?kA?@l?[K?E??CQ?C?????RH?SH?qL??nBML?S??pN?gM?d@?AA?@??Gp?d@?BA?@??Sx?p??tB?@??_FAdB?eB?aA?KC?ZF?cB?A??KJ?GC?gF?aA?SQAtA?oF?QQ?wL?R@?FL?QE?oT?@C?sF?p@?CY?VC?aD?PJ@wd?E??DQ?C?????`@?DD?@K??N@E??EQ?C?????E??FQ?C?????pF?MG?qF?WI?F@??N?A@?wF?A@?_D?`H?cQ?|B?}B?pC?WL?GQ?HQ?`@?gT?tA?FE?po?oJ?GE?IQ?aK?gP?MC?wF?QD?kH?]N?eA?`E?GC?zA?QJ?`q?OK@JQ?YA?A@????ME?KQ?A??CP?p??kC?qK?Ge?QA?|M?Q??KU?tA?oF?qM?wL?BO?DM?AB?kV?BO?LQ?a??KO?VC?WC?PT?sM?MQ?NQ?A??GW?vA?AA?qC?CF?DG?OQ?AA?_X?FG?^A?AB?wC?DG?^A?AA??Q?mL?^A?qH?SN?}??S??`W@Gr?CA?DA?A??Sg?d@?CD?AL?gm?`@?DD?qQ?[N@E??PQ?B?????Z??[??`I?wc@Z??QQ?AA?[^@ZJ?oD?An????\J?QH?AB?KW?c@?b@?PF?Cb?bB?RQ?P@?gI?dB?SQ?PJ?{D?ZF?RQ?pF?oN?ND?^A?@??WD?X??Y??QN?gZ?fG?gG?AB??~?fG?hG?Q@?Ce?RB?SB?a@?k~@B??TQ?B?????fA?S??pz?sj?LF?NF?qC?GD?TD?^A?AC?Cf?@C?OG?A@?Cp?@C?OG?Q??Ct?VJ?XJ?@Z?Oc?p??YE?@??Kt?P@?S??@@?gK?bD?nH?@@?GX?dD?nH?@E?GG?R@?S@?@??wK?E??UQ?C?????jF?WB?PB?gC?BJ?YB?@?????dJ?eJ?aC?gu?kH?S??AQ?cE?E??VQ?C?????pL?qL?P?????U??GA?aK?sS@U??WQ?A??{X?E??XQ?C?????E??YQ?C?????FG?^A?a@??C?ME?OE?Aq?gK?pF?MG?a@?GI?eM?fM?P??wG?eM?tF?@??kF?E??ZQ?C?????p??oB?aL?Wz?]@?p@?AE?SP?oH?[Q?qN?sY?NB?XN?@C?c^@OB?XN?`B?wG@E??\Q?C?????E??]Q?C?????cA?bA?pZ?w^?[H?VE?pP?k[?E??^Q?C?????E??_Q?C?????E??`Q?C?????E??aQ?C?????E??bQ?C?????K??cQ?B?????aA?jB?pU?CW?E??dQ?C?????\A?^A?AA?sA?zB?eQ?Q??GU?OL?PL?pE?kI?GC?tF?Q??[[@VC?WC?P{?SO?E??fQ?C?????aA?hA?pL?oT?@C?oP?qC??i?fA?S??pa?Sj?TD?gQ?aA?Gh?QA?hQ?Q??S^?A??iQ?B?????R@?S@?pT?kL?aA?V@?AB?KQ?qB?YA?PA????ZF?cB?aC?OJ?nG?oG?Q??CR@E??jQ?C?????E??kQ?C?????~??@@?aR?SG?B??lQ?B?????WK?XK?AE?{LAWK?YK?aI?k^B]I?KP?pC?kk?LP?MP?@??SG?[@?\@?QF?CW?zA?xM?@??Gf?oK?eA?A@?SH?OL?^A?@L?cD?pF?MG?AP?wI?d@?AA?PCA[r?OB?WB?`H?OO@KB?gE?PO?[O?mQ?nQ?`@?O[@]@?p@?@E?SP?oH?[Q?`B?CY?QA?[A?P^?S[?ME?qF?qI?gQ?dJ?eJ?Q??_u?dJ?TP?AA?ck?tA?uA?pF?WC?rA?AA?@???G?uG?}A?Q??KZ?v??}P?AD?gS?eD?fD?qB?GM?|A?gF?aC?cE?tG?fF?Q??SG?RH?gF?qI?KXC\F?oQ?B?????\??^??PB?[WBs??sJ?`E?{r@ME?tP?pK?WP?FG?q??`@?SI?mL?pQ?P??cj?LD?MD?@??WN?OB?XN?@??sG@HD?JD?PN?gE?KB?gE?@N?[O?OL?PL?`N?CJ?OM?^A?`@?GA?R@?^A?`H?gI?}@?^A?QH?oM?ME?UM?AP?CN?XE?WA?P??[s?v??w??@??_U?E??qQ?C?????p???D?@F?SH@p??oB?qH?Oz?p??WF?QA?gc?OM?MD?aE?sE?@P?AP?QC?KO?@P?BP?q@?CM?nE?b@?a??gE?c@?b@?aj?Cc?d@?e@?QZ?wi?}??g@?Q@?km?VB?fJ?qA?cM?MJ?NJ?pA?CG?rQ?sQ?E??kJ?OB?tE?aC?co?Y@?`E?qZ?WX?[@?\@?AP?_W?JF?EK?QD?OO?FK?YA?A@????[@?GK?A??_W?IJ?JJ?@??WH?tQ?q??@@????uQ?^A?P??{J?kB?mB?@??_S?p??r??@??Wt@X??HA?AR?{X?X??vQ?q@?oK?`@?gA?Q@?gB?`@?gA?Q@?[G?aA?gA?aU?SS?vA?AA?pC?CF?DG?OQ?@A?_X?cL?dL?@C?sU?}??S??pL@sq?jJ?g@?pD?O?@OB?{G?AH?oYAp??gH?Q??_m?fE?qG?A??WA?F@?NP?pB?{G?OJ?lF?@@?CU?_G?lF?@??wI?}L?^A?AQ?Cb@zA?xD?@??Ge?oH?pH?@S?CW?aM?pH?AH?_z?`M?wQ?AB?GI?xQ?^A?Q??K|?dA?eA?aF?Sm?p??SA?pD?CfAOB?xD?pH?kp?ME?OE?pO?oJ?dD?YH?QI?GJ?OB?WB?`K?CO@v??}P?A@?_S?lA?AA?AZ?CY?mA?AA?AA?KO?}J?WA?`@?SC@P@?S??@J?{K?E??yQ?C?????E??zQ?C?????E??{Q?C?????E??|Q?C?????}@?tJ?QA?_X?P@?^A?Q??CK?M@?^A?Q??{G?}??S??`eCwx?jJ?}Q?`A?c@@p??uB?@??Kh?E??~Q?C?????E???R?C?????E??@R?C?????E??AR?C?????RB?SB?AD?S?Ac??rN?qK?{T@~???P?AT?CR?{P?bL?a@?gI?bF?eA?Q??WH?bF?dF?aH?sU?d@?BA?qZ?wx?EA?gA?PC?[c?kF?lF?QA?gP?cL?^A?a@?{T?tA?yC?`Z?SN?VC?CK?aA?w_?VC?CK?AF?K`?oH?[Q?aE?[Y?`M?BR?A??w|?Y@?oJ?@c?cJ?R@?^A?`B?kB?PG?[I?qG?[G?CR?DR?Q@?OC?ER?DR?Q??CM?ME?qF?AP?wQ?Y@?dE?PQ?SZ?FR?GR?`K?gF?W@?^A?PG?S`?HR?oD?PD????II?[J?pA????\J?CN?`U?gY?\J?QH?`??GW?E??IR?C?????MH?NE?AQ?KEBMH?JR?a@?[CBKH?PK?Q??scAE??KR?C?????HD?ID?pM?{P?pF?kA?AN?sD?ZG?LR?q@?sM?kB?UC?PC?g\??A?S??pJ?[J?bD?eG?Q??w]?}J?WA?`A?SC@HD?KD?pP?CK?{N?qL?@?????E??MR?C?????QA?^A?@??{H?HD?mE?@I?WS?A??NR?B?????PE?JO?Q??S[@tA?oF?aL?sL?pF?AA?AA?SG?^O?`O?@??{P@oH?[Q?AI?cY?OR?xG?A??g}?mA?AA?PD?kP?ME?qF?aJ?gQ?`H?aH?qF?wQ@@C?OG?@C?Gt?@C?OG?P@?Cr?PG?QG?@A?cO?PG?[I?pG?[G?CR?DR?P@?OC?ER?DR?@A?CM?K??PR?B?????cA?VN?QB?o]?rE?YB?QD????Y@?`E?@]?_X?dJ?FM?QJ?S`?WH?HJ?@??KM?IJ?JJ?A??WH?uQ?q??Q??{J?uQ?q??Q??GK?~???P?@T?CR?{P?bL?`@?gI?lA?bL?@@?wW@lA?QR?AO?_V@lA?RR?QB?{l?SR?u??@??CW?CB?TR?B?????U@?eE?P??Km?tA?FE?PX?{I?}@?^A?pA?gL?~M?^A?P??cC?UR?^A?P??kB?vE?^A?@??oA?E??VR?C?????d@?BA?`n?Gy?mA?AA?@??cP?ME?qE?AI?sS?d@?CD?pJ?gm?rK?q??@@?sD?tK?uK?P@?wC@vK?q??`G?gy?vK?LM?pB?_n?d@?|@?AR?gj?WE?^A?QA?gS?OF?rG?AB?cM?dJ?eJ?QH?{u?d@?eA?`R?cl?p??bE?PB?Gv?fE?qG?@??SD?ME?UM?AY?gN?kB?mN?PA?G]?tA?oF?AT?wL?GE?^A?aK?SD?E??WR?C?????d??XR?C?????d??YR?C?????d??ZR?C?????K??[R?B?????</div>
<span style="position:fixed; bottom: 0; right:0; padding: 2px 4px; background-color: #ffffe0; border-top: 1px solid #ffc000; border-left: 1px solid #ffc000; border-top-left-radius: 4px;"><span id="produced">Produced by <a href='https://github.com/jvm-profiling-tools/async-profiler'>async-profiler</a>&nbsp;</span><span id='match' style="display: none">Matched: <span id='matchval'></span>&nbsp;<span id='reset' title='Clear'>&#x274c;</span></span></span>

<h1 id="title">Heatmap, CPU</h1>

<canvas id='canvas'></canvas>
<div id='hl'><span></span></div>

<span id='status' style="position:fixed; bottom: 0; left:0; padding: 2px 4px; background-color: #ffffe0; border-top: 1px solid #ffc000; border-right: 1px solid #ffc000; border-top-right-radius: 4px; display: none">&nbsp;</span>
<script>
	// Copyright 2020 Andrei Pangin
	// Licensed under the Apache License, Version 2.0.
	'use strict';
	let root, rootLevel, px, pattern;
	let reverse = true;
	const levels = Array(0);
	for (let h = 0; h < levels.length; h++) {
		levels[h] = [];
	}

	const canvas = document.getElementById('canvas');
	let c = canvas.getContext('2d');
	const hl = document.getElementById('hl');
	const status = document.getElementById('status');

	const canvasWidth = canvas.offsetWidth;
	let canvasHeight = canvas.offsetHeight;
	canvas.style.width = canvasWidth + 'px';
	canvas.width = canvasWidth * (devicePixelRatio || 1);
	canvas.height = canvasHeight * (devicePixelRatio || 1);
	if (devicePixelRatio) c.scale(devicePixelRatio, devicePixelRatio);
	c.font = document.body.style.font;

    const search = typeof searchIterative === 'function' ? searchIterative : searchSimple;
    const init = typeof renderHeatmap === 'function' ? renderHeatmap : render;

	const palette = [
		[0xb2e1b2, 20, 20, 20],
		[0x50e150, 30, 30, 30],
		[0x50cccc, 30, 30, 30],
		[0xe15a5a, 30, 40, 40],
		[0xc8c83c, 30, 30, 10],
		[0xe17d00, 30, 30,  0],
		[0xcce880, 20, 20, 20],
	];

	function getColor(p) {
		const v = Math.random();
		return '#' + (p[0] + ((p[1] * v) << 16 | (p[2] * v) << 8 | (p[3] * v))).toString(16);
	}

	function f(level, left, width, type, title, inln, c1, int) {
		levels[level].push({left: left, width: width, color: getColor(palette[type]), title: title,
			details: (int ? ', int=' + int : '') + (c1 ? ', c1=' + c1 : '') + (inln ? ', inln=' + inln : '')
		});
	}

	function samples(n) {
		return n === 1 ? '1 sample' : n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + ' samples';
	}

	function pct(a, b) {
		return a >= b ? '100' : (100 * a / b).toFixed(2);
	}

	function findFrame(frames, x) {
		let left = 0;
		let right = frames.length - 1;

		while (left <= right) {
			const mid = (left + right) >>> 1;
			const f = frames[mid];

			if (f.left > x) {
				right = mid - 1;
			} else if (f.left + f.width <= x) {
				left = mid + 1;
			} else {
				return f;
			}
		}

		if (frames[left] && (frames[left].left - x) * px < 0.5) return frames[left];
		if (frames[right] && (x - (frames[right].left + frames[right].width)) * px < 0.5) return frames[right];

		return null;
	}

    const marked = [];

    function render(newRoot, newLevel, minLevel) {
        minLevel = minLevel || 0;
        if (root && minLevel === 0) {
			c.fillStyle = '#ffffff';
			c.fillRect(0, 0, canvasWidth, canvasHeight);
		}

		root = newRoot || levels[0][0];
		rootLevel = newLevel || 0;
		px = canvasWidth / root.width;

		const x0 = root.left;
		const x1 = x0 + root.width;

		if (minLevel === 0) {
		    marked.length = 0;
        }

		function mark(f) {
			return marked[f.left] >= f.width || (marked[f.left] = f.width);
		}

		function totalMarked() {
			let total = 0;
			let left = 0;
			Object.keys(marked).sort(function(a, b) { return a - b; }).forEach(function(x) {
				if (+x >= left) {
					total += marked[x];
					left = +x + marked[x];
				}
			});
			return total;
		}

		function drawFrame(f, y, alpha) {
			if (f.left < x1 && f.left + f.width > x0) {
                let match = pattern && pattern.test(f.title) && mark(f);
                const fw = f.width * px;
                if (fw < 0.1) {
                    return;
                }
                c.fillStyle = match ? '#ee00ee' : f.color;
				c.fillRect((f.left - x0) * px, y, fw, 15);

				if (fw >= 21) {
					const chars = Math.floor(fw / 7);
					const title = f.title.length <= chars ? f.title : f.title.substring(0, chars - 2) + '..';
					c.fillStyle = '#000000';
					c.fillText(title, Math.max(f.left - x0, 0) * px + 3, y + 12, fw - 6);
				}

				if (alpha) {
					c.fillStyle = 'rgba(255, 255, 255, 0.5)';
					c.fillRect((f.left - x0) * px, y, fw, 15);
				}
			}
		}

		for (let h = minLevel; h < levels.length; h++) {
			const y = reverse ? h * 16 : canvasHeight - (h + 1) * 16;
			const frames = levels[h];
			for (let i = 0; i < frames.length; i++) {
				drawFrame(frames[i], y, h < rootLevel);
			}
		}

		return totalMarked();
	}

	canvas.onmousemove = function() {
		const h = Math.floor((reverse ? event.offsetY : (canvasHeight - event.offsetY)) / 16);
		if (h >= 0 && h < levels.length) {
			const f = findFrame(levels[h], event.offsetX / px + root.left);
			if (f) {
				hl.style.left = (Math.max(f.left - root.left, 0) * px + canvas.offsetLeft) + 'px';
				hl.style.width = (Math.min(f.width, root.width) * px) + 'px';
				hl.style.top = ((reverse ? h * 16 : canvasHeight - (h + 1) * 16) + canvas.offsetTop) + 'px';
				hl.firstChild.textContent = f.title;
				hl.style.display = 'block';
				let details = f.details || '';
				canvas.title = f.title + '\n(' + samples(f.width) + details + ', ' + pct(f.width, levels[0][0].width) + '%)';
				canvas.style.cursor = 'pointer';
				canvas.onclick = function() {
					if (f !== root) {
						render(f, h);
						canvas.onmousemove();
					}
				};
				status.textContent = 'Function: ' + canvas.title;
                status.style.display = 'inline';
				return;
			}
		}
		canvas.onmouseout();
	}

	canvas.onmouseout = function() {
		hl.style.display = 'none';
		status.textContent = '\xa0';
        status.style.display = 'none';
		canvas.title = '';
		canvas.style.cursor = '';
		canvas.onclick = '';
	}

    window.onkeydown = function() {
        if (event.ctrlKey && event.keyCode === 70) {
            event.preventDefault();
            search(true);
        } else if (event.keyCode === 27) {
            search(false);
        }
    }

    document.getElementById('reset').onclick = function() {
        search(false);
    }



    class DataBuffer {
        data;
        pos = 0;
        constructor(encodedData) {
            this.data = encodedData;
        }

        nextVarInt() {
            let res = 0;
            let shift = 0;
            let b;
            do {
                b = this.byteAt(this.pos++);
                res |= (b & 0x1F) << shift
                shift += 5;
            } while (b >= 0x20)
            return res;
        }

        byteAt(pos) {
            return this.data.charCodeAt(pos) - 63;
        }

        int30(pos) {
            return (this.byteAt(pos++) << 0)
                | (this.byteAt(pos++) << 6)
                | (this.byteAt(pos++) << 12)
                | (this.byteAt(pos++) << 18)
                | (this.byteAt(pos) << 24);
        }

        int36(pos) {
            return (this.byteAt(pos++) << 0)
                | (this.byteAt(pos++) << 6)
                | (this.byteAt(pos++) << 12)
                | (this.byteAt(pos++) << 18)
                | (this.byteAt(pos++) << 24)
                | (this.byteAt(pos++) << 30);
        }

        varInt(pos) {
            let res = 0;
            let shift = 0;
            let b;
            do {
                b = this.byteAt(pos++);
                res |= (b & 0x1F) << shift
                shift += 5;
            } while (b >= 0x20)
            return res;
        }

    }

    class HeatmapCollection extends DataBuffer {

        maxZoom;
        blocks;
        zoomToCounts;
        zoomToMaxes;
        zoom;

        constructor(encodedData) {
            super(encodedData);

            this.maxZoom = this.nextVarInt();   // fixme
            this.maxZoom = 3;

            const startMethodsCount = this.nextVarInt();
            const starts = new Set();
            for (let i = 0; i < startMethodsCount; i++) {
                starts.add(this.nextVarInt());
            }

            const lz = new Lz78Data(this, starts);

            let max = 1;

            let prevByte = -1;
            const blocksCount = this.nextVarInt();
            let counts = new Uint32Array(blocksCount);
            for (let i = 0; i < blocksCount; i++) {
                let v = 0;
                let p = 0;
                let hasMore = false;
                do {
                    if (prevByte === -1) {
                        prevByte = this.byteAt(this.pos++);
                        hasMore = (prevByte >>> 5) === 1;
                        v |= ((prevByte >>> 3) & 3) << p;
                        prevByte &= 7;
                    } else {
                        hasMore = (prevByte >>> 2) === 1;
                        v |= (prevByte & 3) << p;
                        prevByte = -1;
                    }
                    p += 2;
                } while (hasMore);
                counts[i] = v;
                max = Math.max(max, v);
            }

            this.blocks = lz.decode(counts);

            this.zoomToCounts = new Array(this.maxZoom);
            this.zoomToMaxes = new Array(this.maxZoom);

            this.zoomToCounts[0] = counts;
            this.zoomToMaxes[0] = max;

            for (let z = 1; z < zoomToGroupSize.length; z++) {
                const size = zoomToGroupSize[z] / zoomToGroupSize[z - 1];
                const nextCounts = new Uint32Array(Math.ceil(counts.length / size));
                for (let i = 0; i < counts.length; i++) {
                    const index = (i / size) | 0;
                    nextCounts[index] += counts[i];
                    max = Math.max(max, nextCounts[index]);
                }
                this.zoomToCounts[z] = counts = nextCounts;
                this.zoomToMaxes[z] = max;
            }

            this.data = null;
        }

        setZoom(zoom) {
            this.zoom = zoom;
        }

        heatmap() {
            return this.zoomToCounts[this.zoom];
        }

        max() {
            return this.zoomToMaxes[this.zoom];
        }

        currentTimeBlock() {
            // FIXME 20 is hardcoded
            return 20 * zoomToGroupSize[this.zoom];
        }

        startBlock() {
            const blockMs = this.currentTimeBlock();
            const timeBlockMs = blockMs * heatHeight * 20;
            return Math.floor(startMs % timeBlockMs / blockMs);
        }

        count() {
            return Math.ceil((this.heatmap().length + this.startBlock()) / 20 / heatHeight) * 20 * heatHeight;
        }

    }

    class LzChunk extends Uint32Array {
        constructor(size) {
            super(size);
        }

        copyWithNext(element) {
            let result = new LzChunk(this.length + 1);
            result.set(this);
            result[this.length] = element;
            return result;
        }
    }

    class Lz78Data {
        data;
        starts;
        lz78;

        tmp = [];
        prevSubTreeId = -1;

        constructor(data, starts) {
            this.data = data;
            this.starts = starts;

            this.lz78 = [new LzChunk(0)];
        }

        decode(counts) {
            const synonymsCount = this.data.nextVarInt();
            const synonyms = new Uint32Array(synonymsCount);
            for (let i = 0; i < synonymsCount; i++) {
                synonyms[i] = this.data.nextVarInt();
            }

            const tailsCount = this.data.nextVarInt();
            const tails = new Uint32Array(tailsCount);
            for (let i = 0; i < tailsCount; i++) {
                const tail = this.data.nextVarInt();
                tails[i] = (tail < synonyms.length ? synonyms[tail] : tail) - synonymsCount;
            }

            const result = new Array(counts.length);
            for (let i = 0; i < counts.length; i++) {
                result[i] = new Array(counts[i]);
            }

            let thisChunk = null;
            let currentTail = 0;
            const tmp = [];
            let t = -1;
            for (let block of result) {
                for (let i = 0; i < block.length; i++, currentTail++) {
                    t++;
                    const tailId = tails[currentTail];
                    if (tailId < this.lz78.length) {
                        const tail = this.lz78[tailId];
                        if (tail.length !== 0 && this.starts.has(tail[0])) {
                            console.log(t, 'only', tailId);
                            block[i] = tail;
                            continue;
                        }
                    }

                    if (thisChunk === null) {
                        const chunkId = this.data.nextVarInt();
                        const prevChunk = this.lz78[(chunkId < synonyms.length ? synonyms[chunkId] : chunkId) - synonymsCount];
                        const addMethodId = this.data.nextVarInt();
                        console.log(t, 'chunk', chunkId, addMethodId);
                        thisChunk = prevChunk.copyWithNext(addMethodId);
                        this.lz78.push(thisChunk);
                    }

                    tmp.length = 0;
                    tmp.push(...thisChunk); // FIXME it is ok to push as is, or even as lz78 index

                    while (true) {
                        const chunkId = this.data.nextVarInt();
                        const prevChunk = this.lz78[(chunkId < synonyms.length ? synonyms[chunkId] : chunkId) - synonymsCount];
                        const addMethodId = this.data.nextVarInt();
                        thisChunk = prevChunk.copyWithNext(addMethodId);
                        this.lz78.push(thisChunk);
                        console.log(t, 'chunk', chunkId, addMethodId);

                        if (this.starts.has(thisChunk[0])) {
                            console.log(t, 'starts', thisChunk[0]);
                            console.log(t, 'ends', tailId);
                            const tail = this.lz78[tailId];
                            tmp.push(...tail);
                            block[i] = new Uint32Array(tmp);
                            break;
                        } else {
                            tmp.push(...thisChunk);
                        }
                    }
                }
            }

            return result;
        }
    }

    class Queue {
        data = new Array(1024);
        first = 0;
        afterLast = 0;

        push(e) {
            let a = this.afterLast;
            let d = this.data;
            d[a++] = e;
            if (a >= this.data.length) {
                a = 0;
            }
            if (a === this.first) {
                let d2 = new Array(d.length * 2);
                let i = 0;
                for (let p = a; p < d.length; p++) {
                    d2[i++] = d[p];
                }
                for (let p = 0; p < a; p++) {
                    d2[i++] = d[p];
                }
                this.data = d2;
                this.first = 0;
                this.afterLast = i;
            } else {
                this.afterLast = a;
            }
        }

        shift() {
            let i = this.first;
            let r = this.data[i++];
            if (i >= this.data.length) {
                this.first = 0;
            } else {
                this.first = i;
            }
            return r;
        }

        size() {
            let r = this.afterLast - this.first;
            if (r < 0) {
                return r + this.data.length;
            }
            return r;
        }

        reset() {
            this.first = this.afterLast = 0;
        }
    }

    function claimHtml(id) {
        let e = document.getElementById(id);
        let r = e.innerHTML;
        e.remove();
        return r;
    }

    let sq = 5;
    let sqPx = sq;
    let sqScale = 1;
    const canvasScrollPadding = 200;
    let canvasTimeHeight = 12;
    let canvasTimeHeightPx = 12;
    let ticksPerSecond = 1000000000;
    let startMs = 1666205713557;

    const zoomToGroupSize = [
        1,              // 20 ms
        50,             // 1 s
        50 * 5,         // 5 s
        50 * 60         // 1 m
    ];
    const zoomToHeight = [50, 60, 60, 60]

    let methods = new DataBuffer(claimHtml("methods"));
    let executionsHeatmap = new HeatmapCollection(claimHtml("executionsHeatmap"));
    let cpool = ["all","","libsystem_pthread.dylib","thread_start","_pthread_start","libjvm.dylib","thread_native_entry","Thread::call_run","JavaThread::run","JavaThread::thread_main_inner","attach_listener_thread_entry","libsystem_kernel.dylib","close","Monitor::wait_without_safepoint_check","os::PlatformMonitor::wait","__psynch_cvwait","WatcherThread::run","WatcherThread::sleep","java.lang.Thread","run","java.util.concurrent.ThreadPoolExecutor$Worker","java.util.concurrent.ThreadPoolExecutor","runWorker","getTask","java.util.concurrent.LinkedBlockingQueue","take","java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject","await","java.util.concurrent.ForkJoinPool","managedBlock","unmanagedBlock","java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode","block","java.util.concurrent.locks.LockSupport","park","jdk.internal.misc.Unsafe","libasyncProfiler.so","LockTracer::UnsafeParkHook","Unsafe_Park","Parker::park","ok.dht.test.ilin.servers.ExpandableHttpServer$$Lambda$201.0x0000000800d864b0","ok.dht.test.ilin.servers.ExpandableHttpServer","lambda$handleRequest$1","ok.dht.test.ilin.sharding.ShardHandler","executeRequest","jdk.internal.net.http.HttpClientFacade","send","jdk.internal.net.http.HttpClientImpl","java.util.concurrent.CompletableFuture","get","waitingGet","java.util.concurrent.CompletableFuture$Signaller","java.util.concurrent.SynchronousQueue","poll","java.util.concurrent.SynchronousQueue$TransferStack","transfer","parkNanos","JNIEnv_::CallStaticObjectMethod","jni_CallStaticObjectMethodV","JNI_ArgumentPusher::JNI_ArgumentPusher","SignatureIterator::set_fingerprint","jdk.internal.net.http.HttpClientImpl$SelectorManager","sun.nio.ch.SelectorImpl","select","lockAndDoSelect","sun.nio.ch.KQueueSelectorImpl","doSelect","sun.nio.ch.KQueue","kevent","one.nio.server.SelectorThread","one.nio.net.JavaSelector","jvmti_GetClassSignature","JvmtiEnv::GetClassSignature","os::malloc","libsystem_malloc.dylib","malloc","jdk.internal.net.http.common.SequentialScheduler$SchedulableTask","jdk.internal.net.http.common.SequentialScheduler$CompleteRestartableTask","jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter","complete","jdk.internal.net.http.common.SequentialScheduler$LockingRestartableTask","jdk.internal.net.http.Http1AsyncReceiver$$Lambda$310.0x0000000800dafdd8","jdk.internal.net.http.Http1AsyncReceiver","flush","handlePendingDelegate","jdk.internal.net.http.Http1Response$BodyReader","onSubscribe","jdk.internal.net.http.ResponseContent$FixedLengthBodyParser","jdk.internal.net.http.Http1Response$$Lambda$490.0x0000000800dce120","jdk.internal.net.http.Http1Response","onFinished","jdk.internal.net.http.HttpConnection","closeOrReturnToCache","jdk.internal.net.http.ConnectionPool","returnToPool","registerCleanupTrigger","jdk.internal.net.http.SocketTube","connectFlows","subscribe","jdk.internal.net.http.SocketTube$InternalReadPublisher","jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription","signalSubscribe","registerEvent","register","SharedRuntime::complete_monitor_locking_C","SharedRuntime::monitor_enter_helper","ObjectSynchronizer::enter","ObjectMonitor::enter","JvmtiExport::post_monitor_contended_entered","LockTracer::MonitorContendedEntered","LockTracer::recordContendedLock","thread_self_trap","purgeExpiredConnectionsAndReturnNextDeadline","java.time.Instant","now","java.time.Clock","currentInstant","jdk.internal.misc.VM","getNanoTimeAdjustment","JVM_GetNanoTimeAdjustment","pthread_jit_write_protect_np","jdk.internal.net.http.AsyncTriggerEvent","handle","jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$290.0x0000000800dabd58","handleSubscribeEvent","jdk.internal.net.http.common.SequentialScheduler","runOrSchedule","jdk.internal.net.http.SocketTube$SocketFlowTask","jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284.0x0000000800daa9b0","read","handlePending","jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription","signalOnSubscribe","jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber","jdk.internal.net.http.HttpClientImpl$DelegatingExecutor","execute","offer","java.util.concurrent.SynchronousQueue$TransferStack$SNode","tryMatch","unpark","Unsafe_Unpark","__psynch_cvsignal","unknown_Java","mach_absolute_time","sendAsync","jdk.internal.net.http.MultiExchange","responseAsync","completeAsync","java.util.concurrent.CompletableFuture$AsyncSupply","postComplete","java.util.concurrent.CompletableFuture$UniCompose","tryFire","jdk.internal.net.http.MultiExchange$$Lambda$220.0x0000000800d8bcd8","apply","lambda$responseAsync0$2","responseAsyncImpl","jdk.internal.net.http.ResponseTimerEvent","of","<init>","jdk.internal.net.http.TimeoutEvent","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$418.0x0000000800dc4f48","jdk.internal.net.http.SocketTube$InternalWriteSubscriber","requestMore","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription","jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription","request","jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask","onNext","tryFlushCurrent","writeAvailable","java.nio.channels.SocketChannel","write","sun.nio.ch.SocketChannelImpl","sun.nio.ch.IOUtil","sun.nio.ch.SocketDispatcher","writev","sun.nio.ch.FileDispatcherImpl","writev0","one.nio.net.Session","process","one.nio.http.HttpSession","processRead","one.nio.net.JavaSocket","readIntoNativeBuffer","read0","putConnection","java.util.HashMap","getNode","jdk.internal.net.http.ConnectionPool$CacheKey","equals","OptoRuntime::new_array_C","InstanceKlass::allocate_objArray","CollectedHeap::array_allocate","MemAllocator::allocate","MemAllocator::Allocation::notify_allocation","libsystem_platform.dylib","_sigtramp","AllocTracer::trapHandler","Profiler::recordSample","vframe::java_sender","selectNow","checkOpen","jvmti_GetCurrentThread","java.net.http.HttpHeaders","firstValue","allValues","java.util.Collections$UnmodifiableMap","java.util.TreeMap","getEntry","getEntryUsingComparator","java.lang.String$CaseInsensitiveComparator","compare","java.lang.StringLatin1","compareToCI","java.util.ArrayList","forEach","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$405.0x0000000800dbf1d8","accept","lambda$run$3","handleEvent","jdk.internal.net.http.SocketTube$SocketFlowEvent","jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent","signalEvent","signalReadable","ObjectMonitor::EnterI","os::PlatformEvent::park","java.util.concurrent.atomic.AtomicReference","compareAndSet","java.lang.invoke.VarHandleGuards","guard_LLL_Z","jni_invoke_static","JavaCalls::call_helper","JavaCallWrapper::JavaCallWrapper","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$298.0x0000000800dad140","startSubscription","jdk.internal.net.http.Exchange","responseAsyncImpl0","establishExchange","jdk.internal.net.http.ExchangeImpl","uniHandleStage","uniHandle","jdk.internal.net.http.ExchangeImpl$$Lambda$249.0x0000000800d969f8","lambda$get$0","createExchangeImpl","thenApply","uniApplyStage","uniApplyNow","jdk.internal.net.http.ExchangeImpl$$Lambda$314.0x0000000800db0900","lambda$createExchangeImpl$2","h2Upgrade","jdk.internal.net.http.HttpRequestImpl","setH2Upgrade","jdk.internal.net.http.Http2ClientImpl","getSettingsString","getClientSettings","getParameter","jdk.internal.net.http.common.Utils","getIntegerNetProperty","java.security.AccessController","doPrivileged","executePrivileged","retrieveProxy","sun.net.spi.DefaultProxySelector","java.lang.String","equalsIgnoreCase","regionMatches","regionMatchesCI","java.lang.Character","toLowerCase","java.lang.CharacterDataLatin1","getProperties","libdyld.dylib","tlv_get_addr","jdk.internal.net.http.Exchange$$Lambda$330.0x0000000800db2d20","lambda$responseAsyncImpl0$10","checkFor407","jdk.internal.net.http.Exchange$$Lambda$241.0x0000000800d93128","lambda$responseAsyncImpl0$9","jdk.internal.net.http.Http1Exchange","sendHeadersAsync","OptoRuntime::new_instance_C","InstanceKlass::allocate_instance","VMThread::run","VMThread::loop","VMThread::inner_execute","VMThread::evaluate_operation","VM_Operation::evaluate","VM_G1CollectForAllocation::doit","G1CollectedHeap::do_collection_pause_at_safepoint","G1CollectedHeap::do_collection_pause_at_safepoint_helper","JvmtiGCMarker::~JvmtiGCMarker","readAvailable","jdk.internal.net.http.Http1Response$HeadersReader","tryAsyncReceive","jdk.internal.net.http.Http1Response$Receiver","java.util.concurrent.CompletableFuture$UniApply","java.util.concurrent.CompletableFuture$UniCompletion","claim","java.util.concurrent.CompletableFuture$Completion","postFire","java.util.concurrent.CompletableFuture$UniHandle","jdk.internal.net.http.MultiExchange$$Lambda$396.0x0000000800dbddf0","lambda$responseAsyncImpl$7","cancelTimer","jdk.internal.net.http.common.Log","logTrace","jvmti_GetStackTrace","JvmtiEnvBase::get_stack_trace","JavaThread::last_java_vframe","vframe::new_vframe","compiledVFrame::compiledVFrame","CompiledMethod::scope_desc_at","CompiledMethod::find_pc_desc","sendResponse","writeResponse","one.nio.net.Session$ArrayQueueItem","writeFromNativeBuffer","write0","thenCompose","uniComposeStage","jdk.internal.net.http.Http1Exchange$$Lambda$379.0x0000000800dbb760","lambda$sendHeadersAsync$4","jdk.internal.net.http.ConnectionPool$CleanupTrigger","resumeReadEvent","resumeEvent","eventUpdated","ObjectMonitor::TrySpin","ObjectMonitor::NotRunnable","jdk.internal.net.http.Http1Request","headers","collectHeaders0","collectHeaders1","java.lang.StringBuilder","append","java.lang.AbstractStringBuilder","ensureCapacityInternal","newCapacity","jdk.internal.util.ArraysSupport","newLength","arrayof_jbyte_disjoint_arraycopy","jdk.internal.net.http.Http1Exchange$Http1Publisher","ResourceArea::rollback_to","Chunk::next_chop","ChunkPool::free","pthread_mutex_lock","checkRequestMore","pthread_getspecific","compiledVFrame::sender","ScopeDesc::sender","ScopeDesc::decode_body","CompressedReadStream::read_int","wakeup","write1","getOutgoing","java.util.concurrent.locks.ReentrantLock","lock","java.util.concurrent.locks.ReentrantLock$Sync","java.util.concurrent.locks.ReentrantLock$NonfairSync","initialTryLock","java.util.concurrent.locks.AbstractOwnableSynchronizer","setExclusiveOwnerThread","vframe::sender","requestURI","getPathAndQuery","java.lang.invoke.Invokers$Holder","linkToTargetMethod","java.lang.invoke.LambdaForm$MH.0x0000000800c13800","invoke","ok.dht.test.ilin.servers.ExpandableHttpServer$$Lambda$536.0x0000000800d868e8","lambda$handleRequest$0","one.nio.http.HttpServer","handleRequest","RequestHandler0_upsertEntity","ok.dht.test.ilin.service.EntityService","upsertEntity","org.rocksdb.RocksDB","put","librocksdbjni18323329994961417160.jnilib","Java_org_rocksdb_RocksDB_put__J_3BII_3BII","rocksdb_put_helper","rocksdb::DBImpl::Put","rocksdb::DB::Put","rocksdb::DBImpl::Write","rocksdb::DBImpl::WriteImpl","rocksdb::WriteThread::AwaitState","swtch_pri","rocksdb::DBImpl::WriteToWAL","rocksdb::log::Writer::AddRecord","rocksdb::WritableFileWriter::Flush","rocksdb::WritableFileWriter::WriteBuffered","processHttpBuffer","one.nio.http.Request","getHeader","handleParsedRequest","isForSelf","java.util.concurrent.atomic.AtomicBoolean","set","jdk.internal.net.http.Http1HeaderParser","parse","readStatusLineFeed","java.lang.Integer","parseInt","digit","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$411.0x0000000800dc4678","asyncReceive","jdk.internal.net.http.Http1Response$Http1BodySubscriber","onComplete","jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber","java.util.concurrent.CompletableFuture$UniWhenComplete","uniWhenComplete","jdk.internal.net.http.ResponseSubscribers$$Lambda$516.0x0000000800dd8460","jdk.internal.net.http.ResponseSubscribers","lambda$getBodyAsync$2","jdk.internal.net.http.MultiExchange$$Lambda$224.0x0000000800d90910","lambda$responseAsync0$4","readBodyAsync","readBody","whenComplete","uniWhenCompleteStage","jdk.internal.net.http.Http1Response$$Lambda$484.0x0000000800dcd670","lambda$readBody$3","start","jdk.internal.net.http.common.MinimalFuture","headersOf","jdk.internal.net.http.Exchange$$Lambda$387.0x0000000800dbc9a0","lambda$responseAsyncImpl0$8","jdk.internal.net.http.Exchange$$Lambda$237.0x0000000800d92808","sendRequestBody","sendBodyAsync","continueRequest","jdk.internal.net.http.RequestPublishers$ByteArrayPublisher","jdk.internal.net.http.PullPublisher","jdk.internal.net.http.PullPublisher$Subscription","resumeOrEndHeaders","java.net.http.HttpHeaders$$Lambda$203.0x0000000800d0bda0","lambda$headersOf$1","addEntryToEmptyMap","java.util.TreeMap$Entry","java.lang.Object","os::javaTimeMillis","libsystem_c.dylib","clock_gettime","gettimeofday","interrupted","InstanceKlass::signature_name","Arena::Amalloc","_complete_monitor_locking_Java","frame::real_sender","frame::sender","frame::sender_for_compiled_frame","G1CollectedHeap::gc_prologue","CollectedHeap::ensure_parsability","ThreadLocalAllocBuffer::retire","CollectedHeap::fill_with_object","HandleMark::initialize","plus","java.time.Duration","addTo","java.util.Optional","isPresent","jdk.internal.net.http.common.Demand","tryDecrement","decreaseAndGet","java.util.concurrent.atomic.AtomicLong","JvmtiExport::post_monitor_contended_enter","jvmti_SetTag","JvmtiEnv::SetTag","JvmtiTagMap::set_tag","Mutex::lock_without_safepoint_check","_pthread_mutex_firstfit_lock_slow","__psynch_mutexwait","unipush","tryPushStack","guard_LL_V","java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite","JavaThreadParkedState::~JavaThreadParkedState","libnio.dylib","Java_sun_nio_ch_SocketDispatcher_read0","__gettimeofday","jdk.internal.net.http.MultiExchange$$Lambda$392.0x0000000800dbd4d0","lambda$responseAsyncImpl$6","responseFilters","jdk.internal.net.http.AuthenticationFilter","response","getCache","java.util.WeakHashMap","hash","hashCode","JVM_IHashCode","processUpdateQueue","java.lang.Iterable","java.util.ImmutableCollections$AbstractImmutableList","iterator","ThreadsListHandle::ThreadsListHandle","ObjectSynchronizer::FastHashCode","parseRequest","one.nio.util.Utf8","resumeOrSecondCR","addHeaderFromString","isValidName","length","encode","JNIHandles::make_local","toUpperCase","filterChain","jdk.internal.net.http.FilterFactory","getFilterChain","java.lang.reflect.Constructor","newInstance","newInstanceWithCaller","acquireConstructorAccessor","setConstructorAccessor","JvmtiThreadEventMark::JvmtiThreadEventMark","processEvents","clearInterrupt","drain","java.nio.ByteBuffer","allocate","java.nio.HeapByteBuffer","JavaThread::is_Java_thread","purgeTimeoutsAndReturnNextDeadline","java.util.TreeSet","isEmpty","JavaThread::threadObj","_platform_memmove","isAsciiString","CompiledMethod::is_compiled","getDebugLogger","jdk.internal.net.http.common.DebugLogger","createHttpLogger","JfrEvent<EventThreadPark>::should_commit","on","isOpen","isFinished","ok.dht.test.ilin.hashing.impl.ConsistentHashing","getServerAddressFromKey","pthread_dependency_wait_np.cold.3","toAsciiString","sun.misc.Unsafe","copyMemory","copyMemoryChecks","checkPrimitivePointer","checkPointer","java.util.HashSet","contains","registerTimer","wakeupSelector","jdk.internal.net.http.HttpClientImpl$$Lambda$160.0x0000000800d04450","getAsBoolean","unlock","java.util.concurrent.locks.AbstractQueuedSynchronizer","release","signalNext","jdk.internal.net.http.MultiExchange$CancelableRef","java.lang.ref.WeakReference","java.lang.ref.Reference","jdk.internal.net.http.Http1Response$$Lambda$491.0x0000000800dce9c0","lambda$readBody$1","java.util.concurrent.ForkJoinTask","compareAndSetForkJoinTaskTag","casHead","newIncompleteFuture","incrementAndGet","methodHandle::~methodHandle","java.util.Objects","java.net.InetSocketAddress","java.net.InetSocketAddress$InetSocketAddressHolder","java.util.TreeMap$KeyIterator","next","java.util.TreeMap$PrivateEntryIterator","nextEntry","successor","CompileBroker::compiler_thread_loop","CompileBroker::invoke_compiler_on_method","C2Compiler::compile_method","Compile::Compile","Compile::Optimize","PhaseIdealLoop::optimize","PhaseIdealLoop::PhaseIdealLoop","PhaseIdealLoop::build_and_optimize","PhaseIdealLoop::build_loop_late","PhaseIdealLoop::build_loop_late_post_work","Compile::Code_Gen","PhaseOutput::fill_buffer","NonSafepointEmitter::observe_instruction","NonSafepointEmitter::emit_non_safepoint","Symbol::as_C_string","java.net.URI","create","java.net.URI$Parser","parseHierarchical","parseAuthority","substring","newString","java.util.Arrays","copyOfRange","jbyte_disjoint_arraycopy","_pthread_cond_wait","pthread_testcancel","java.util.stream.AbstractPipeline","wrapAndCopyInto","tryRelease","setState","jdk.internal.net.http.Http1Request$FixedContentSubscriber","jdk.internal.net.http.Http1Exchange$Http1BodySubscriber","uniAcceptStage","JavaCallWrapper::~JavaCallWrapper","firstValueAsLong","java.util.ImmutableCollections$MapN","probe","casStatus","guard_LII_Z","java.lang.invoke.VarForm","getMemberName","thenAccept","uniAcceptNow","jdk.internal.net.http.Http1Exchange$$Lambda$447.0x0000000800dc1800","lambda$sendBodyAsync$8","requestMoreBody","jdk.internal.net.http.PullPublisher$Subscription$PullTask","createHttp1Exchange","getConnection","tryLock","jdk.internal.net.http.ConnectionPool$ExpiryList","add","truncatedTo","plusNanos","ofEpochSecond","SharedRuntime::complete_monitor_unlocking_C","SharedRuntime::monitor_exit_helper","ObjectMonitor::ExitEpilog","toString","OptoRuntime::new_array_nozero_C","java.lang.invoke.LambdaForm$MH.0x0000000800d88800","invokeExact_MT","java.lang.invoke.LambdaForm$DMH.0x0000000800ddc000","newInvokeSpecial","java.lang.invoke.DirectMethodHandle","allocateInstance","_malloc_zone_malloc","nanov2_malloc","nanov2_allocate","nanov2_allocate_from_block","signal","isHeldExclusively","getExclusiveOwnerThread","jni_GetObjectClass","call_stub","copy","java.lang.invoke.DirectMethodHandle$Holder","sun.nio.ch.Util","getTemporaryDirectBuffer","sun.nio.ch.Util$BufferCache","jdk.internal.net.http.HttpRequestBuilderImpl","uri","checkURI","java.util.Locale","getLanguage","_kernelrpc_mach_port_deallocate_trap","CodeBlob::is_compiled","startParsingRequestBody","setBody","rocksdb::WriteThread::CompleteParallelMemTableWriter","sun.nio.ch.IOVecWrapper","java.lang.ThreadLocal","java.lang.ThreadLocal$ThreadLocalMap","addEntry","levelEnabledFor","default_zone_malloc","java.lang.reflect.AccessibleObject","checkAccess","verifyAccess","isAccessChecked","refersTo","java.util.List","copyOf","java.util.ImmutableCollections","listCopy","PcDescContainer::find_pc_desc_internal","startsWith","collectCookies","addTrailingOperation","jdk.internal.net.http.HttpConnection$TrailingOperations","java.util.IdentityHashMap","java.lang.System","identityHashCode","jdk.internal.net.http.common.HttpHeadersBuilder","build","trim","MemAllocator::mem_allocate","MemAllocator::allocate_inside_tlab_slow","G1CollectedHeap::allocate_new_tlab","G1CollectedHeap::attempt_allocation_slow","G1Policy::preventive_collection_required","jvmti_GetTag","JvmtiEnvBase::phase","I2C/C2I adapters","JNIHandleBlock::allocate_handle","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2646116ull, G1BarrierSet>, ","os::current_thread_enable_wx","FlightRecorder::recordEvent","Recording::recordMonitorBlocked","getRequiredParameter","indexOf","ThreadInVMfromNative::ThreadInVMfromNative","StackOverflow::reguard_stack_if_needed","java.net.http.HttpHeaders$$Lambda$419.0x0000000800dc5170","lambda$headersOf$0","Fingerprinter::compute_fingerprint_and_return_type","getBlocker","java.util.stream.LongPipeline","findFirst","evaluate","java.util.stream.FindOps$FindOp","evaluateSequential","copyInto","copyIntoWithCancel","java.util.stream.ReferencePipeline","forEachWithCancel","sun.nio.ch.Util$2","clear","computeIfAbsent","resize","readResumeStatusLine","jshort_disjoint_arraycopy","getConnectionFor","jdk.internal.net.http.Http2Connection","keyFor","keyString","java.lang.invoke.LambdaForm$MH.0x0000000800c92000","java.lang.invoke.LambdaForm$MH.0x0000000800da0c00","invokeStatic","java.lang.StringConcatHelper","fixAfterInsertion","parentOf","getBytes","encodeUTF8","OptoRuntime::is_deoptimized_caller_frame","OopMapSet::update_register_map","hasOutgoing","java.util.concurrent.ConcurrentLinkedDeque","peekFirst","grow","lambda$run$5","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$398.0x0000000800dbe260","lambda$run$2","jdk.internal.net.http.HttpClientImpl$SelectorAttachment","resetInterestOps","jdk.internal.net.http.Exchange$$Lambda$459.0x0000000800dc9378","lambda$sendRequestBody$7","getResponseAsync","readHeadersAsync","Arena::grow","ThreadCritical::~ThreadCritical","ObjectMonitor::UnlinkAfterAcquire","isReleasable","lockingScheduler","Parker::unpark","JavaCalls::call","ScopeDesc::ScopeDesc","java.nio.channels.spi.AbstractSelectableChannel","findKey","isSelectorThread","parseServer","scan","java.util.concurrent.CompletableFuture$UniRelay","completeRelay","not_walkable_Java","ThreadSafepointState::handle_polling_page_exception","JvmtiEnv::Deallocate","Arena::Amalloc_4","appendToOutgoing","_platform_strlen","map","jdk.internal.net.http.HttpConnection$$Lambda$531.0x0000000800dda5e8","lambda$closeOrReturnToCache$2","increase","getAndAccumulate","weakCompareAndSetVolatile","Method::jmethod_id","InstanceKlass::get_jmethod_id","java.util.ImmutableCollections$List12","size","parseHostname","match","os::javaTimeSystemUTC","canEncode","remove","isReferenced","facade","ThreadLocalStorage::is_initialized","java.lang.Class","getConstructor","getConstructor0","privateGetDeclaredConstructors","reflectionData","java.lang.ref.SoftReference","JavaCallArguments::parameters","java.lang.invoke.VarHandle","checkExactAccessMode","purgeMaybeRequired","java.util.Collection","stream","spliterator","java.util.AbstractList$RandomAccessSpliterator","ThreadsListHandle::cv_internal_thread_to_JavaThread","HandleMark::~HandleMark","jvmti_Deallocate","nanov2_free_definite_size","to_abstime","__commpage_gettimeofday_internal","JavaThread::pd_last_frame","CodeHeap::find_blob_unsafe","Buffer::putVar64","plusSeconds","jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription","jdk.internal.net.http.common.Utils$$Lambda$120.0x0000000800c9ba38","lambda$getIntegerNetProperty$13","sun.net.NetProperties","getInteger","java.util.Properties","getProperty","java.util.concurrent.ConcurrentHashMap","CallTraceStorage::put","convertReturnVal","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$435.0x0000000800dc7c40","requestFilters","jdk.internal.net.http.Http1Response$$Lambda$465.0x0000000800dc9ee0","lambda$readHeadersAsync$0","java.util.stream.ForEachOps$ForEachOp$OfRef","java.util.stream.ForEachOps$ForEachOp","java.util.HashMap$KeySpliterator","forEachRemaining","java.util.stream.ReferencePipeline$2$1","Method::bci_from","JvmtiEnv::GetTag","JvmtiTagMap::get_tag","pthread_mutex_unlock","hasDemand","rocksdb::WriteThread::JoinBatchGroup","rocksdb::WriteBatchInternal::InsertInto","rocksdb::WriteBatchInternal::Iterate","rocksdb::WriteBatchInternal::UpdateProtectionInfo","rocksdb::ColumnFamilyMemTablesImpl::GetMemTable","LockTracer::MonitorContendedEnter","sun.net.spi.DefaultProxySelector$3","coder","one.nio.http.Response","toBytes","CodeCache::find_blob","ObjectMonitor::TryLock","PhaseOutput::Output","PhaseOutput::BuildOopMaps","OopFlow::compute_reach","OopFlow::build_oop_map","doSignal","jdk.internal.net.http.Exchange$$Lambda$468.0x0000000800dca5b8","lambda$wrapForUpgrade$11","checkForUpgradeAsync","completedFuture","oopDesc::metadata_field","keySet","setHeader","PcDescCache::find_pc_desc","ok.dht.test.ilin.hashing.HashEvaluator","ok.dht.test.ilin.hashing.impl.FNV32HashEvaluator","translateAndSetReadyOps","java.util.ImmutableCollections$ListItr","hasNext","ChunkPool::allocate","_pthread_mutex_firstfit_unlock_slow","__psynch_mutexdrop","pthread_cond_signal","java.util.concurrent.LinkedBlockingQueue$Node","jdk.internal.net.http.SocketTube$SliceBufferSource","getBuffer","java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1","java.nio.Buffer","checkScope","signalNotEmpty","jdk.internal.net.http.Http1Request$$Lambda$427.0x0000000800dc63b0","test","lambda$collectHeaders0$1","jdk.internal.net.http.Exchange$$Lambda$323.0x0000000800db1b20","java.util.stream.StreamSupport","java.util.stream.ReferencePipeline$Head","JfrConditionalFlush<EventJavaMonitorEnter>::JfrConditionalFlush","java.util.stream.ForEachOps","makeRef","java.util.stream.Sink","begin","java.util.HashMap$KeySet","java.util.HashMap$KeyIterator","java.util.HashMap$HashIterator","ThreadBlockInVMPreprocess<InFlightMutexRelease>::~ThreadBlockInVMPreprocess","arrayof_jint_disjoint_arraycopy","free","CollectedHeap::hash_oop","rotateRight","JavaFrameAnchor::make_walkable","pollFirst","unlink","unlinkLast","skipDeletedSuccessors","encodeASCII","isLatin1","os::javaTimeNanos","encodeRelay","tabAt","arrayof_jlong_disjoint_arraycopy","JvmtiTagMap::tag_map_for","one.nio.util.ByteArrayBuilder","deleteEntry","G1AllocRegion::new_alloc_region_and_allocate","G1CollectedHeap::new_mutator_alloc_region","MasterFreeRegionListChecker::check_mt_safety","ThreadStateTransition::trans_from_native","readResumeHeader","_pthread_mutex_droplock","ObjectSynchronizer::inflate","Dictionary::lookup","JNIHandleBlock::release_block","headerFilter","isConnect","itable stub","java.util.AbstractSequentialList","java.util.AbstractList","listIterator","java.util.LinkedList","java.util.LinkedList$ListItr","jdk.internal.net.http.AuthenticationFilter$Cache","end","ThreadsListHandle::~ThreadsListHandle","jdk.internal.net.http.frame.SettingsFrame","toByteArray","jdk.internal.net.http.ImmutableHttpRequest","PreserveExceptionMark::PreserveExceptionMark","ThreadShadow::clear_pending_exception","nmethod::scopes_pcs_end","jbyte_arraycopy","rocksdb::WriteThread::ExitAsBatchGroupLeader","libc++.1.dylib","std::__1::condition_variable::notify_one","std::__1::condition_variable::wait","maybeStartHeaders","PreserveExceptionMark::~PreserveExceptionMark","mapToLong","java.util.stream.ReferencePipeline$5","java.util.stream.LongPipeline$StatelessOp","lockInterruptibly","acquireInterruptibly","acquire","putVal","getState","CodeBlob::is_zombie","jdk.internal.net.http.MultiExchange$$Lambda$527.0x0000000800dd9cc8","lambda$responseAsync0$3","getBodyAsync","java.util.concurrent.atomic.AtomicInteger","registerPendingSessions","interpretedVFrame::method","compiledVFrame::method","concat","simpleConcat","mix","JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState","ThreadBlockInVMPreprocess<ObjectMonitor::ExitOnSuspend>::~ThreadBlockInVMPreprocess","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ull, G1BarrierSet>, ","CodeHeap::find_block_for","peek","jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$388.0x0000000800dbcbd8","lambda$events$0","java.util.TreeMap$EntryIterator","nmethod::is_zombie","JvmtiTagMapTable::find","tryAdvance","java.util.stream.FindOps$FindSink$OfLong","responseAsync0","java.lang.invoke.LambdaForm$MH.0x0000000800c02000","checkOverflow","isValidValue","charAt","dropSubscription","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ull, G1BarrierSet>, ","entrySet","java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet","java.util.Collections$UnmodifiableSet","java.util.Collections$UnmodifiableCollection","nanov2_free_to_block","jdk.internal.net.http.RedirectFilter","ceilingKey","getCeilingEntry","jdk.internal.net.http.Http1Exchange$$Lambda$439.0x0000000800dc2d18","lambda$sendBodyAsync$7","cancelIfFailed","whenCompleteAsync","CompilationPolicy::compile_if_required","java.lang.invoke.VarHandleInts$FieldInstanceReadWrite","jdk.internal.net.http.HttpResponseImpl","at","AllocTracer::send_allocation_in_new_tlab","ensureOpen","reset","java.net.Inet4Address","thenApplyAsync","wrapForUpgrade","java.util.HashMap$HashMapSpliterator","getFence","resource_allocate_bytes","newArray","allocateUninitializedArray","__commpage_gettimeofday","java_lang_Thread::thread","_platform_strncmp","pthread_cond_wait","java.util.ArrayList$Itr","java.util.function.BiPredicate$$Lambda$414.0x0000000800d1fac8","java.util.function.BiPredicate","lambda$and$0","jdk.internal.net.http.common.Utils$$Lambda$138.0x0000000800c9f940","lambda$static$12","java.util.function.Predicate$$Lambda$128.0x0000000800cdf4b8","java.util.function.Predicate","lambda$negate$1","jdk.internal.net.http.common.Utils$$Lambda$127.0x0000000800c9eb70","lambda$static$5","java.util.ArrayDeque","int const static_fast_get_field_wrapper<10, int const>","processDeregisterQueue","setRetryOnError","java.util.Spliterator","getExactSizeIfKnown","estimateSize","JvmtiThreadEventTransition::JvmtiThreadEventTransition","compareTo","G1CollectedHeap::post_evacuate_collection_set","G1CollectedHeap::process_discovered_references","ReferenceProcessor::process_discovered_references","ReferenceProcessor::process_soft_weak_final_refs","ReferenceProcessor::run_task","G1STWRefProcProxyTask::work","RefProcPhase2Task::rp_work","RefProcSubPhasesWorkerTimeTracker::~RefProcSubPhasesWorkerTimeTracker","os::elapsedTime","GangWorker::initialize","GangWorker::loop","semaphore_wait_trap","rocksdb::log::Writer::EmitPhysicalRecord","rocksdb::crc32c::Crc32cCombine","std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample> > >::vector<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, void*>*, long> > >","frame::is_interpreted_frame","getAddress","jdk.internal.net.http.HttpRequestImpl$$Lambda$259.0x0000000800da6438","lambda$getAddress$5","java.net.InetAddress","getByName","getAllByName","sun.net.util.IPAddressUtil","_utmpxname.cold.2","nanov2_size","getValue","JvmtiEnvBase::is_valid","java.lang.CharacterData","java.net.http.HttpResponse$BodyHandlers$$Lambda$208.0x0000000800d8d2d0","java.net.http.HttpResponse$BodyHandlers","lambda$ofByteArray$12","java.net.http.HttpResponse$BodySubscribers","ofByteArray","JavaThread::is_lock_owned","JavaThreadStatusChanger::set_thread_status","ThreadInVMfromJava::~ThreadInVMfromJava","JvmtiEnv::GetCurrentThread","javaVFrame::is_java_frame","ThreadCritical::ThreadCritical","nanov2_pointer_size","ScopeValue::read_from","jshort_arraycopy","CollectedHeap::print_heap_after_gc","GCHeapLog::log_heap","outputStream::print_cr","outputStream::do_vsnprintf_and_write","outputStream::do_vsnprintf","os::vsnprintf","_vsnprintf","__v2printf","__vfprintf","os_unfair_lock_unlock","processReadyEvents","java.util.LinkedHashMap","newNode","linkNodeLast","JavaThread::check_special_condition_for_native_trans","SafepointMechanism::process","SafepointSynchronize::block","GenericWaitBarrier::wait","JavaThreadParkedState::JavaThreadParkedState","java_lang_Thread::get_thread_status","zero_blocks","jdk.internal.net.http.MultiExchange$$Lambda$232.0x0000000800d91b50","slowVerifyAccess","jdk.internal.reflect.Reflection","verifyMemberAccess","iteratorFor","containsKey","Thread::is_Named_thread","JfrConditionalFlushWithStacktrace<EventJavaMonitorEnter>::JfrConditionalFlushWithStacktrace","jfr_is_event_enabled","wrapSink","first","tryAcquire","rocksdb::WriteBatch::~WriteBatch","JNIHandles::resolve_external_guard","jdk.internal.net.http.Http1Response$$Lambda$338.0x0000000800db5130","advance","unsubscribe","std::__1::chrono::steady_clock::now","clock_gettime_nsec_np","_mach_continuous_hwclock","java.util.AbstractMap","jdk.internal.net.http.Exchange$$Lambda$326.0x0000000800db2400","lambda$establishExchange$3","compareAndSetState","os::stack_shadow_pages_available","java.lang.ref.Cleaner","jdk.internal.ref.CleanerImpl$PhantomCleanableRef","jdk.internal.ref.PhantomCleanable","ScopeDesc::decode_object_values","DebugInfoReadStream::read_object_value","GrowableArrayWithAllocator<ScopeValue*, GrowableArray<ScopeValue*> >::grow","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$391.0x0000000800dbd298","java.lang.ref.PhantomReference","jdk.internal.reflect.GeneratedConstructorAccessor8","ObjectMonitor::exit","ThreadLocalAllocBuffer::thread","setBuffer","remaining","JNI_OnLoad","java.util.function.Function$$Lambda$181.0x0000000800d2ce60","jdk.internal.net.http.Http1Exchange$$Lambda$383.0x0000000800dbc080","ofNullable","resumeOrLF","os::PlatformEvent::unpark","valueOf","stringSize","node","unsafe_arraycopy","checkKey","sun.nio.ch.SelectionKeyImpl","translateInterestOps","snode","getHost","linkLast","getChar","JavaThreadStatusChanger::save_old_state","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, ","JavaThread::can_call_java","G1Allocator::attempt_allocation","CodeCache::find_blob_unsafe","CodeCache::get_code_heap_containing","java.util.Base64$Encoder","encodeToString","addHeader","jdk.internal.net.http.Http1HeaderParser$$Lambda$472.0x0000000800dcb0e0","lambda$addHeaderFromString$0","elementAt","jdk.internal.net.http.PlainHttpConnection","connected","wrap","jni_GetByteArrayRegion","canReacquire","getAndSet","guard_LL_L","pthread_self","vframe::vframe","ObjectMonitor::object","isRunning","JNIHandleBlock::allocate_block","RegisterMap::RegisterMap","nmethod::scopes_pcs_begin","purgeUntil","G1SurvivorRegions::length","ObjectSynchronizer::quick_enter","G1EvacuateRegionsBaseTask::work","G1EvacuateRegionsBaseTask::evacuate_live_objects","G1ParEvacuateFollowersClosure::do_void","G1ParEvacuateFollowersClosure::offer_termination","TaskTerminator::offer_termination","__psynch_cvbroad","G1RemSetTrackingPolicy::update_at_allocate","timeout","frame::sender_raw","checkRequestCancelled","requestCancelled","encodeBlock","ThreadLocalAllocBuffer::retire_before_allocation","MemAllocator::finish","_pthread_cond_updateval","java.util.Collections","unmodifiableMap","Java_sun_nio_ch_FileDispatcherImpl_write0","nextGetIndex","InstanceKlass::should_be_initialized","java.util.stream.FindOps$FindSink","cancellationRequested","java.util.stream.FindOps$FindSink$OfRef$$Lambda$14.0x80000001d","java.util.stream.FindOps$FindSink$OfRef","enqueue","linkBefore","java.util.LinkedList$Node","G1CollectedHeap::gc_epilogue","CollectedHeap::resize_all_tlabs","ThreadLocalAllocBuffer::resize","ThreadLocalAllocBuffer::min_size","events","ConcurrentGCThread::run","G1ServiceThread::run_service","G1ServiceThread::sleep_before_next_cycle","CompilationPolicy::must_be_compiled","descendingIterator","jdk.internal.logger.AbstractLoggerWrapper","isLoggable","sun.util.logging.internal.LoggingProviderImpl$JULWrapper","jdk.internal.net.http.ResponseContent","getBodyParser","java.lang.invoke.LambdaForm$MH.0x0000000800c90000","G1CardTable::g1_mark_as_young","checkChars","JvmtiEventMark::JvmtiEventMark","putByte","SafeThreadsListPtr::release_stable_list","forward_copy_longs","java.util.LinkedList$DescendingIterator","__psynch_cvclrprepost","translateReadyOps","isConnected","java.util.concurrent.ConcurrentLinkedQueue","_platform_strcpy","java.lang.Number","java_lang_Thread::set_thread_status","JvmtiAgentThread::call_start_function","Profiler::timerLoop","Recording::cpuMonitorCycle","OS::getTotalCpuTime","_kernelrpc_mach_vm_deallocate_trap",];

    let currentHeatmap = executionsHeatmap;
    let currentHeatmapType = 'executions';

    let heatHeight = 60;

    let heatLastSample = -1;
    let heatActiveSample1 = -1;
    let heatActiveSample2 = -1;
    let heatDiffStart = -1;
    let heatDiffEnd = -1;
    let highlightStart = -1;
    let highlightEnd = -1;

    const titleText = document.getElementById("title").textContent;
    document.getElementById("title").style.display = 'none';
    document.title = titleText;

    const heatCanvas = document.getElementById('heatmap-canvas');
    const heatStatus = document.getElementById('status');
    const heatCanvasWrapper = document.getElementById('heatmap-canvas-wrapper');
    const heatCanvasContainer = document.getElementById('heatmap-canvas-container');

    let heatC;
    let prevDx = -1000000000;

    let searchExecutedCount = 0;
    let searchMax = 0;

    const timeOptions = {
        year: '2-digit',
        month: '2-digit',
        day: '2-digit',
        timeZoneName: 'short',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        fractionalSecondDigits: 2
    };

    const timeOptionsShort = {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        fractionalSecondDigits: 2
    };

    const timeOptionsTiny = {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hourCycle: 'h23',
        //hour12: false
    };

    function methodInfo(methodIndex, out) {
        if (methodIndex === -1) {
            out.className = '';
            out.methodName = 'all';
            out.location = 0;
            out.type = 3;
            return;
        }

        methodIndex--;

        let methodAndClass = methods.int36(methodIndex * 12);
        let locationAndType = methods.int36(methodIndex * 12 + 6)
        let className = (methodAndClass & 0x3FFFF) - 1;
        let methodName = (methodAndClass >>> 18) - 1;

        out.className = cpool[className];
        out.methodName = cpool[methodName];
        out.location = locationAndType >>> 4;
        out.type = locationAndType & 15;
    }

    function title(methodIndex, out) {
        methodInfo(methodIndex, out);
        const codeLine = (out.location & 0xffff);
        let locationSuffix = codeLine === 0 ? "" : (":" + codeLine);

        if (out.methodName === '') {
            return out.className + locationSuffix;
        }
        if (out.className === '') {
            return out.methodName + locationSuffix;
        }
        if (out.type >= 3 && out.type <= 5) {
            return out.methodName + locationSuffix;
        }

        return out.className + "." + out.methodName + locationSuffix;
    }

    let bgInterval = null;
    let bgTasks = [];
    let cooldownTime = 0;
    let nextTask = 0;

    function addTask(id, iteration, afterFrame) {
        for (let t of bgTasks) {
            if (t.id === id) {
                t.f = iteration;
                t.a = afterFrame;
                return;
            }
        }

        bgTasks.push({id: id, f: iteration, a: afterFrame});
        if (bgTasks.length === 1) {
            bgInterval = setInterval(function() {
                let start = performance.now();
                if (start <= cooldownTime) {
                    return;
                }
                let overflow = false;
                do {
                    let task = bgTasks[nextTask];
                    if (task.f()) {
                        nextTask++;
                    } else {
                        bgTasks.splice(nextTask, 1);
                        if (bgTasks.length === 0) {
                            clearInterval(bgInterval);
                            nextTask = 0;
                            return;
                        }
                    }

                    if (nextTask >= bgTasks.length) {
                        nextTask = 0;
                        overflow = true;
                    }
                } while(performance.now() - start < 8);

                for (let q = 0; q < overflow ? bgTasks.length : nextTask; q++) {
                    bgTasks[q].a();
                }
            })
        }
    }

    function prepareFrames(from, to) {
        let mul = zoomToGroupSize[currentHeatmap.zoom];
        from *= mul;
        to = (to + 1) * mul - 1;
        if (to >= currentHeatmap.blocks.length) {
            to = currentHeatmap.blocks.length - 1;
        }

        const frames = new Queue();
        const root = new Map();
        root.c = 0;
        root.m = -1;
        root.x = 0;
        const roots = [root];
        let levelsCount = 1;

        for (let pos = from; pos <= to; pos++) {
            const block = currentHeatmap.blocks[pos];

            root.c += block.length;

            for (let stack of block) {
                levelsCount = Math.max(stack.length + 1, levelsCount);

                frames.push(root);
                frames.push(stack);
            }
        }

        return [frames, roots, levelsCount]
    }

    function nextFrames(frames, level) {
        frames.push(null);  // end stacks marker

        let nowFrame = null;

        while (true) {
            const frame = frames.shift();
            if (frame === null) {   // end stack marker
                break;
            }

            const stack = frames.shift();
            if (level >= stack.length) {
                continue;
            }

            const methodId = stack[level];
            nowFrame = frame.get(methodId);
            if (nowFrame === undefined) {
                nowFrame = new Map();
                nowFrame.m = methodId;
                nowFrame.c = 0;
                frame.set(methodId, nowFrame);
            }
            nowFrame.c++;

            frames.push(nowFrame);
            frames.push(stack);
        }
    }

    function renderTraces(from, to) {
        let [frames, roots, levelsCount] = prepareFrames(from, to);
        levels.length = 0;
        for (let i = 0; i < levelsCount; i++) {
            levels.push([]);
        }

        let currentLevel = 0;
        let levelToRedraw = 0;
        let methodInfoOut = {};

        addTask('flame', function () {
                nextFrames(frames, currentLevel);

                let level = levels[currentLevel];
                let nextRoots = [];
                for (let root of roots) {
                    let x = root.x;
                    const t = title(root.m, methodInfoOut);
                    let color = getColor(palette[methodInfoOut.type]);
                    level.push({left: x, width: root.c, color: color, title: t});

                    let nextFrames = [...root.values()];

                    nextFrames.sort((k1, k2) => k2.c - k1.c);
                    for (let frame of nextFrames) {
                        frame.x = x;
                        x += frame.c;
                        nextRoots.push(frame);
                    }
                }
                level.sort((k1, k2) => k1.left - k2.left);

                roots = nextRoots;
                currentLevel++;
                if (currentLevel < levelsCount) {
                    return true;
                }
                renderWithMatch(levelsCount * 16, levels[0][0], 0);
                return false;
            },
            function () {
                renderWithMatch(4096, levels[0][0], 0, levelToRedraw);
                levelToRedraw = currentLevel;
            });
    }

    function renderWithMatch(newCanvasHeight, root, level, minLevel) {
        newCanvasHeight = Math.min(32767, newCanvasHeight);
        if (canvasHeight !== newCanvasHeight) {
            canvasHeight = newCanvasHeight;
            canvas.style.height = canvasHeight + 'px';
            canvas.height = canvasHeight * (devicePixelRatio || 1);
            c = canvas.getContext('2d');
            if (devicePixelRatio) c.scale(devicePixelRatio, devicePixelRatio);
            c.font = document.body.style.font;
        }
        const matched = render(root, level, minLevel);
        if (pattern === undefined) {
            document.getElementById('match').style.display = 'none';
            document.getElementById('produced').style.display = 'inherit';
        } else {
            document.getElementById('matchval').textContent = pct(matched, root.width) + '%';
            document.getElementById('match').style.display = 'inline-block';
            document.getElementById('produced').style.display = 'none';
        }
    }

    function renderDiff(from, to, baseFrom, baseTo) {
        let [frames, roots, levelsCount] = prepareFrames(from, to);
        let [baseFrames, baseRoots, ] = prepareFrames(baseFrom, baseTo);
        roots[0].b = baseRoots[0];

        levels.length = 0;
        for (let i = 0; i < levelsCount; i++) {
            levels.push([]);
        }
        let currentLevel = 0;
        let levelToRedraw = 0;
        let methodInfoOut = {};

        let minDiff = 0;
        let maxDiff = 0;

        addTask('flame', function () {
                nextFrames(frames, currentLevel);
                nextFrames(baseFrames, currentLevel);
                let level = levels[currentLevel];

                for (let root of roots) {
                    let wasCount = root.b === undefined ? 0 : root.b.c;
                    if (wasCount !== 0) {
                        maxDiff = Math.max(maxDiff, root.c - wasCount);
                        minDiff = Math.min(minDiff, root.c - wasCount)
                    }
                }

                let nextRoots = [];
                for (let root of roots) {
                    let x = root.x;

                    let wasCount = root.b === undefined ? 0 : root.b.c;
                    const t = title(root.m, methodInfoOut) + " (" + root.c + "/" + wasCount +")";
                    let color;
                    if (wasCount === 0) {
                        color = "#dac571";
                    } else if (wasCount >= root.c) {
                        const ratio = (root.c - wasCount) / minDiff;
                        color = 'rgb(' + (245 - 90 * ratio) + ',' + (250 - 90 * ratio) + ',' + 255 +')';
                    } else {
                        const ratio = (root.c - wasCount) / maxDiff;
                        color = 'rgb(' + 255 + ',' + (245 - 180 * ratio) + ',' + (240 - 200 * ratio) +')';
                    }
                    level.push({left: x, width: root.c, color: color, title: t});

                    let nextFrames = [];
                    for (let [methodId, frame] of root) {
                        frame.b = root.b && root.b.get(methodId);
                        nextFrames.push(frame);
                    }
                    nextFrames.sort((k1, k2) => k2.c - k1.c);
                    for (let frame of nextFrames) {
                        frame.x = x;
                        x += frame.c;
                        nextRoots.push(frame);
                    }
                }
                level.sort((k1, k2) => k1.left - k2.left);

                roots = nextRoots;
                currentLevel++;
                if (currentLevel < levelsCount) {
                    return true;
                }
                renderWithMatch(levelsCount * 16, levels[0][0], 0);
                return false;
            },
            function () {
                renderWithMatch(4096, levels[0][0], 0, levelToRedraw);
                levelToRedraw = currentLevel;
            });
    }

    function redrawHeatSamplesImpl(from, to, dx) {
        const patternDraw = !!pattern;
        const startBlock = currentHeatmap.startBlock();

        const max = currentHeatmap.max();
        const heatmap = currentHeatmap.heatmap();

        for (let index = from; index <= to; index++) {
            let color;
            let i = index - startBlock;
            if (i < 0 || i >= heatmap.length) {
                color = '#ddd';
            } else {
                let count = heatmap[i];

                let useFound = patternDraw && searchExecutedCount > i;
                let maxValue = useFound ? searchMax : max;
                let value = useFound ? found[i] : count;
                let ratio = value / (maxValue || 1);

                if (useFound) {
                    if (ratio < 0.8) {
                        let value = Math.round(255 - ratio * 255 / 0.8);
                        color = 'rgb(' + value + ',' + value + ',255)';
                    } else {
                        let value = Math.round(255 - (ratio - 0.8) * 100 / 0.2);
                        color = 'rgb(0,0,' + value + ')';
                    }
                } else {
                    if (ratio < 0.8) {
                        let value = Math.round(255 - ratio * 255 / 0.8);
                        color = 'rgb(255,' + value + ',' + value + ')';
                    } else {
                        let value = Math.round(255 - (ratio - 0.8) * 100 / 0.2);
                        color = 'rgb('+ value + ',0,0)';
                    }
                }

            }
            heatC.fillStyle = color;

            let x = Math.floor(index / heatHeight);
            let y = index % heatHeight;
            heatC.fillRect(x * sq - dx, y * sq + canvasTimeHeight, sq, sq);
        }

        let blocksBetweenMarks = 20;

        let fromBlock = Math.floor(from / blocksBetweenMarks / heatHeight) - 1;
        let toBlock = Math.ceil(to / blocksBetweenMarks / heatHeight);

        let markPixels = blocksBetweenMarks * sq;

        heatC.fillStyle = '#fff';
        heatC.fillRect(
            fromBlock * markPixels - dx,
            0,
            (toBlock - fromBlock + 1) * markPixels,
            canvasTimeHeight
        );

        heatC.beginPath();
        heatC.moveTo(fromBlock * markPixels - dx + 0.5, canvasTimeHeight + 0.5);
        heatC.lineTo(toBlock * markPixels - dx + 0.5, canvasTimeHeight + 0.5);
        heatC.stroke();

        heatC.fillStyle = '#000';

        let groupSize = heatHeight;
        let oneBlockMs = currentHeatmap.currentTimeBlock();
        let oneGroupMs = oneBlockMs * groupSize;
        let oneMarkMs = oneGroupMs * blocksBetweenMarks;
        for (let markIndex = fromBlock; markIndex <= toBlock; markIndex++) {
            let origin = Math.floor(startMs / oneMarkMs) * oneMarkMs;
            let ms = origin + markIndex * oneMarkMs;
            let markOffset = markIndex * markPixels - dx;

            let title = new Date(ms).toLocaleTimeString(undefined, timeOptionsTiny);

            let w = heatC.measureText(title).width;
            let x = markOffset + (markPixels - w) / 2;
            heatC.fillText(title, x, canvasTimeHeight - 1, markPixels);

            heatC.beginPath();
            heatC.moveTo(markOffset + 0.5, canvasTimeHeight - 2 * sqScale + 0.5);
            heatC.lineTo(markOffset + 0.5, canvasTimeHeight + 2 * sqScale + 0.5);
            heatC.stroke();
        }
    }

    function redrawHeatSamples(from, to) {
        let dx = Math.floor((heatCanvasContainer.scrollLeft - canvasScrollPadding) * sqScale);

        from = Math.max(from, heatHeight * Math.floor(dx / sq));
        to = Math.min(to, heatHeight * Math.ceil((dx + heatCanvas.width) / sq));
        redrawHeatSamplesImpl(from, to, dx);
    }

    function redrawHeatMap() {
        redrawHeatSamples(0, (1 + currentHeatmap.count() / heatHeight | 0) * heatHeight);
    }

    function fillCanvasWithEvents(zoom) {
        searchExecutedCount = 0;
        searchMax = 0;

        addTask('search', function () {
            return false;
        }, function (){});

        currentHeatmap.setZoom(zoom);
        heatHeight = zoomToHeight[zoom];

        const m = devicePixelRatio || 1;
        sqScale = m;
        sqPx = 5;
        sq = Math.floor(sqPx * m);
        sqPx = sq / m;
        canvasTimeHeight = sq * 2 + 2;
        canvasTimeHeightPx = canvasTimeHeight / m;

        const widthPx = canvasScrollPadding + heatCanvasContainer.offsetWidth + canvasScrollPadding;
        const heightPx = sqPx * heatHeight + canvasTimeHeightPx;

        const heatWidthPx = Math.max(20, Math.ceil(currentHeatmap.count() / heatHeight)) * sqPx;
        heatCanvasWrapper.style.width = heatWidthPx + 'px';
        if (heatCanvasContainer.offsetWidth > heatWidthPx) {
            heatCanvasContainer.style.overflowX = 'hidden';
        } else {
            heatCanvasContainer.style.overflowX = 'scroll';
        }

        heatCanvas.width = Math.ceil(widthPx * m);
        heatCanvas.height = Math.ceil(heightPx * m);
        heatCanvas.style.width = widthPx + 'px';
        heatCanvas.style.height = heightPx + 'px';

        heatC = heatCanvas.getContext('2d');
        heatC.font = sq * 2 + 'px Verdana, sans-serif';
        heatC.lineWidth = 1;
        heatC.strokeStyle = '#000';

        document.getElementById('heatmap-height-line').textContent = [' 1 sec : 20 ms ',' 1 min : 1 sec ',' 5 min : 5 sec ',' 1 hr  : 1 min '][currentHeatmap.zoom];
        redrawHeatMap();
    }

    let found = new Uint32Array(0);

    function searchIterative(r) {
        if (r && (r = prompt('Enter regexp to search:', '')) === null) {
            return;
        }
        searchExecutedCount = 0;
        searchMax = 0;
        if (!r) {
            pattern = undefined;
            redrawHeatMap();
            addTask('search', function () {
                return false;
            }, function (){});
            return;
        }
        let renderFrom = 0;
        let heatmap = currentHeatmap.heatmap();
        let count = heatmap.length;
        found = new Uint32Array(count);
        let start = currentHeatmap.startBlock();
        function renderFunc() {
            redrawHeatSamples(start + renderFrom, start + searchExecutedCount - 1);
            renderFrom = searchExecutedCount;
        }
        pattern = r ? RegExp(r) : undefined;
        const matchedMethods = new Set();
        const methodOut = {};
        for (let index = methods.data.length / 12; index >= 0; index--) {
            if (pattern.test(title(index, methodOut))) {
                matchedMethods.add(index);
            }
        }

        let mul = zoomToGroupSize[currentHeatmap.zoom];

        addTask('search', function () {
            let amount = 0;
            const from = searchExecutedCount * mul;
            const to = (searchExecutedCount + 1) * mul;
            for (let i = from; i < to; i++) {
                const stacks = currentHeatmap.blocks[i];
                if (stacks === undefined) {
                    continue;
                }

                for (let stack of stacks) {
                    for (let methodIndex of stack) {
                        if (matchedMethods.has(methodIndex)) {
                            amount++;
                            break;
                        }
                    }
                }
            }

            if (searchMax < amount) {
                renderFrom = 0;
                searchMax = amount;
            }

            found[searchExecutedCount] = amount;
            searchExecutedCount++;
            if (searchExecutedCount >= count) {
                renderFunc();

                const matched = render(root, rootLevel);
                document.getElementById('matchval').textContent = pct(matched, root.width) + '%';
                document.getElementById('match').style.display = r ? 'inherit' : 'none';
                document.getElementById('produced').style.display = r ? 'none' : 'inherit';

                return false;
            }
            return true;
        }, renderFunc);

    }

    function renderHeatmap() {
        let dx = heatCanvasContainer.scrollLeft - canvasScrollPadding;
        heatCanvas.style.transform = 'translate(' + dx + 'px, 0px)';

        const width = Math.floor(heatCanvasContainer.offsetWidth / sq / (devicePixelRatio || 1));

        let z = 0;
        for (; z < zoomToGroupSize.length; z++) {
            if (currentHeatmap.blocks.length / (zoomToGroupSize[z] * zoomToHeight[z]) < width) {
                break;
            }
        }

        fillCanvasWithEvents(Math.min(z, currentHeatmap.maxZoom - 1));

        renderTraces(0, currentHeatmap.heatmap().length - 1);
    }

    heatCanvasContainer.addEventListener('scroll', function() {
        let dx = Math.floor((heatCanvasContainer.scrollLeft - canvasScrollPadding) * sqScale);
        let dxPx = dx / sqScale;
        heatCanvas.style.transform = 'translate(' + dxPx + 'px, 0px)';
        let delta = Math.abs(dx - prevDx);
        if (delta >= heatCanvas.width || searchExecutedCount !== 0) {
            redrawHeatMap();
        } else {
            heatC.drawImage(heatCanvas, prevDx - dx, 0);
            if (prevDx < dx) {
                let from = heatHeight * Math.floor((prevDx + heatCanvas.width) / sq);
                let to = heatHeight * Math.ceil((dx + heatCanvas.width) / sq);
                redrawHeatSamplesImpl(from, to, dx);
            } else {
                let from = heatHeight * Math.floor(dx / sq);
                let to = heatHeight * Math.ceil(prevDx / sq);
                redrawHeatSamplesImpl(from, to, dx);
            }
        }
        prevDx = dx;
        cooldownTime = performance.now() + 500;
    });

    document.getElementById('heatmap-height-line').onclick = function() {
        fillCanvasWithEvents((currentHeatmap.maxZoom + currentHeatmap.zoom - 1) % (currentHeatmap.maxZoom));
        highlightStart = highlightEnd = heatDiffStart = heatDiffEnd = heatActiveSample1 = heatActiveSample2 = -1;
        for (let suffix of ['Selection', 'Diff', 'Active']) {
            for (let prefix of ['left', 'leftMiddle', 'middle', 'rightMiddle', 'right']) {
                document.getElementById(prefix + suffix).style.display = 'none';
            }
        }
    }

    function callHighlightRedraw(start, end, suffix) {
        let left = document.getElementById('left' + suffix);
        let leftMiddle = document.getElementById('leftMiddle' + suffix);
        let middle = document.getElementById('middle' + suffix);
        let rightMiddle = document.getElementById('rightMiddle' + suffix);
        let right = document.getElementById('right' + suffix);

        let x1 = Math.floor(start / heatHeight);
        let y1 = start % heatHeight;
        let x2 = Math.floor(end / heatHeight);
        let y2 = end % heatHeight;

        let veryStartX = x1 * sqPx;
        let veryStartY = y1 * sqPx;
        let veryEndX = x2 * sqPx;
        let px = 1 / sqScale;
        let singleElementWidth = sqPx + px;

        let topPadding = canvasTimeHeightPx;

        if (x1 === x2) {
            left.style.display = 'none';
            right.style.display = 'none';

            for (let b of [middle, leftMiddle, rightMiddle]) {
                b.style.left = veryStartX + 'px';
                b.style.top = topPadding + veryStartY + 'px';
                b.style.width = singleElementWidth + 'px';
                b.style.height = (y2 - y1 + 1) * sqPx + px + 'px';
                b.style.display = 'block';
            }
        } else {
            left.style.left = veryStartX + 'px';
            left.style.top = topPadding + veryStartY + 'px';
            left.style.width = singleElementWidth + 'px';
            left.style.height = (heatHeight - y1) * sqPx + px + 'px';
            left.style.display = 'block';

            leftMiddle.style.left = veryStartX + 'px';
            leftMiddle.style.top = topPadding + 'px';
            leftMiddle.style.width = singleElementWidth + 'px';
            leftMiddle.style.height = y1 * sqPx + px + 'px';
            leftMiddle.style.display = 'block';

            rightMiddle.style.left = veryEndX + 'px';
            rightMiddle.style.top = topPadding + (y2 + 1) * sqPx + 'px';
            rightMiddle.style.width = sqPx + px + 'px';
            rightMiddle.style.height = (heatHeight - y2 - 1) * sqPx + px + 'px';
            rightMiddle.style.display = 'block';

            right.style.left = veryEndX + 'px';
            right.style.top = topPadding + 'px';
            right.style.width = sqPx + px + 'px';
            right.style.height = (y2 + 1) * sqPx + px + 'px';
            right.style.display = 'block';

            if (x2 - x1 === 1) {
                middle.style.display = 'none';
            } else {
                middle.style.left = veryStartX + sqPx + px + 'px';
                middle.style.top = topPadding + 'px';
                middle.style.width = (x2 - x1 - 1) * sqPx - px + 'px';
                middle.style.height = heatHeight * sqPx + px + 'px';
                middle.style.display = 'block';
            }
        }
    }

    function callSelectionRedraw(sample, shiftPressed, ctrlPressed) {
        if (ctrlPressed) {
            highlightStart = sample;
            highlightEnd = sample + Math.abs(heatActiveSample1 - heatActiveSample2);
        } else if (shiftPressed && heatActiveSample1 !== -1) {
            highlightStart = Math.min(heatActiveSample1, sample);
            highlightEnd = Math.max(heatActiveSample1, sample);
        } else {
            highlightStart = highlightEnd = sample;
        }

        callHighlightRedraw(highlightStart, highlightEnd, 'Selection');

        const index = sample - currentHeatmap.startBlock();
        const heatmap = currentHeatmap.heatmap();
        if (index >= 0 && index < heatmap.length) {
            const ms = startMs + currentHeatmap.currentTimeBlock() * index;
            const total =  heatmap[index];
            const max = currentHeatmap.max();
            heatCanvas.title = new Date(ms).toLocaleTimeString(undefined, timeOptionsShort) + " " + index;  // FIXME
            const totalText = "total: " + total + " (" + Math.floor(total / max * 100) + "%)";
            const searchText = searchExecutedCount > index
                ? "; match: " + found[index] + " (" + Math.floor(found[index] / Math.max(total, 1) * 100) + "%)"
                : "";
            status.textContent = totalText + searchText;
            status.style.display = 'inline';
        } else {
            status.style.display = 'none';
        }
    }

    function callActiveRedraw(sample, shiftPressed, ctrlPressed) {
        if (ctrlPressed) {
            let minSelected = Math.min(heatActiveSample1, heatActiveSample2);
            let maxSelected = Math.max(heatActiveSample1, heatActiveSample2);

            heatDiffStart = highlightStart;
            heatDiffEnd = highlightEnd;

            callHighlightRedraw(highlightStart, highlightEnd, 'Diff');
            renderDiff(
                minSelected - currentHeatmap.startBlock(),
                maxSelected - currentHeatmap.startBlock(),
                heatDiffStart - currentHeatmap.startBlock(),
                heatDiffEnd - currentHeatmap.startBlock()
            );
        } else {
            heatDiffStart = -1;
            heatDiffEnd = -1;
            if (shiftPressed && heatActiveSample1 !== -1) {
                heatActiveSample2 = sample;
            } else {
                heatActiveSample1 = heatActiveSample2 = sample;
            }

            let minSelected = Math.min(heatActiveSample1, heatActiveSample2);
            let maxSelected = Math.max(heatActiveSample1, heatActiveSample2);

            callHighlightRedraw(highlightStart, highlightEnd, 'Diff');
            callHighlightRedraw(minSelected, maxSelected, 'Active');
            renderTraces(
                Math.max(0, minSelected - currentHeatmap.startBlock()),
                Math.min(currentHeatmap.heatmap().length - 1, maxSelected - currentHeatmap.startBlock())
            );
        }
    }

    window.addEventListener('keydown', function (e) {
        if (e.key === 'Shift') {
            callSelectionRedraw(heatLastSample, true, e.ctrlKey);
        } else if (e.key === 'Control') {
            callSelectionRedraw(heatLastSample, e.shiftKey, true);
        }
    });

    window.addEventListener('keyup', function (e) {
        if (e.key === 'Shift') {
            callSelectionRedraw(heatLastSample, false, e.ctrlKey);
        } else if (e.key === 'Control') {
            callSelectionRedraw(heatLastSample, e.shiftKey, false);
        }
    });

    heatCanvas.onmousemove = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        if (y >= heatHeight) {
            y = heatHeight - 1;
        }
        heatLastSample = x * heatHeight + y;
        if ((event.buttons & 1) === 1) {
            callSelectionRedraw(heatLastSample, true, event.ctrlKey);
        } else {
            callSelectionRedraw(heatLastSample, event.shiftKey, event.ctrlKey);
        }
    }

    heatCanvas.onmouseout = function () {
        status.style.display = 'none';
    };

    heatCanvas.onmousedown = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        let sample = x * heatHeight + y;

        callActiveRedraw(sample, event.shiftKey, event.ctrlKey);
    };

    heatCanvas.onmouseup = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        let sample = x * heatHeight + y;

        callActiveRedraw(sample, true, event.ctrlKey);
    };



init();
// FIXME search(/*highlight:*/);
</script></body></html>
