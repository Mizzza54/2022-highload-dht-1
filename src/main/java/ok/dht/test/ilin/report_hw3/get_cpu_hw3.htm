<!DOCTYPE html>
<html lang='en'>
<head>
<meta charset='utf-8'>
<style>
	body {margin: 0; padding: 4px 8px 24px; background-color: #ffffff; overflow-y: scroll}
    h1 {margin: 5px 0 0 0; font-size: 18px; font-weight: normal; text-align: center}
	header {margin: -24px 0 5px 0; line-height: 24px}
	button {font: 12px sans-serif; cursor: pointer}
	p {margin: 5px 0 5px 0}
	a {color: #0366d6}
	#hl {position: absolute; display: none; overflow: hidden; white-space: nowrap; pointer-events: none; background-color: #ffffe0; outline: 1px solid #ffc000; height: 15px}
	#hl span {padding: 0 3px 0 3px}
	#status {overflow: hidden; white-space: nowrap}
	#match {overflow: hidden; white-space: nowrap; display: none; float: right; text-align: right}
	#reset {cursor: pointer}
	#canvas {width: 100%; height: 300px}

    .selectionPart {position: absolute; display: none; pointer-events: none; box-sizing: border-box;}
    .sel {background-color: #dada0040}
    .act {background-color: #00da0040}
    .dif {background-color: #00dada40}
    .top {border-top: .1px solid #000}
    .left {border-left: .1px solid #000}
    .bottom {border-bottom: .1px solid #000}
    .right {border-right: .1px solid #000}

    #info-tooltip {display: none; position: absolute; top: 100px; right: 32px; width: 204px; border: 1px solid #666666; background: #ffffe0; border-radius: 8px; padding: 4px}
    #heatmap-height-line, #heatmap-info { text-decoration: #0366d6 dashed underline; cursor: pointer; font-family: monospace}
    #heatmap-info {cursor: help}
    #heatmap-info:hover + #info-tooltip {display: block}

    .colortip {width: 100px; box-sizing: border-box; padding: 4px; background: linear-gradient(var(--c1), var(--c2))}


</style>
</head>
<body style='font: 12px Verdana, sans-serif'>


<div style="display: flex">
    <div style="width: 20px; margin-right: 2px; float: left; writing-mode: vertical-rl; transform: scale(-1); text-align: center; user-select: none"><pre id="heatmap-height-line"> 1 sec : 20 ms </pre></div>

    <div id='heatmap-canvas-container' style="width: 100%; position: relative" autofocus>
        <div id='heatmap-canvas-wrapper' style='overflow: hidden; width: 100%'>
            <canvas id='heatmap-canvas' style='height: 314px'></canvas>
        </div>

        <div id='middleActive' class='selectionPart top bottom act'><span></span></div>
        <div id='leftActive' class='selectionPart top left bottom act'><span></span></div>
        <div id='rightActive' class='selectionPart top right bottom act'><span></span></div>
        <div id='leftMiddleActive' class='selectionPart right'><span></span></div>
        <div id='rightMiddleActive' class='selectionPart left'><span></span></div>

        <div id='middleSelection' class='selectionPart top bottom sel'><span></span></div>
        <div id='leftSelection' class='selectionPart top left bottom sel'><span></span></div>
        <div id='rightSelection' class='selectionPart top right bottom sel'><span></span></div>
        <div id='leftMiddleSelection' class='selectionPart right'><span></span></div>
        <div id='rightMiddleSelection' class='selectionPart left'><span></span></div>

        <div id='middleDiff' class='selectionPart top bottom dif'><span></span></div>
        <div id='leftDiff' class='selectionPart top left bottom dif'><span></span></div>
        <div id='rightDiff' class='selectionPart top right bottom dif'><span></span></div>
        <div id='leftMiddleDiff' class='selectionPart right'><span></span></div>
        <div id='rightMiddleDiff' class='selectionPart left'><span></span></div>
    </div>

    <div id="heatmap-info" style="width: 20px; margin-right: 2px; writing-mode: vertical-rl; text-align: center; user-select: none">
        <pre> Info </pre>
    </div>
    <div id="info-tooltip">
        <div style="float:left">
            <div style="padding: 4px;">Frame types:</div>
            <div class="colortip" style="--c1:#b2e1b2;--c2:#c6f5c6">Interpreted</div>
            <div class="colortip" style="--c1:#50e150;--c2:#6eff6e">JIT-Compiled</div>
            <div class="colortip" style="--c1:#50cccc;--c2:#6eeaea">Inlined</div>
            <div class="colortip" style="--c1:#e15a5a;--c2:#ff8282">Native</div>
            <div class="colortip" style="--c1:#c8c83c;--c2:#e6e646">C++</div>
            <div class="colortip" style="--c1:#e17d00;--c2:#ff9b00">Kernel</div>
            <div class="colortip" style="--c1:#cce880;--c2:#e0fc94">C1-Compiled</div>
        </div>
        <div style="float:left; margin-left: 4px">
            <div style="padding: 4px;">Special colors:</div>
            <div class="colortip" style="--c1:#ee00ee;--c2:#ee00ee">Matches regexp</div>
            <div class="colortip" style="--c1:#baa551;--c2:#baa551">New frames</div>
            <div class="colortip" style="--c1:#f0f0c0;--c2:#f0f0c0">Same frames</div>
            <div class="colortip" style="--c1:#99aaff;--c2:#99aaff">Less frames</div>
            <div class="colortip" style="--c1:#ffaa99;--c2:#ffaa99">More frames</div>
        </div>
        <div style="float:left; margin-top: 4px; width: 100%; border: 1px solid #666666; border-radius: 2px; padding: 2px; box-sizing: border-box;">
            Shift + Click - Select range<br>
            Ctrl + Click - Compare<br>
            Ctrl + F - Search<br>
        </div>
    </div>
</div>
<div id="executionsHeatmap" style="display:none">Bf@noAASn@jAmAsB_ExG`HvHkKlKtL`OjPuR~SkU~WhYtYpZy[b^la@|c@ae@{e@nl@dn@fv@ny@a_Ap`AhaAvbAseAiiAoy@G??????????????????????????????????????????????????????????????????????????@????@\LRjpxpapqphay`qTI`xxSMP`h`q``aa]KSKVMKKMTYiya`ax\NKUUJ]KMQapqSLKKKKTRapaxY`qXTSULI[VHipqpayhUSUSVKUZixapaEVOSXajpVK[NLUMVNTPb\MJaixhxbaphphpa[LVIxxaxiqEUKSSVHppTL]NMTTNQiaphxyMYUNVKSTJjh```hxi]Xrqaaia^ICTMTKUWbiiqhqhy\NKSUNJ`ixNNMSKULUKSLVPpx`iipxahhpqha`papbbaqaaLLJ\I`Q`Ypi`h^J`aqipj^KSNNJqaJhpy^VOp`bC[Yhiaq^TUKOhxULLLL]NIiiiqxiypb[SNRahbx\VSXiiqhqixaxaq`irDTVQxqhyxpbqaKTVJyxi\MNKTOqUMLKVIiahqyhpFPaqxxxp\KMNMRjELLSYb`yqDVIaxp`xiaKSUSWbiDVGjSQxqix[SSOjiSULVMUMTWiaq[VLKLTKL[[UMLSSK^NKLKKIaxa`i[Pyhqxqa`a``ajyEVK]TMVSLTKYhaSSQq`apxqMK[NTJqiaippppNKPpipabahpbrAihri`qyiTLSLUQhbpSUIqTUNMSVNJai`apb`iq[VMKSTVTJhSUJhqx`qahaaib`aq`pi`pix[MURj`bTTMK\MQqraLLTMKTUMTUMZi^VKNTQax`pxppxVVJ^KTKLKULVS^Ij`xxx``xpVLHhrryRaS[MNMVMKMLT\NMGh[SRrp`hiqTUOixihipx`xyh[LKNVLLKVLNMSZyxxhpjph`[\NIyiqDUTYp`EMIqxphxhp[KQ`q\TWbENSSMTSNKVG`ULURiahip[SUSNKVSKVNKQqpxTSUMUNG]MRa\LLKKVSJibBp`bap```hi`aaqhxpa`aXiai^LVLTTLMRh`py`qTWabi[[UNKMNUNLZ`px`bLJijax]LWyxiLJhYqxqVSMNMLLNVLKTIia\L\VUNKUIjqaSKSHMKMVK`[KMSLNNVXqxpTSP`iyTK[TSSMTKULKVSSJahphxppxQayixhbpyijapahxaippyqhxp``yaaqUMQjph^UNNUKTTNHxap`\Jxpb`iaENNML\TRjaCVSSTMNLU]LNSRDSUKVKSYhppaKUNTNKMT[LS\JjxjCSVIxpih[SMKLTTRpx[KTRapyapap\MNMLMI`pahbhp`yh^SSUKK[JpaDNGqhyq[S[RrKUTLMSXxp\LNKKKSSMSNNQqihpULVIpqhhahip`x`VUTWKUKLKMJ\NMNLMNJiaxpy`NMKLUMUQxahpULQbiEYa`UNUMTQjbh`ixihqbaFUGpbx`phxS[TLTSTLK\LMSVJhypp`yaVNNKVMXaahxihiyhhqj`p`bpap[UO??????????????@??????@???@????????????@???????????@???????@??????????????????????????????????????????????Gn~Dn~DfiEdzErmE}wEecFsbFmxFspFtuFoyF~cGnbF{gGntGy|FqtE{gE~|FxuEbeFb_EgxG~}GijHynE`iEuzFjzGgkF~kGfcFp_Hf{H|`E~pEozFp_IbfEaiElcFgvGzlErjFc|Gn_EeiE}rE|vEtyGznHnxH}jEwgFqrF~mHosEmoF_sFpxG}xGs{GmnHlyIueE_oEaaF_eFzaGxfFxkFrpFwsGgxH}xHfcEkdEtzEtaFy{F{|FtgGmdHgbEukEylEmmE~vEfdFkhF_pFatFfxFtzF{bG{oGa|GvaHpyHnaEpfEglEnmEioE_qEjrEsvEpyEf|EobFdcF_fFljFhsFisFhvFczFg|Fp}Fq}FreGg_HteHxrHgmIrdEmhEzhEpjEiwE{wEexEa|Ew|EyaFxbFkgFjlFylFioFpqF~vFswFtyFdzFlzFw|Fi~Fx_GvcGfhGvrGesG|sGwcH{iH{_JhbJh_EqaEacEhhE_iEhiE|kE~mE`sEjsEqvE}vEs}Er`F{aFxcFldFyeFzhFgjFskF_mFunF{oFdpFfpFzuFkwFoxFnzF}zFzcGpgGyhGpqGzrGltGu`H_cHyeHdgHkqHdcIs_Eu`E}`EgcEwcEwdE_eEaeEneEveE~fE`hEejEwnErtEauEhuEpuEevEzvEbwE_yEn{Ep{Em|Ev|En}Ey}Ek~Ex_FjdF|dFceFeeFehF|hFhlF|lFdoFeoFtoFbqFlqFxrFktF{tFquFqvF}wF}xF_zFm|Fv_GgaGqbGucGldGceGveGvfGxgGdhGjhGuhGniGoiG{jGaoG~pGcrGlrGprGxrG_sG`sG~tGduGswG`yGcyG||Gc_H}bHqgHehH}kHhlHvlHwlHzoHmrHyrHvsHfxHoyHj}Hl_I|cIpsIlgJk`Em`E{`EaaEfaEhaEpaEuaE`dEsdEpeE{eErfE|fE`gEcgEfgEggEpgExgEfhEjhEkhElhEnhEvhEljEojE~jEgkE}kErlE`mEanEgpExpEcqEgrEmrEtsEktEntE_uEyuEmvE`wExwEfxEixEnxE{xEf{En|Ez|Ep}Eu}E_~Eu_Fj`FqaFsaFvcFxeFjfFmfFnfFofFrfFufFvfF{fFtgFahFhhFniFyjFzjF}jFikFalFglFplF}lFjmFkmF}mFenFynFgoFroFnrFtrFzrF~rF`sFksFbtFfuFkuFwuFmvFpwFexFeyFyyFg{Fh|Fk}Fn}Fr~Fd_Gj_Gw_GnaG}aGtcG|dGbfGqfG~hGciGojGllGqmG~mGfnGkoGtoGnqGvqGwrG|rGatGjtGvtGxuGawGrxGvxGwxG~xGoyGvzGj}Gr}Gw}Gf_HfbHwdHydHefHmfHxfHcgHshHuhH`iHdiHwiHslHonHsoH|oHapHiqH~tHkuHouH|wHhxHzzHv{Hy|Ha}He`I|`I`aIlaIocIqgIhiIhoIqqIhsI|sI`tIguIzvIzwIreJggJc_Ee_Ea`Eb`Ej`Es`Ez`EgaEjaEkaEraEvaEwaE}aEpbEvbE`cEmcEpcEscEzcE{cEcdEceEdeEeeEgeEteE|eEhfEkfEvfEyfEzfE{fE_gEhgEigEkgEsgEwgE_hEghErhExhE~hEbiEwiEziE_jEajEcjEgjEnjEsjE|jE`kEckEikEqkErkEvkEflEnlEolEqlEulE|lEdmE`nErnEunEznEjoEnoEqoEvoEyoE}oEcpEkpErpEtpE}pEsqEuqEvqE{qEirEnrEorErrEzrEasEesEhsE~sEatEetEftEltEytE{tE|tE`uEnuEouE`vEovErvExvEqwEvwEmxEcyE~yEezEkzEwzEe{Eg{Eo{Ez{E{{E~{E_|Ee|Ex|Ec}E{}E}}E~}Eb~Ej~Ev~Ew~E{~Ee_Fj_Fl_Fq_F~_Fa`Fq`Fs`FiaF|aFmbFtbFybF_cFmcF`dFcdFpdFsdFxdFydFgeFmeFoeFweF{eFdfFifFwfFyfF~fFpgFugF{gF~gFdhFmhFfiFjiFsiFuiFxiFyiFziF|iFbjFdjFojFpjFtjF`kFhkFpkFtkFwkF_lFclFdlFtlFxlFmmFrmFgnFmnFnnFonF_oF`pFbpFgpFhpFmpFupFwpF|pF~pFhqFkqFnqFwqFyqF{qF}qF~qF`rFhrFlrFurF}rFcsFqsFwsF~sFltFmtFntFztF|tFbuFluFnuFyuF~uF`vFbvFevFgvFpvFuvF}vFnwFowFuwFywFjxFpxFsxFpzFqzFvzFyzFzzF{zF`{Fi{Fv{Fa|Fc|Fd|Fe|Fl|Fq|Fz|F||Fd}Fj}Fu}Fw~Fx~Fa_Gb_Gc_Ge_G{_G|_Gl`Gq`Gt`Gy`G_aGsaGtaGyaG{aGabGgbGjbGnbGtbGzbG`cGbcGdcGhcG|cGjdGrdGwdG{dGaeGfeGoeGueG{eG_fGffGgfGpfG`gGggGigGjgG}gGchGehGhhGkhGkiGqiGziGgjG`kGbkGfkGkkGnkGpkGrkG_lGjlGqlGrlGylG|lG}lG_mGcmGgmGlmGdnGlnGpnGqnGjoGroGxoGipGkpGtpGzpG_qGbqGqqGsqGtqGxqGerGsrGtrGurG}rGmsGqsGusGysGdtGetGrtGutG|tGquGavGqvGvvG}vGfwGiwGqwGvwG{wGkxGmxG_zGgzGizGpzGxzGd{Gf{Gv{Gi|Gk|Gs|Gv|G}|G_}Go}Gx}Gd~Gf~Gh~Gz~G`_Hi_Hu_H}_H``Hm`HcaHgaHiaHnaHwaHyaH{aHdbH~bHjcHpcHscHycH{cHadHcdHndHpeHueHufHvfHyfH|fH~fH`gHjgHvgHghHphHbjHnjHrjHvjH|jH}jH`kHakHckHnkHxkHykH`lHflHklHplHxlHpmHfnHnnH{nH}nHaoH}oH`pHlpHwpHlqHoqHkrHesHrsHysHvtHquH~uHcwHwwH{wHaxHdxHlxHwxH~xH~yHezHpzHyzHb{Hd{Hn{Hz{H_|Hr|Ht|Hu}Hw}Hr~He_If_In_Ia`Id`Iq`IfaIvaIxaIebIhbI~bIccIecImcIncI~cIsdI`eIieIffIufImgInhIyhIzhIdiIfiIpiIriIcjIpkIwkIklIqmI|mItnImoIzoIzpI{pI|pIpqIvqIfrImrI}rIrsIuuIvuI_vIcwIoyImzIyzIzzIa{Id|Ih|Is~I~~Ii_J}_Jn`JnaJtbJzdJneJ{eJciJpjJ`kJmkJtmJo~Dq~Dr~D|~D__E`_Ea_Ef_Eg_Ei_Ek_El_Em_Eo_Eq_Er_Eu_Ev_Ew_Ex_Ey_Ez_E{_E}_E_`Ec`Ed`Ee`Ef`Eg`Eh`Ei`El`En`Eo`Ep`Eq`Er`Et`Ev`Ew`Ex`Ey`E_aE`aEbaEdaEeaEiaElaEmaEoaEsaEtaEyaE{aE|aE~aE_bE`bEabEbbEcbEdbEebEibEjbEkbElbEmbEnbEobEqbErbEsbEtbExbEybEzbE{bE|bE}bE~bE_cEccEdcEecEicEjcEkcElcEncEocEqcErcEucEvcExcEycE|cE}cE~cE_dEadEedEfdEgdEhdEidEjdEmdEndEodEpdEqdEudEvdEydEzdE|dE}dE~dE`eEfeEheEieEkeEleEmeEoeEqeEreEseEweEyeEzeE}eE~eE_fE`fEafEffEgfEifEjfElfEmfEnfEofEqfEsfEtfEufEwfExfE}fEagEbgEdgEegEmgEngEogEqgErgEtgEugEvgEygEzgE|gE~gEahEchEdhEehEihEohEqhEshEthEuhEyhE{hE}hEdiEgiEjiEkiEriEsiEtiEuiEviExiEyiE{iE|iE}iE~iE`jEbjEdjEfjEjjEkjEmjEqjErjEtjEujEvjEwjExjEyjEzjE{jEakEbkEdkEekEfkEhkEjkEkkEnkEokEpkEskEtkEwkExkEykEzkE{kE~kE`lEalEblEclEelEhlEklEllEmlEplEslEtlEvlExlE{lE}lE~lE_mEamEbmEcmEemEfmEgmEhmEimEjmEkmElmEpmEqmEsmEtmEumEvmEwmExmEymE{mE}mEcnEdnEenEgnEhnEinEjnEknElnEmnEonEpnEqnEsnEtnEvnExnE|nE}nE~nE`oEboEdoEeoEfoEgoEhoEloEmoEpoEroEsoEtoEuoExoEzoE{oE|oE_pE`pEapEbpEdpEfpEhpEipEjpElpEmpEnpEopEppEqpEspEvpEwpE{pEaqEbqEdqEkqEmqEnqEoqEpqEqqErqEtqEyqE`rEarEbrEcrEerEfrElrEqrEtrEvrEwrEyrE{rE|rE~rEcsEdsEfsEgsElsEnsEpsErsEssEvsEwsExsEysE{sE|sE}sE_tEbtEctEdtEmtEptEttEutEvtEztE}tE~tEbuEduEeuEfuEguEiuEkuEmuEruEsuEtuEuuEvuEwuE|uE}uE_vEavEbvEcvEdvEgvEhvEivEjvEkvElvEpvEtvEvvEwvEyvE{vEawEcwEfwEgwEhwEjwElwEmwEnwEowEpwErwEswEtwEwwEzwE|wE~wE`xEaxEbxEcxEdxEqxErxEtxEuxEwxEyxEzxE|xE}xE~xEayEbyEfyEgyEhyEiyEmyEnyEoyEryEsyEtyEuyEwyExyEyyEzyE{yE|yE}yE_zEazEgzEhzEizEjzEnzEozEpzEqzErzEszEvzExzEyzEzzE{zE}zE_{Ea{Ec{Ei{Ek{El{Er{Et{Ew{E|{E}{E`|Eb|Ec|Ed|Eg|Ei|Ej|Ek|El|Eo|Ep|Er|Es|Ey|E}|E~|E_}E`}Ea}Eb}Ed}Ee}Ef}Eg}Ei}El}Eo}Er}Et}Ev}Ex}Ez}E|}Ea~Ec~Ed~Ee~Ef~Eg~Eh~Ei~El~En~Eq~Es~Eu~Ey~Ez~E|~E}~E~~E`_Fb_Fc_Ff_Fh_Fk_Fm_Fr_Fs_Ft_Fv_Fw_Fz_F{_F``Fe`Ff`Fk`Fl`Fm`Fn`Fo`Fp`Fu`Fv`Fw`Fx`Fy`Fz`F{`F}`F~`F_aF`aFbaFdaFeaFfaFgaFhaFkaFnaFoaFpaFraFuaFwaFxaFcbFebFfbFgbFhbFjbFkbFlbFrbFzbF|bFacFccFhcFicFjcFncFpcFrcFucFwcFycFzcF|cF~cFadFbdFddFgdFhdFidFkdFmdFodFrdFtdFvdFwdFzdF{dF}dF~dF`eFaeFdeFfeFheFjeFneFpeFqeFseFteFueFzeF}eF`fFafFcfFffFgfFkfFpfFqfFzfF|fF_gF`gFagFbgFcgFdgFegFfgFigFjgFmgFngFogFrgFvgFxgFzgF}gF_hF`hFfhFihFjhFphFqhFrhFshFvhFwhFxhFyhF~hF_iF`iFaiFciFhiFmiFoiFqiFtiFviFwiF{iF~iFajFejFfjFhjFijFjjFkjFqjFwjFxjF{jF|jF~jFbkFdkFfkFmkFnkFokFqkFrkFykF{kF|kF}kFblFelFklFllFmlFqlFrlFslFulFvlFwlFamFbmFcmFdmFemFgmFhmFimFpmFqmFsmFumFwmFxmFzmFanFinFjnFknFqnFrnFvnFwnFxnF{nF|nF~nFaoFboFcoFfoFhoFjoFkoFnoFqoFsoFvoFwoFyoFzoF}oFapFcpFipFkpFnpFqpFtpFxpFypFzpF}pF_qF`qFaqFcqFdqFeqFfqFiqFjqFmqFrqFtqFuqFzqF|qF_rFarFcrFdrFerFfrFgrFirFjrFkrForFsrFvrFwrFyrF{rF|rFbsFdsFfsFgsFjsFlsFmsFnsFpsFssFusFvsF|sF}sF`tFdtFetFftFgtFitFptFrtFstFttFutFwtFxtFytF}tF~tF_uFauFcuFeuFguFhuFmuFouFpuFruFxuF|uF}uF_vFavFcvFivFlvFovFrvFtvFwvFxvFyvFzvF|vF_wF`wFbwFcwFdwFgwFhwFiwFjwFqwFtwFwwF~wF_xF`xFdxFlxFnxFqxFrxFuxFyxF{xF|xF_yF`yFgyFiyFjyFkyFmyFpyFsyFvyFwyFxyF}yF~yFazFbzFfzFhzFizFkzFszFxzF|zF_{Fb{Fc{Fe{Ff{Fh{Fj{Fk{Fl{Fm{Fn{Fp{Fq{Fw{Fx{F{{F}{F~{F_|F`|Fb|Ff|Fj|Fk|Fo|Fr|Ft|Fv|Fx|F}|F_}F`}Fb}Fc}Fe}Ff}Fi}Fo}Fs}Ft}Fx}Fy}F{}F}}F_~F`~Fa~Fd~Fe~Fg~Fh~Fj~Fm~Fo~Fp~Fq~Fu~Fv~F{~F}~F__G`_Gf_Gp_Gq_Gr_Gt_G}_G_`Ga`Gb`Gc`Gd`Ge`Gf`Gg`Gh`Gj`Gk`Gn`Gp`Gu`Gw`Gx`Gz`G|`G~`GcaGeaGfaGhaGjaGpaGraGuaGxaG|aGcbGdbGfbGibGlbGmbGobGrbGubG|bG}bG~bG_cGacGfcGlcGncGocGrcGxcGycG{cG}cGcdGddGfdGgdGidGkdGmdGodGpdGtdGudG~dG_eG`eGbeGgeGheGkeGmeGqeGseGteGweGxeGzeG}eGafGdfGefGjfGlfGmfGofGrfGtfGxfG}fGbgGcgGdgGegGfgGhgGkgGmgGogGqgGrgGugG|gGahGbhGghGlhGmhGnhGphGrhGthGvhGdiGeiGhiGiiGjiGliGmiGtiGuiGviGxiGcjGfjGhjGijGjjGrjGvjGxjGyjG|jG~jG_kGakGikGlkGmkGukGxkGykGzkG|kG`lGclGelGflGnlGolGplGslGtlGulGzlG{lG`mGdmGemGfmGjmGmmGnmGomGsmGwmGymG{mG`nGanGbnGcnGenGhnGjnGnnGsnGcoGdoGeoGfoGioGsoGuoGvoGzoG|oGapGcpGdpGepGfpGgpGhpGjpGlpGppGspGwpGxpGypGaqGdqGlqGmqGwqG{qG}qG_rG`rGgrGhrGirGjrGrrGbsGcsGfsGgsGhsGksGnsGosGpsGssGvsGctGftGktGmtGotGqtGstGttGxtGytGztG`uGauGbuGcuGfuGguGkuGluGouGsuGuuGwuGyuGzuG`vGcvGfvGhvGkvGlvGmvGovGpvGtvGyvG{vG_wGdwGgwGhwGjwGkwGlwGnwGowGxwGzwG_xGaxGcxGhxGnxGtxGbyGgyGnyGpyGqyGsyGuyGvyGwyGyyGzyG|yGbzGhzGkzGnzGozGqzGszGtzGuzGwzGyzGzzG{zG|zG~zG_{G`{Ga{Gc{Gg{Gj{Gk{Gl{Gm{Go{Gp{Gt{Gw{Gz{G|{Gb|Gd|Gf|Gg|Gh|Gj|Gl|Gt|Gx|Gy|G~|G`}Gb}Ge}Gh}Gl}Gq}Gt}Gv}Gy}Gz}G{}G|}G_~G`~Gb~Gg~Go~Gs~Gx~G|~G~~Gb_He_Hk_Hm_Hn_Hq_Hr_Hs_Hv_Hx_H|_H~_Hl`Ho`Hs`Hv`Hx`Hy`Hz`H{`H}`H_aH`aHaaHeaHfaHhaHjaHlaHqaHsaHuaH|aH}aHabHbbHcbHgbHhbHibHqbHvbHxbH|bH`cHccHfcHgcHhcHicHucH|cH_dH`dHbdHgdHhdHjdHkdHodHpdHrdHvdH_eHceHdeHgeHheHieHkeHmeHneHqeHreHseHxeH{eH}eH_fHafHcfHdfHhfHifHkfHofHtfH{fH_gHbgHfgHggHigHlgHmgHngHsgHtgHugHxgHchHhhHqhHrhHthHwhHxhHyhHzhH{hH~hHbiHhiHiiHjiHkiHmiHoiHqiHsiH}iH~iH_jH`jHdjHhjHkjHmjHpjHtjHwjHzjH~jHgkHokHqkHrkHtkHvkH|kHblHclHdlHjlHmlHolHqlHtlHzlH|lH}lH~lH`mHfmHhmHjmHlmHomHqmHymHzmH}mHanHbnHgnHjnHknHpnHrnHsnHunHvnHwnHxnH|nH_oH`oHcoHdoHfoHhoHioHmoHooHpoHqoHuoHwoHxoHcpHepHhpHjpHkpHopHspHtpHxpHypHzpH{pH|pH}pH~pH_qHdqHgqHmqHqqHsqHtqHuqHvqHxqHyqHirHnrHqrHsrHurHvrHwrHzrH|rH}rH~rH`sHfsHgsHhsHjsHksHnsHosHssHusH{sH}sH`tHbtHctHetHhtHktHltHptHrtHutHytH|tH`uHauHcuHduHfuHguHhuHiuHjuHluHnuHruHtuHvuHxuHyuHzuH|uH}uH_vH`vHfvHhvHkvHtvHwvHyvHzvH{vHewHfwHhwHiwHjwHmwHowHqwHswHuwHxwHzwH~wH_xH`xHbxHcxHexHjxHmxHoxHqxHtxHxxH{xH|xHbyHcyHiyHmyHnyHuyHxyHzyH{yH|yH`zHbzHczHjzHlzHszHuzHvzHwzHxzH|zHm{Hp{Hr{H}{Hh|Hj|Hk|Hm|Hu|H{|H}|H~|Hb}Hi}Hk}Hm}Hn}Ho}Hr}H~}Hb~Hc~Hg~Hh~Hi~Hn~Hx~Hy~Ha_Ib_Ic_Id_Ig_Ih_Io_Ir_Iv_I{_I}_I~_I``Ib`Ik`Im`Io`Is`Iv`Ix`I{`IbaIcaIeaIgaIhaIjaIkaInaIpaIqaIzaI|aI}aI_bIgbInbIsbItbIxbI{bI`cIbcIgcIicIqcIscIxcI}cI`dIadIcdIedIgdIjdIndIqdIvdIzdI|dI~dIbeIfeIheIkeImeIoeIpeIqeIveIxeIyeI}eI~eI_fIcfIifIkfIlfInfIqfIvfIwfIxfI{fI_gI`gIjgIngIrgItgIugIvgI{gI_hIbhIdhIfhIhhImhIohIshIuhI{hIiiIkiIniItiIuiIyiIziI{iI|iI}iI~iI`jIgjIljInjIojIqjIsjItjIyjI_kI`kIdkIekIjkIkkInkIrkItkIvkIxkI_lI`lIclIflImlIrlIvlIwlI}lI`mIemIfmIlmInmIsmItmIxmI}mI~mI_nIbnIcnIdnIgnIlnIrnIwnIxnI|nIgoIioIjoIpoIsoI{oI_pIapIepIhpIkpIopIppIrpIypI`qIcqIhqIrqItqIuqIwqIyqI{qI}qI_rIarIcrIdrIhrIlrInrIprIurIvrIwrI{rI`sIbsIfsIgsIjsInsIssIwsIzsI}sI~sIdtIntIwtIztI~tI`uIouIpuIquIsuIxuI{uIdvIfvIhvIjvIrvIwvI}vIbwIdwIfwIgwIhwIjwImwIqwI{wIbxIdxIfxIhxIixIkxItxIuxIzxIjyInyIqyIsyItyIwyI~yI`zIgzIhzIjzInzIozIpzIb{Ic{Id{If{Ih{Ij{Il{It{Iz{I_|Ia|Ic|Ig|Ij|Il|I~|Ia}If}Ii}Io}Ip}Ir}Iv}Iy}Iz}I|}Ic~Ie~If~Ii~Im~Iq~It~Iw~Iy~I{~Id_Jk_Jq_Jr_Jt_Jx_J_`J``Ja`Jb`Jc`Jd`Jg`Ji`Jl`Jr`Jt`Jv`Jx`JgaJjaJoaJpaJqaJsaJtaJgbJjbJmbJrbJsbJ_cJecJgcJicJlcJocJhdJjdJldJmdJydJ|dJ_eJqeJveJzeJ_fJffJkfJmfJofJtfJvfJyfJ{fJ|fJngJahJfhJhhJohJthJzhJ~hJbiJeiJfiJjiJoiJxiJljJsjJvjJ{jJakJbkJkkJukJzkJ|kJglJjlJulJvlJylJ{lJmmJpmJxmJ{mJgnJtnJboJdoJgoJroJtoJuoJnpJ`qJbqJfqJgqJhqJkqJ_rJkrJprJrrJtrJvrJ_sJ`sJtsJ~sJttJztJuuJ{uJ`vJvvJywJoxJhyJezJpzJ_{Jt}Jv}Jy}Jz}Jp~Ds~Dt~Du~Dv~Dw~Dx~Dy~Dz~D{~D}~D~~Dd_Ej_Ep_Et_E|_E~_E``E~`EcaExaEzaEfbEhbEubEwbEbcEhcEtcEbdEddEldEtdExdE{dEbeEjeExeEcfEdfEefEjgElgE}gEbhEphEwhE|hEciEiiEliEmiEniEoiEpiEqiEhjEijE_kElkEmkE_lEdlEilEjlEwlEomEzmE|mE_nEbnEfnEnnE{nEaoEcoEkoEooEwoE~oEepEupEypEzpE|pE`qEeqEfqEgqEhqEiqEjqElqEwqExqEzqE|qE}qE~qE_rEdrEhrEkrEprEsrEurExrE_sEbsEisEksEmsEqsEusEzsE`tEgtEhtEitEjtEotEstEwtExtEcuEjuEluEquEzuE{uE~uEfvEnvEuvE_wEdwEewEkwEuwEywE_xEgxEhxEjxEkxElxEoxEpxEsxEvxExxE`yEdyEeyEjyEkyElyEqyEvyE`zEbzEczEfzElzEmzEuzE|zE~zE`{Eb{Ed{Eh{Ej{Em{Eq{Es{Eu{Ev{Ex{Ey{Eh|Eq|Et|Eu|E{|E||Eh}Ej}Ek}Em}Eq}Ew}E`~Em~Eo~Ep~Er~Et~Ex~E__Fa_Fd_Fg_Fi_Fn_Fo_Fp_Fy_F|_F}_F_`Fb`Fc`Fd`Fg`Fh`Fi`Ft`F|`FcaFjaFlaFmaFvaFzaF}aF~aF_bF`bFabFbbFdbFibFpbFqbFubFvbFwbF{bF}bF~bF`cFbcFgcFkcFocFqcFscFtcF{cF}cF_dFedFndFqdFudFieFkeFleFreFveF|eF~eFbfFefFhfFlfFsfFtfF}fFggFhgFlgFqgFsgFygF|gFbhFchFghFlhFnhFohFthFuhF{hF}hFbiFdiFeiFgiFiiFkiFliFpiFriF}iF_jF`jFcjFmjFnjFsjFujFvjF_kFakFckFekFjkFkkFlkFukFvkFzkF~kF`lFflFilFnlFolFzlF{lF~lF`mFfmFlmFnmFomFtmFvmFymF{mF|mF~mF_nF`nFbnFcnFdnFfnFhnFlnFpnFsnFtnFznF}nF`oFloFooFpoFuoFxoF|oF~oFepFjpFlpFopFppFvpF{pFgqFoqFqqFsqFvqFxqFbrFmrFprFrrFasFesFosFrsFtsFxsFysFzsF{sF_tFctFhtFjtFotFqtFvtF`uFduFiuFjuFsuFuuFvuF{uFdvFfvFjvFkvFnvFsvFvvF{vFawFewFfwFlwFmwFrwFvwFxwFzwF{wF|wFaxFbxFcxFgxFhxFixFkxFtxFvxFwxFxxFzxF~xFayFbyFcyFdyFfyFhyFlyFnyFqyFryFuyFzyF{yF|yF`zFezFgzFjzFmzFrzFwzF~zFa{Fd{Fo{Fr{Fs{Ft{Fu{Fz{F|{Fi|Fn|Fp|Fs|Fu|Fa}Fg}Fh}Fl}Fm}Fr}Fv}Fw}Fz}F|}F~}Fb~Fc~Ff~Fk~Fl~Fn~Fs~Ft~Fy~Fz~F|~F~~Fg_Gh_Gi_Gk_Gl_Gm_Gn_Go_Gs_Gu_Gy_Gz_G~_G``Gi`Gm`Go`Gr`Gs`Gv`G{`G}`G`aGaaGbaGdaGiaGkaGlaGmaGoaGqaGvaGwaG~aG_bG`bGbbGebGhbGkbGpbGsbGvbGwbGxbGybGccGecGgcGicGjcGkcGmcGpcGqcGscGwcG_dG`dGadGbdGedGhdGndGqdGsdGvdGxdGydGzdG}dGdeGeeGieGjeGleGneGpeGyeG|eG~eG`fGcfGhfGifGkfGnfGsfGufGwfGyfGzfG{fG|fG~fG_gGagGlgGngGsgGvgGwgGygGzgG~gG_hG`hGihGohGqhGshGwhGxhGzhG{hG|hG}hG_iG`iGaiGbiGfiGgiGpiGriGsiGwiGyiG{iG|iG}iG~iG_jG`jGajGbjGdjGejGkjGljGmjGnjGpjGqjGsjGtjGujGwjGzjG}jGckGdkGekGgkGhkGjkGokGqkGskGtkGvkGwkG{kG}kGalGblGdlGglGhlGilGklGmlGvlGwlGxlG~lGamGbmGhmGimGkmGpmGrmGtmGumGvmGxmGzmG|mG}mG_nGgnGinGknGmnGonGrnGtnGunGvnGwnGxnGynGznG{nG|nG}nG~nG_oG`oGboGgoGhoGloGmoGnoGooGpoGqoGwoGyoG}oG~oG_pG`pGbpGmpGnpGopGqpGrpGupGvpG{pG|pG}pG`qGcqGeqGfqGgqGhqGiqGjqGkqGoqGrqGuqGyqGzqG|qG~qGarGbrGdrGfrGkrGmrGnrGorGqrGyrG{rG~rGasGdsGisGjsGlsGrsGtsGxsGzsG{sG}sG~sG_tG`tGbtGgtGhtGitGptGwtG{tG}tG_uGeuGhuGiuGjuGmuGnuGpuGruGtuGvuG{uG|uG}uG~uG_vGbvGdvGevGivGjvGnvGrvGsvGuvGwvGxvGzvG|vG~vG`wGbwGcwGewGmwGpwGrwGtwGuwGwwGywG|wG}wG~wG`xGbxGdxGexGfxGixGjxGlxGoxGqxGsxGuxGxxGyxGzxG{xG|xG_yGayGdyGeyGfyGhyGiyGjyGkyGlyGmyGryGxyG{yG}yG~yG`zGazGczGdzGezGfzGlzGmzGrzG}zGb{Ge{Gh{Gi{Gn{Gq{Gr{Gu{Gx{Gy{G{{G}{G~{G_|G`|Ge|Gm|Gn|Go|Gp|Gq|Gr|Gu|Gw|Gz|G{|Ga}Gc}Gd}Gf}Gg}Gi}Gk}Gm}Gn}Gp}Gs}Gu}G}}Ga~Gc~Ge~Gi~Gj~Gk~Gl~Gm~Gn~Gp~Gq~Gr~Gt~Gu~Gv~Gw~Gy~G{~G}~G__Ha_Hd_Hh_Hj_Hl_Ho_Ht_Hw_Hy_Hz_H{_H_`Ha`Hb`Hc`Hd`He`Hf`Hg`Hh`Hi`Hj`Hk`Hn`Hp`Hq`Hr`Ht`Hw`H|`H~`HbaHdaHkaHmaHoaHpaHraHtaHxaHzaH~aH_bH`bHebHjbHkbHlbHmbHnbHobHpbHrbHsbHtbHubHwbHybHzbH{bHacHbcHdcHecHkcHlcHmcHncHocHqcHrcHtcHvcHxcHzcH}cH~cHddHedHfdHidHldHqdHsdHtdHudHxdHzdH{dH|dH}dH~dH`eHaeHbeHeeHfeHjeHleHoeHveHweHzeH|eH~eH`fHbfHffHgfHjfHlfHnfHpfHqfHrfHsfHwfHzfH}fHagHegHhgHkgHogHpgHrgHwgHygHzgH{gH|gH}gH~gH_hH`hHahHbhHdhHfhHihHjhHkhHlhHmhHnhHohHvhH|hH}hH_iHaiHciHeiHfiHgiHliHniHpiHriHtiHuiHviHxiHyiHziH|iHajHcjHejHfjHgjHjjHljHojHqjHsjHujHxjHyjH{jH_kHbkHdkHekHfkHhkHikHjkHkkHlkHmkHpkHskHukHwkHzkH{kH~kH_lHalHelHglHilHllHnlHrlHulHylH{lH_mHamHbmHcmHdmHemHgmHimHkmHmmHnmHrmHsmHtmHumHvmHwmHxmH{mH|mH_nH`nHcnHdnHenHhnHinHlnHqnHtnHynH~nHboHeoHgoHjoHkoHloHnoHroHtoHvoHyoH{oH~oH_pHbpHdpHfpHgpHipHmpHnpHppHqpHrpHupHvpH`qHaqHbqHcqHeqHfqHhqHjqHnqHpqHrqHwqHzqH{qH|qH}qH~qH_rH`rHarHbrHcrHdrHerHfrHgrHhrHjrHlrHorHprHrrHtrH{rH_sHasHbsHcsHdsHisHlsHmsHpsHqsHtsHwsHxsHzsH|sH~sH_tHatHdtHftHgtHitHjtHmtHntHotHqtHstHttHwtHxtHztH{tH}tH_uHbuHeuHmuHpuHsuHuuHwuH{uHavHbvHcvHdvHevHgvHivHjvHlvHmvHnvHovHpvHqvHrvHsvHuvHvvHxvH|vH}vH~vH_wH`wHawHbwHdwHgwHkwHlwHnwHpwHrwHtwHvwHywH}wHixHkxHpxHrxHsxHuxHvxHyxHzxH_yH`yHayHdyHeyHfyHgyHhyHjyHkyHlyHqyHryHsyHtyHvyHwyHyyH}yH_zHazHdzHfzHgzHhzHizHkzHmzHnzHozHqzHrzHtzH{zH}zH~zH_{H`{Ha{Hc{He{Hg{Hh{Hi{Hj{Hk{Hl{Ho{Hq{Hs{Ht{Hu{Hw{Hx{Hy{H{{H|{H~{H`|Ha|Hb|Hc|Hd|He|Hf|Hg|Hi|Hl|Hn|Ho|Hp|Hq|Hs|Hv|Hw|Hx|Hz|H||H_}H`}Hc}Hd}He}Hf}Hg}Hh}Hl}Hp}Hq}Hs}Ht}Hv}Hx}Hy}Hz}H{}H|}H}}H_~H`~Ha~Hd~He~Hf~Hj~Hk~Hl~Hm~Ho~Hp~Hq~Hs~Ht~Hu~Hv~Hw~Hz~H{~H|~H}~H~~H__I`_Ii_Ij_Ik_Im_Iq_Is_It_Iu_Iw_Ix_Iy_Iz_I|_I_`Ic`If`Ig`Ih`Ii`Ij`Il`In`Ip`Ir`It`Iu`Iw`Iy`Iz`I}`I~`I_aIaaIdaIiaImaIoaIraIsaItaIuaIwaIyaI{aI~aI`bIabIbbIcbIdbIfbIibIjbIkbIlbImbIobIpbIqbIrbIubIvbIwbIybIzbI|bI}bI_cIacIfcIhcIjcIkcIlcIpcIrcItcIucIvcIwcIycIzcI{cI_dIbdIddIfdIhdIidIkdIldImdIodIpdIrdItdIudIwdIxdIydI{dI}dI_eIaeIceIdeIeeIgeIjeIleIneIreIseIteIueIweIzeI{eI|eI`fIafIbfIdfIefIgfIhfIjfImfIofIpfIrfIsfItfIyfIzfI|fI}fI~fIagIbgIcgIdgIegIfgIggIhgIigIkgIlgIogIpgIsgIwgIxgIygIzgI|gI}gI~gI`hIahIchIehIghIihIjhIkhIlhIphIqhIrhIthIvhIwhIxhI|hI}hI~hI_iI`iIaiIbiIciIeiIgiIjiIliImiIoiIqiIsiIviIwiIxiI_jIajIbjIdjIejIfjIhjIijIjjIkjImjIpjIrjIujIvjIwjIxjIzjI{jI|jI}jI~jIakIbkIckIfkIgkIhkIikIlkImkIokIqkIskIukIykIzkI{kI|kI}kI~kIalIblIdlIelIglIhlIilIjlIllInlIolIplIqlIslItlIulIxlIylIzlI{lI|lI~lI_mIamIbmIcmIdmIhmIimIjmIkmImmIomIpmIrmIumIvmIwmIymIzmI{mI`nIanIenIfnIhnIinIjnIknImnInnIonIpnIqnIsnIunIvnIynIznI{nI}nI~nI_oI`oIaoIboIcoIdoIeoIfoIkoIloInoIooIqoIroItoIuoIvoIwoIxoIyoI|oI}oI~oI`pIbpIcpIdpIfpIgpIipIjpIlpImpInpIqpIspItpIupIvpIwpIxpI}pI~pI_qIaqIbqIdqIeqIfqIgqIiqIjqIkqIlqImqInqIoqIsqIxqIzqI|qI~qI`rIbrIerIgrIirIjrIkrIorIqrIrrIsrItrIxrIyrIzrI|rI~rI_sIasIcsIdsIesIisIksIlsImsIosIqsItsIusIvsIxsIysI{sI_tIatIbtIctIetIftIgtIhtIitIjtIktIltImtIotIptIqtIrtIstIttIutIvtIxtIytI{tI|tI}tI_uIauIbuIcuIduIeuIfuIhuIiuIjuIkuIluImuInuIruItuIwuIyuIzuI|uI}uI~uI`vIavIbvIcvIevIgvIivIkvIlvImvInvIovIpvIqvIsvItvIuvIvvIxvIyvI{vI|vI~vI_wI`wIawIewIiwIkwIlwInwIowIpwIrwIswItwIuwIvwIwwIxwIywI|wI}wI~wI_xI`xIaxIcxIexIgxIjxIlxImxInxIoxIpxIqxIrxIsxIvxIwxIxxIyxI{xI|xI}xI~xI_yI`yIayIbyIcyIdyIeyIfyIgyIhyIiyIkyImyIpyIryIuyIvyIxyIyyIzyI{yI|yI}yI_zIazIbzIczIdzIezIfzIizIkzIlzIqzIrzIszItzIuzIvzIwzIxzI{zI|zI}zI~zI_{I`{Ie{Ig{Ii{Ik{Im{In{Io{Ip{Iq{Ir{Is{Iu{Iv{Iw{Ix{Iy{I{{I|{I}{I~{I`|Ib|Ie|If|Ii|Ik|Im|In|Io|Ip|Iq|Ir|Is|It|Iu|Iv|Iw|Ix|Iy|Iz|I{|I||I}|I_}I`}Ib}Ic}Id}Ie}Ig}Ih}Ij}Ik}Il}Im}In}Iq}Is}It}Iu}Iw}Ix}I{}I}}I~}I_~I`~Ia~Ib~Id~Ig~Ih~Ij~Ik~Il~In~Io~Ip~Ir~Iu~Iv~Ix~Iz~I|~I}~I__J`_Ja_Jb_Jc_Je_Jf_Jg_Jh_Jj_Jl_Jm_Jn_Jo_Jp_Js_Ju_Jv_Jw_Jy_Jz_J|_J~_Je`Jf`Jh`Jj`Jk`Jm`Jo`Jp`Jq`Js`Ju`Jw`Jy`Jz`J{`J|`J}`J~`J_aJ`aJaaJbaJcaJdaJeaJfaJhaJiaJkaJlaJmaJraJuaJvaJwaJxaJyaJzaJ{aJ|aJ}aJ~aJ_bJ`bJabJbbJcbJdbJebJfbJibJkbJlbJnbJobJpbJqbJubJvbJwbJxbJybJzbJ{bJ|bJ}bJ~bJ`cJacJbcJccJdcJfcJhcJjcJkcJmcJncJpcJqcJrcJscJtcJucJvcJwcJxcJycJzcJ{cJ|cJ}cJ~cJ_dJ`dJadJbdJcdJddJedJfdJgdJidJkdJndJodJpdJqdJrdJsdJtdJudJvdJwdJxdJ{dJ}dJ~dJ`eJaeJbeJceJdeJeeJfeJgeJheJieJjeJkeJleJmeJoeJpeJseJteJueJweJxeJyeJ|eJ}eJ~eJ`fJafJbfJcfJdfJefJgfJhfJifJjfJlfJnfJpfJqfJrfJsfJufJwfJxfJzfJ}fJ~fJ_gJ`gJagJbgJcgJdgJegJfgJhgJigJjgJkgJmgJogJpgJqgJrgJsgJtgJugJvgJwgJxgJygJzgJ{gJ|gJ}gJ~gJ_hJ`hJbhJchJdhJehJghJihJjhJkhJlhJmhJnhJphJqhJrhJshJuhJvhJwhJxhJyhJ{hJ|hJ}hJ_iJ`iJaiJdiJgiJhiJiiJkiJliJmiJniJpiJqiJriJsiJtiJuiJviJwiJyiJziJ{iJ|iJ}iJ~iJ_jJ`jJajJbjJcjJdjJejJfjJgjJhjJijJjjJkjJmjJnjJojJqjJrjJtjJujJwjJxjJyjJzjJ|jJ}jJ~jJ_kJckJdkJekJfkJgkJhkJikJjkJlkJnkJokJpkJqkJrkJskJtkJvkJwkJxkJykJ{kJ}kJ~kJ_lJ`lJalJblJclJdlJelJflJhlJilJklJllJmlJnlJolJplJqlJrlJslJtlJwlJxlJzlJ|lJ}lJ~lJ_mJ`mJamJbmJcmJdmJemJfmJgmJhmJimJjmJkmJlmJnmJomJqmJrmJsmJumJvmJwmJymJzmJ|mJ}mJ~mJ_nJ`nJanJbnJcnJdnJenJfnJhnJinJjnJknJlnJmnJnnJonJpnJqnJrnJsnJunJvnJwnJxnJynJznJ{nJ|nJ}nJ~nJ_oJ`oJaoJcoJeoJfoJhoJioJjoJkoJloJmoJnoJooJpoJqoJsoJvoJwoJxoJyoJzoJ{oJ|oJ}oJ~oJ_pJ`pJapJbpJcpJdpJepJfpJgpJhpJipJjpJkpJlpJmpJopJppJqpJrpJspJtpJupJvpJwpJxpJypJzpJ{pJ|pJ}pJ~pJ_qJaqJcqJdqJeqJiqJjqJlqJmqJnqJoqJpqJqqJrqJsqJtqJuqJvqJwqJxqJyqJzqJ{qJ|qJ}qJ~qJ`rJarJbrJcrJdrJerJfrJgrJhrJirJjrJlrJmrJnrJorJqrJsrJurJwrJxrJyrJzrJ{rJ|rJ}rJ~rJasJbsJcsJdsJesJfsJgsJhsJisJjsJksJlsJmsJnsJosJpsJqsJrsJssJusJvsJwsJxsJysJzsJ{sJ|sJ}sJ_tJ`tJatJbtJctJdtJetJftJgtJhtJitJjtJktJltJmtJntJotJptJqtJrtJstJutJvtJwtJxtJytJ{tJ|tJ}tJ~tJ_uJ`uJauJbuJcuJduJeuJfuJguJhuJiuJjuJkuJluJmuJnuJouJpuJquJruJsuJtuJvuJwuJxuJyuJzuJ|uJ}uJ~uJ_vJavJbvJcvJdvJevJfvJgvJhvJivJjvJkvJlvJmvJnvJovJpvJqvJrvJsvJtvJuvJwvJxvJyvJzvJ{vJ|vJ}vJ~vJ_wJ`wJawJbwJcwJdwJewJfwJgwJhwJiwJjwJkwJlwJmwJnwJowJpwJqwJrwJswJtwJuwJvwJwwJxwJzwJ{wJ|wJ}wJ~wJ_xJ`xJaxJbxJcxJdxJexJfxJgxJhxJixJjxJkxJlxJmxJnxJpxJqxJrxJsxJtxJuxJvxJwxJxxJyxJzxJ{xJ|xJ}xJ~xJ_yJ`yJayJbyJcyJdyJeyJfyJgyJiyJjyJkyJlyJmyJnyJoyJpyJqyJryJsyJtyJuyJvyJwyJxyJyyJzyJ{yJ|yJ}yJ~yJ_zJ`zJazJbzJczJdzJfzJgzJhzJizJjzJkzJlzJmzJnzJozJqzJrzJszJtzJuzJvzJwzJxzJyzJzzJ{zJ|zJ}zJ~zJ`{Ja{Jb{Jc{Jd{Je{Jf{Jg{Jh{Ji{Jj{Jk{Jl{Jm{Jn{Jo{Jp{Jq{Jr{Js{Jt{Ju{Jv{Jw{Jx{Jy{Jz{J{{J|{J}{J~{J_|J`|Ja|Jb|Jc|Jd|Je|Jf|Jg|Jh|Ji|Jj|Jk|Jl|Jm|Jn|Jo|Jp|Jq|Jr|Js|Jt|Ju|Jv|Jw|Jx|Jy|Jz|J{|J||J}|J~|J_}J`}Ja}Jb}Jc}Jd}Je}Jf}Jg}Jh}Ji}Jj}Jk}Jl}Jm}Jn}Jo}Jp}Jq}Jr}Js}Ju}Jw}Jx}J{}J|}J{vH???????????l@??T?T|BTT}Ca@?l@Ta@??l@??aD|BqET?oH??@?@????}C?@a@?P@?@??@s@~B@@@}C?jA?@?tA??Bs@?@@@@??b@@@?B?@???@~BaD??a@?B?~B@@w@??@@?B~B??X?@?@@w@??uA`AcDPqET@B?pPoHaD|BBB?P}C@@@?jAT@@n@@a@xEl@@?@nm@??rQ?C?cD?jAs@??a@l@??~In@?C?????C@@RCAcI@w@?@?T?AP?aC?gIB@@@tACP@?@@s@C?s@~IjAA@bC@BxE@@pPl@?@C@l@?l@A@?C??uA`A??@cDC@gDOuA?b@?nR?`A@?@@@?CA@@BAA@aAn@Cs@?kBB?CCA@@@@@{NEf@@CT?AA?@?@?AA@@@@??AA@@@@@`AB@RC?A?BCC?A@@@@aAb@Tw@oH@??B?@?C?@@CBA?@?@kDaC@@BAAgI@@@b@A?D?@w@B@BEABAXdAXX?A?`F@?P?@t@B?@@?uJ`A?@?mD@@PBDA@?BkBR^@@??D~B?BCaCC?n@?bC@nB?A@@??tA?@Bn@@PB@KBa@?t@?B@@@?A?@?jA@?BE?dB?bA?XBAAAnDA?C?w@jJDaAdBl@@A@@bC@@?C@}BE?@?kk@A?@t@BD?@t@mD?ABBA?DCx@fFE?@?BA?@@@@A?@@t@@b@yn@C@yA@BAC?@RDeA@?n@?@G?P@@BC?a@aAfA??dA@@@TkDuA?@@BA?@B?`F@???Dw@A@@P??\G?uA@BAkD@?@BCE@?n@nBBCyA@y@GaA?@a@DC@@w@l@fA?BAyA@@B@@dRE?@@@A?DC?EA?@jD??oU@@@RtA@fF?@BCHCAlT@@@~ID?@X@`F@AGDE@?CBDE@AX@bCb@@BAx@@@@HA@??@?mU`A??C@@@@@GA@@uAAA?@@P?@@@@?P?TRB??A?lC@@@GdB@A??S?C?@@FiC?x@fB@bAdRxF?A@@@??EA?@@???A?BA@@XPX?jRFA?@?@@G?i}@@R`F?@T?HcRASHP@AnBK@RDfA@@??T?w@?@@@@??AE@@FE?jA??@NDaAC??HA@@@@@@BBE@O`A?@@@@@@BC?GC?jz@PDs@PeAK@CC@}C?@A@@@@?@S@?D?y@@DBD?A@@DBCN?jCS?DAAKPtBP?g@????@@FBA@@@@@?H?@@@A??g@GEt@CDCdWAIEA@F?y@?@@BB?@A@@@@DB@vz@@?PBc@@Dl@CKuQ@w@?@G?a_A@B@G?@@fA?@n@DDENDrBH?@@@@@@NCX@???GD??@uJ?A@B@CBAAAA@@N?kB?a@??@R@BC@@f@@BXAA@@@@??FF`AP?@G?@aA\@@@BjC@@BC@IBC@BCoAn@C@rB??A@DDb@H???S?@@A?@@@`A@HA@@QF?@mA?ND@G?A@@tA@@@@J?@H@?@@@JE@@@BKEGC?FQFA@@t@B?yD@CHuh@?KF?@@@@@B@RBA@@B??@n@yF?@OGF@ZCDSK@wBE?@EC?D@@@@H?AA@@@@DBBACa@Ea@???EAyA@C?KAA@C@C@@@@BC@@@@?AB??A@@@@@Cn@?n@A?uUBCAA@NkBC@@@@@@CBA@?DAAGhW@@?DmAtBBe@BCARS@@@EBN@CC?A@@@?C??CAAA@????@pJ@@QBACFA@@?C@@@@@BCC@?C@@@@BE@A@@@@@CJA@CqE@uCoy@?w@@oK@E@BzA@@BDCRnBF?H@dB@GA?JFBE?@?EFbAG?`AH??An@O@HA?P@C?F??IBC?@A@@B?@@A??AA@@@@BBCAA@GC?@@@@CBrBg@@?@@@G?A?@H?oA@HC?oUc@@GC?DBCAA@BCAE?@@FCTR?BN@B?Fuz@@B?A@@@J?@Z?mA@mDG?BA?a@@BE?^@@@AI@@@KA@@GCAAK@FA@?BC?DoA@G@?D??Q@BDa@@?B@J@@@@??A@C@@L@@@@@EQ??@]D?C@?@CJSKZC@A@@@@B_G@@@@?A?@?B?B??@CC?t@BAAABAA@BCt@@?@A@@XtBX??E?HAEA?@@@@BB@hC@@dASBCwF@@B?@@BAAIA@@@@BAAA@@@@?BCAAD?yFC@@@@@IB?A@@@?C@?@?AT@G@??@@@s@AhD@KG?@Fb@t@?B???BDKA@@@@_E@FFHAF?FAJCA@@BC?G?A@@PGCO@@S@IAiC@AGbC@@@@J|ECO@FHA@@@@B?@A@@@B@@@@??CP?EEsABHDAAA?@B?AAABALeG?F?rIANH??FK@BC?JFCLJmD???G?LEmUJCHDHH?oL@I@?O@AELE?EEG@HH@@G}DGE@@E??L?GHHDfA?D@@@MAI@]@@yA?F@AA@DB??C@A@mC?J@@@@?@@CAH@@@@@Ax@?CKzE?g@C@?@`G@\@BA@CBAP@DBSB?C@?@efAZ?ODBAAJE@?@?E@?F??DF?E@J?JRn@H@?@AqDAL@H?H@@F@@@?C@@?AABCM@@L?@@@@??@BE}DA@@@@B@@@BbCBAG@Hy@F?{@@@B@@@@tLE@@@B@CI@@?HD?@ND??FA@?@@IM@@?BE@dQ?rGBfA@BE@g@?E@@DB?CDBA@@@L@@mCC@?DE@@AK@?@@?A?@aj@@??@@HFG?A?@A@@BA@I@rm@A@@@@CE???C@z`@?CD_E?G@@@?dAqKC????@FBABEs@CK@@@B?@@@@?EB@CA?LEHF@@GA@@@Bx@??@@?@vcAJmD@mFA?F@fbA???C@@@A@@GE@@@@@B@@@@@CfAC?AA@Cg@AOFA@h@bZPAdW?BD@iYJV@@@@@@uA?ABA@@@@@@B?kB@?@@BC?A?@@@?I@?A@@JoAs@@EiZ@@@BEEKHRF@@@@@?@@@QAuBCCB?mBV_@BD@@y@N?AF@@H?t@A@??tjA@H?A@@@@@NU@ToTB@@@@?EBaA@BAA@BAE@@@@B?CNC@?@GA@A@@?D@@?sSf[@@@@@@BgG@@@B@CG?K@@@@dfA?MF`BA@BEA?@t@F@AA?IDCP{X@@CEpL@B@@CB@@@@uCvt@PfA@@BA@nD@@@@BCBCFF@@AB@@@@@@BAB?iC@@@BEE@@?FGE@@CC?ICA@F@GCk@@LAA@@H?@@@@?wv@?Q@DB@@AV@???F@@IC@iX@BA?@@@@LD@?g@?qG@@@I@FLjlAM?@HH@@Z?niA?[?AFFBC@AF@H?CKMACCB?@BilACC@@@@@@@BA@A@BCA@@@BOFkW??kD@hDQ@wB@A@LMBA@@@F@DH@F?eA{@f@?ICF?E@@@CAAA@@@AAB??IA?m[@??@???@CyABCCGK?H?@dC@IG@@@@@HAB?F@@IDC@BD@@L@Rx@sAsA@_@t@LCEA@@GD?@GCA?@c@@?tB?oAPCS@@aD??@@@xBE?HEA\@@@A@iY?S@@jC?@?@@@}ALA?E@IAcEE@@F??GDC@?BA@A@fA@?b@c@a@A@Z@@G?KaC@CDoA@BFDD??@@BCDA{@@@@BV?@@@@BCx[I~[@jC?QD?S@@B@IHA?@@?jDUQ??D@KHCeiA|_ACJCA@@LA?qD@x@|GD@?@@@LAAA@@@@`B@M@?yB?@@?}LDK?@G?N?yD?@@@@kW?J?@@@@K@S@k@?A?BBC@@@@@A@z@QF@??@Bs@BU@ADC@@JD?F|BB_@D?DrJ@?T@?BA_BE@@@@D?a@AA@@@F?AV@@@@@CBAABAA@@@?AF@??@@@@@BGDD?M@sD@@@@@DCBFBCC@@G@A?@CwB?R?DC@Hjg@mFByB?mC@CGEK@@@@@@H?AK?@J@DBBE?PsA??iaADDOKp@?zkA@@HPC@@fCD@ECjIBeAAD@k@H??qAqAuCqA???JDFMHERiFyBE@@@?A_ADB??P@z@iB@@A@?]A?@BCE?FBVI???uJ?@@cA??UG`[BDS?@REC@B?@HC?EBEM@iCz@|EM?@GC@@@@?E?WBtA?@@@I?@@@LAEA@@@@GCAA@@@@@dMF@CBAACDFF?BGmAA@@N?wFwnAA@_G??@@?A??@AF?CA?@B?AoEDD@@@BC?AGDBb@`BJDbA@g@CA@@?@BAK@@@BCD@vq@faAB?@@@@NdD?DG?|@_[BAbA|XA@BCy@HD@sAD?@?CCv\wENCEWIC?FzY@@@PC@AA@BC??@@H@OKLC@BmYE@@@C???@?L?C@`H?D@?W?@I@BAAABC|A@CMrv@yF?Fv@y\E?g@oLBC?GV|A@CAIIA{@@?@HBzBBCa[@LE@b@BHAjA@??HDC@@IT@J?cAC??|@BFA@@I?qKA@@?@@BCA?@@@@H???@@@@HSF@GDWDLCE@?D??b@G@wCGDpy@@@H@@]?A?@T@B?@@@@BAAB?@@V@@@LoLA@@KAG??N@G?nRsVAkBA?@K@FBAkDFK?_GUQA?IEXy@C@KDFcACDA????F@?E??@G??@@FDDBARoI?[GDA@@BA@@CI??@EFZ?@Y@@DB]JDEFL??FFA@@BnBTCq@]C@zA@DD~B@??@@@GZD?@??A@??AAz\@BU?AIxEO@GD@a@r{@@BAA@HU@Hb@z@AAA@y@@@@OB}@@@fA??@@@V{@J?E@?GM@@LCA?V?BA@@@yLM]M@BCCI?A?RQBFF@BEA@JD@F?HCv@?|EDEeA@@CLA?@@F`JcoAU@HEN?ABA@CDBq]KEBC?aFjC@@L@@J@@@B|ACc@BA@@BB?@@L@?iX@z@CCl@@?HCC|@iF?GA_BRm[|Av@@?@BA@@@BAM@@?XyJBgD@@uBBA@kZ@N|Y?IzBrFB@@@@?B?@q@@@h@rBAnH@@@DDkCqEV@@BEBA@GA@M@?Nv\@mAPLDEE@?@Ex@rBDBzACnM?yFwG??@KABC@?GD????DD^@ZD?@yfA@DBC@?DC@wBDCiC@@H@L`@?`rA@H@??CEW@@bHKk@@NCAnBMF^]?D?E@m@@LbP@@kpAx@BJ\@AGDA@@NAM@|G?@GK@dA@?DDGDxnAE@@@|JB?D@M??sV`@A@@B?@@@@U?BoZAzGNmBKW@JCAk@@@BEbKcADr@hpABAIAA_GAO@@@@@?A_E@dMBr@BCC??BD???qAqA@@Q?A@eHtE@\@GAoW@@@B@?BlY@SAA@F@@@@BEWb@H@B?A@@jG?DD@@FDE@@NCCU?DB@@LE@@@GzX@\@H??GC???EK@DBAM@IABj]|BA@@J?@ND?@FTdD@@@@BMJ@qB@BCq@eARHOEA@@PmLBaD@uCJ?@QB?G??@?OAADDGAq@W?@SJA?gG?}EA@jW@@?TL?EF@@I|oA@tsABjGDCK@@G??FB@@@F@Jm@A?IC?`@@i]mB@LcD?@@?F@??B@@BDr@E@mACoA?iA^?oA@P@@CHot@E@@@G@FaB@J??e|@IF?@DhFkM@ZC}BB?@A?aB??@@@@@@EBk@GE?b~@yBF[@FBBAE?CA@@_pAI??v@ABAA@Ir@@BDD?zBH@?gAA@??EbsAFLCE}@`BHDCK@DB@CA?A@CDAA?GCD`C?@@?BCW?HjeA?oKQFGE@MO?MqD`MXBD?A@@F?N??@B?E@?ODA@@DpVv]@@?[[h@AF@@h@@@@\B?@\zA]?CGE?HC}A@@@L`@@M?@m^C?{@?[[FB?DAk@?\@?B?@OlcAzDSD@@B?@@?A?V@H@@@F?H@@tE}GCC@LC?AzABR@@JC?@@DNCPF@L@@@aEd@?@@f@HCCFH?A?@@BChW@yB@CBAAAC@AlG@??A@@beAAaCD@GiC@?xEXrGLDD@@@?BC@?\x@dALC?@ICR@@BDD?mB@JC@@LCE{lAOE@DCBA?xB@@nMG@@@E?GEkB\H??EeX@]DW@ABA?@@CD?B?DKIKICU@@??skACHAE{@?@@H?@FMCH|B@@FBL@CB?D?eX@@BMJDFA@@R@?A@@@?RAAJC@A?IARBC@@EDBDAFVB?F{@MyLDD@BE?@@pCHC?@@SA@lTAbA@BDE@@JCC@@@@N?~[DeA@W??@@?@@aMG@@@GC@@YbZ@H??UG@qeANA?E@@c@CBzMQ??J?BEoK_Y@BEIPBC@@BCgvA`AE?@@?C?J@?GHDD?p@jDC~nAC@WFLDA@@@uCBCAAAA@G???@?@DCchAABDDBA@EB@vJ@BDIEDm@IfE?B@HR@aCG?@@@@@@xB@_hA@J@AWAJCDy@[GzBSHA??NAF@D@_]@@@G@?B??JmA_AD?@MN@Br@?|@GCEmB?@G@@CIC?A@@GDE@@@ZAC??JgGeHC?OWIICAiL@L?O@@DB@BC?@kMoABCC`@?A@@@@BqK?CS?cE@@C@@@CB@ABCCA@@B??@Bc_A`@@@BAA@@@@HKH@@@d@DD@v@FCCBnMKA@D??TB@A}LF@N@@@mB?`@E?\c@@@DCBuBBA@D@@?CUFv@|ALE`@E@h@@eYBEA@ugA?Xg@|@G@@H?BC?@@NCFk@JKS?dB@@HCdrA@HCC[[??HE@@@CA@dAmF@^GF@?BB@@cQDD?CCtY@@@@E?A@@FQ@?hAA?@pJBCK@?DCW@@@FB@cAb@@@@JAAdCOehAA?E@@@DY?[[?BDA@B??A@{pA?C@?@@BD?cADQ`EB_wAA@@@@HPvABC?@BD@W?K?G??@@GE??c@IxME?E@A?LD?f@F@H?P@NKMd@E?c]?aF@@Z?GB_B@F@J@A@eoA@w@D@BC@@c]yB?@@@?dQISA_B@@??a[@?JbnAzAtA@sA?@?wBA@@S?_E?@WB??@O@H?@NtL?@@@`pAGMKCL?x[@_A@HCF@@@J@CI@@@JH@HC?E@cA?@D?x^GE@IAGD?@@@BAp@@G@c@?CA@b@CFA@@?@A@wFGE@@?@@H@}DA?Dk_@{Bd^?UL_@@jG?@?DD?A@FI{^Hu|@BA?rBA?J@}GF@@@@JF@?AkMA@@A@MHAjA@F`M{V`@RK@@@DCyvA{BI?EA`kA@@@DA@ixAr@@NDk[CFHAzB@@@EAF@CBA@IF@FBS`@@v@dCtAC@?KBA]Cr@fBD@B@F@?iA`BEIA?D?CT@@crA|@???voACAAJPAxMHkZIPA@?_@Lc@p@G?E@_@@NCsqAk_@@NEp^Ml_@B}@@ZsAM@CBA@@B@@l@@@@AB?@@@J}D?@@Z|@?|@B@EB?@LD@d@jR@@@@@@LF@@vLXCv@GA@@BCC@@@BAaAMBDAuB{B@iAHD?}@?_AE?H}@@@`@@f@DD?ABCASHF@@GAKFCCdtA@@G@NA@LA?@BEbAV?@@?CBDBAA@@BDr@@~{AEI@M@??A@UM?H@E@@@A@BlG@??@FK?BAbA@A@c@@B@@E@?H?@@H??@BKBC?@}yABpo@GyrA@BzG@?BAL@A@@@@@@@BAEByDE@@@@@nmABCGAG@@BCAAqJ?sgACqzA@IE@MBAAG?cT@@L?@@?@@GE@@lG|uAF@?Ed@GAQ@BCaYO@B?EKC@A@@@@FD?EBGcD@@aEHC@ABDF?@XCAA@?@d@C@@|fABA@z@DCE_@@?Ds@{BHDKlCDBiA?BCzuA|GFHAAcA?@?Q@I?@@CHA?EE@oZBA@@B?A@D?DAA@A@fN@HEM?@BFBC?EFGA`C@@GG?@DBA@@?DqvA^zgAAFHCOAFEB@CHCKAI?AXaBLA\@KS@@CBAC@?BCCh@@@aAtBHDAVFDB@@CGCsfAXLEE@@@@??`wA@E@@wxA@?DF@?z@Aj{A@HCA@@@@BH@L@@@@@@AAh@?E@?fFQS@BAA@GD@@@@HA?MDJAU@@@B@CDHCEsAmC_@ID@@CDJFndA@?GD|J@AhA@@@@BCpC@@@N?A???OJAD@KG~@B}F?@@@@B@@DD\ObA?BE@@@@A@KV?D@@?B}@C?@C?UTz@VFNc@Wq@N?T?QaABDfF?@@@BA?VJAAF@@HEJv|AEF@BCA_B@LA[?[hA@@B@@BA@@jGFP@@@B{B}eA@@@QICaB@G@@@zbAA@@@@@@?BEA@BB@@xBAr_@A?`@AE@GAM?@@_@m^DCAF?HCA?@@??@WGa@@mA@KI?GC?y^@@?jD@@@?DvL?@@@@G?@@@@G?`@?@H}@fNBA?QHDCA@z@CAwE???q_@H?LfwA@N?Ep]@x@?h^BEcsACC@v@Bq]?A@GESK?Mp@I@@@FVB@@?H@uFA@@r@Q]@RC@B?E@Ga}A@BOVN?ZC?xW@GA@DAQCCH?A?gG?@fB?A@@ctAKm|@Hz^w^@CC}l@M?@@EHFA@B?@c@@@Fb@BE?A@CMG@?B?@@_[KHyMaNHCuA@@CC?z@@A@?ZDP[[kLPh@AAAbiAFwlADAq@F@H|G?wBCAm@@VCBDnaA?BAD@@RL`@F?FjD?BDAA@@@@G??N@@D?GDEKFhA?BC@A@@HEA@@@FIE??HCAcE@OFJ@DI??IC?@@@RKB@@AIsMIDaFFJ|A?{^yM|@B??W@]??@QBl]?DEjaA??qA?rZ??y_B?AA@@@@@ACEBG?|@QBDDAHC?@F?D`BAxmA@@@DDnDK~qA@H?vlAPB?jCxY@@FBA?@A@@EKBAA@@{Cq@@E@@@@?Zq@@VQxMwC@E@CNiAN??EjICFIr@?L@L@ID??@@?BCA@@@@@BJDDx\G?DS_E?@@FL{X@FBC@?@A@IfH{CU_@?FI@@@@_@@fkA?@hA@BDv@A@@??B@A@BAQ|@_@?C[Cy@N?@JDF?BCc@?JC?@@~@G@EA@GaEAAABE@?C}D@?@?A@@@?DCA\A@@`uAUU@AEA@@@@G?M@@J@@J@w}AFG?EH?@@@@@@BC?JyB{CF@H@WHC@FAHc@?@NDEG@@B?Mh@D@Fv@@?A@@@CqmAC@G@G?A?@?@?h@@AV@@DDA?Fj}A|C@[@?Brx@n`BHg[A@@G@BRD?@IAUcC@@@B`@{{A??HiL@?EkiABEg@??a`B?[@uCg@??@ABA?@[z@??{@@@d@E@}AW@@GtkA@A@aB@@{CE|C@@K]?CCLEiA@ZCA@@H?IDx]F@BC@@DBA@BE?@F@G???ExW?S@{@LA@WQDCAA@J@@Ak@@L?EB_`B`@@F@FCA@?UHD@?xG@?GE@@@@CI@@?zBhrA?Dr@`@@?F@DG@@Jqp@_jAu`B@XE?BA?@uy@@@@]KiF?@DD?@@@}vA|rAAq@@@BGCDE@?cACF_aBBCGDdFO@\?_B@@FEk@BC}@c@?OHKAU?DWQe_@C?JCA@F@@@BCyA?@FC_@BC@@@]?D?@DG??@OLEAA?@DDIb@B?_B@Z[@GR??@XIlpA@@@BC@@@@A?HDE@?@??C?Aq_@@@@GhN@B?@BCCwCI??C@OJ@D@@iFtB@ZCAv@I{@GC~@KG?@y@@H@lC?@@@H@@EZC@C_@@EHOGgN@@@B?@H???@@@?D?@jN?IH@@CC@BC@@@Ah@AAA@@@LDA@QQBCAG|`BM~@@@B@@@IAC@@BKfExGEE@txA?CE@@@R@?DD@^?\?BEF@?h@AK{]D@@G`gAA@@@@RC??O@GOH?o@C@@@@@@@B?BaNnQfEB?Bqs@@@@@@A_A?kH^KwC@AdMCH@@FBcgAlC@@A@@G?vmA@@@wBE?@@aFdu@IaBB?A@?}A@GE@@A@@AH@@rZEL@R?@@BJ?AerACB@@HDeAcE@@D?F@}AN?hCJ?@@mAA@HDO@?HW_@bHDlwA@@@~@B?K}A@?@BU?@@B??CB@L?@gyAL@G?@@@@@@kHJ@@@@@@@?EA@AKBDD?B@A@@A@?DgDd@?]D@A@@@D_]d@}@B?@@B@@@@@HDC?Af`@AS?e}@@O@Btv@@l]J?@n~AGE@gAhNG@Ag@KKwEJC@@MEB@B@GA?xGCiBA@@@ZAA@@ABD?DC@@kgAC@@KBEC_@@@F@L?AaM@V@@BFiAyAHCWp@G@@@BEgNBi_@X??qA?qAqAID?@?d^L~RA@Af`@HfB_~AJE@ClzAAr@UI`@{gA?FR@FID`@IDGvJ?O@B?@@BCAA?@@@@DGdxA}uA@?HA@e`BD@?@?M{aB@HqB?@AFCCzMGbA@@Hj~A@G@@?@s@_@HCA?gNL?@G@\@]zA@F@B?MC?F@@@@@@@IdB@@N@owA@@@JDE@aBd@TCED?PMIC?W?@HyM[@NM@@D?DD@KB@@Bc@zGF@CHEE|C?HE?uQ?@@CmwAbE@BFd@@@EIBCCA?\J@BCr@?KB@@B?JDF@@EBD}G?AK~@z@CA?Fj@CA@?hA?DB@N?CCkHCAfNG@Ek}ABAA@J@E?@@MI??xzAQ@@@vJr_AAIaYAA@@@@BAV?@@@TGDSFjACCFGlkA@O@?H?H@B?COB??@A@@@HDC@B@Md@{C?@@@GA@@zYr_@g@ADDBDMHS@@@H@BrhA}@CF@@@@@G@@Aq@LC?K@GDEKMFG?}A@@Cf@BAAd@AAr{ACUA?hAFq@CBFAA@@GDk@?M?Ci_@E?@@@J?EG???@@BEA@M@@@@BCD?@@?@xBFKM?FA@@@?AE@@By\?EX]cRw_@@?@mCC_@@DTUM@IE@@@@M?faBF@?GbaA@xYC@?Bj`ACiA@d`@BCA@HCd@?a`@B?@@BA?B@@@yLCE|X?@@@HEEEIE@?N@@@BAAAGA@i]@mCBp@jNVGE@?A@@DCA@Ib~A{@@G?@yzAF?@CGbNCgA?cA@|C@@@DCAM@C?@@A@@@@_@aBzDCTv}AJ@LnaB@@@OBAA@@@@B@GE@EEA@CGCC?OmbB?B?g_@M@?DC@?GF@@@NA@?@LA@@|@E@?DBfBeAeHHA@@LA@@~@SFXC@@BHwCADCKGc@aE@HCHKCIL@@@@HAVOKuBBAAABE@@@@H?dA@@xBC?U`B@rG@?L?hNHAfBE@BJ@@@@DG@@B@?Ee_@Hp@d@?BC?wCBDCzMfEBAABBE?hfAJC?@@@FvLMLA@?NiABC@Ay@h@C@M@CBCE@@BNDDv@~@uBBA@?F@@BB?A@?@BybB?D?{BAF@@A@@IE?O@k@L?@JaN[jN@zG@?IuB@?IDnQB{B?V@bHEE@D?N{M@@GCCAEA@NPDd@AGzB~AG?EA@@J@}A@rqAdB?@@@Gp]@aENOBCC@h@??BABjnAp_@@@@?~@@@@E?G?@M??DDQLA@HphAM@@GCC?BCHASA@@@GA@?@BEE@@@@@@R?@@Ag@HDEm@@@??D@BCmBshA@@?FCGCrmAQ\kH?@BA?B?^@@q@@G?@EJA?@|bB?GE@@G@FtB@KCI?AC@@@@@@?w^rGO@@GDrBE?@CDA@p@@q@?CE`@ayA@HA@@@eHuyA@nBLp}@K@k@BED@B@A@cQ@B?IA@?D|A_Bg@HCDQOJ?cE@q@H?@l~Am@AAA@@@d@C`[_@UCbHQ?@@QI@DDPA@@@O@@@JA@?@_@JDDF~@@BE@@@pjAAAO@F@?@@@@@@]C?f_BB?IA@@|JAF@w~@?DDdAIK@?|HI?fJ@@}GAA@@FWB?@{JBfBwF@h@C@@FZFF@Q?E@_cBHCdA@@@@B?EzA@@|C@@@GaMcW@@?U`RH?DBEA@@]Ca`@?@MBCV@@?CiZ@FBD?@@HCmvAVf`BAA@@@@@@Bx@?bcAH?@l_@L?B?A@@B?@GDD?AO@}`AH?A@R@BgA@]r@?BjiA@@G?@@fE@@lGA?@D}Ej`@}zAhA@@@BA?MA@A`Hz^DB?G?F@E@@@d@C_YD?CA|C@@@JDCAE@?HCA?@\H?C@@F@@@???@qyA@HyDB?G??KOFO@@@bAh@@@DEDEG~@@EBA@@@{jASE?b_BCDr`BFHA@@@C{CD}@FHDDA@ABAj`@?@cA?@iA??}xA@@BCB}@D`BHA??|AGA??@?@FLC@QxGE?@@@IDAqaBxBDED?@A?@?@@K?@@BAB?A@@@@@?BDD@@DCB{_@JDeA~@@@@BC@@@?CC@@?a\?T?jcBa\?A?B?C?D?E?F?G?H?I?J?K?L?Mk`@Bl`@D?N?O?P?Q?R?S?T?U?V?W?XkNTlNY?Z?[?\?]n`@Cm`@^?_@?`@x`@D?a@?b@?c@?d@?e@?f@?g@?h@?i@?j@?k@?l@ca@m@?n@?o@?p@?q@?r@?s@?t@?u@?v@?w@?x@?y@?z@?{@?|@?}@?~@?_A?`A?aA?bA?cA?dA?eA?fA?gA?hA?iA?jA?kA?lAlNVs`@X?mA?nA?oAlHpA?qA?rA?sA?tA?uA?vA?wA?xA?yA?zA?{A?|A?}A?~A?_BbB`B?aB?bB?cBmNo@da@q@fa@s@ha@u@ja@w@lHy@mH{@ma@}@oa@_ApNaAiEcAsa@eAua@gAnHdBxa@nAya@eB?fB?gB?hB?iB?jB?kB?lB?mB?nB?oB?pB?qB?rB?sB?tB?uB?vB?wB?xB?yB?zB?{B?|B?}BzNtBwb@vByb@xB{b@zB}b@|B{N]rAoA?eBlb@gBnb@~B?_C?`C?aC~CbCsHcC?dC?eC?fC?gC?hC?iC?jC?kC?lC?mC?nC?oC?pC?qC?rC?sCxNx@?pA?tCkEeBbc@hBob@jBqb@lByNnBtb@pBvb@uC?vCrAwC?xC?yC?zC?{Cub@qB?uCxc@RkAxCyc@zC{c@pBwc@vCuHyCzc@{C|c@uCmEzC~c@qB}c@vCad@{C`d@vCt`@Ur`@WkEx@?|C?}Crc@qArNsA?~CsN_D?`D?aD?bD?cD?dD?eD}a@yA?fD?gD?hD?iDpEjDkb@hAcd@pB_d@Rab@p@ea@r@ga@t@ia@v@oNx@ka@z@?kD?lDzb@yB|b@{B~b@}BaOfBmb@hB?~Bdc@`C|N|A?bCgc@dChc@fC~NhCjc@jClElCmc@nC`OpC?mD?nD?oD?pD?qD?rD?sD?tD?uD?vD?wD?xD?yD?zD?{D?|D?}D?~D?_E?`E?aE?bE?cE?dE?eEoEpApHrAqHtAsNvA|a@xAbBzArH|AuN~A`b@yA?fElEgE?hE?iE?jE?kEmOzDfe@|D?lE?mE?nEe@gBcc@_Cec@aCfc@yA?`B?cC}NoE?pEsO{DrEqE?rE?sE?tE?uE?vE?wE?xE?yE?zEpd@q@bb@t@rd@w@db@z@sd@lDud@zBac@}Bue@hBsc@kBrb@mBsb@oBdd@ReIiBpb@kBwOnBvc@qBbd@R_AqBYuCbf@jBtc@mBaf@pBf@vCm@RnEVeI~B?{E?|E?}E?~E?_F?`F?aF?bF?cFoE|CbOpApOsAfd@uA?_Dgd@aD?dF?eF?fF?gF?hF?iF?jF?kF?lF?mF?nFkOxD?oFhf@}CcOrA?pF?qF?rF?sF?tF?uF?vF?wF?xFaOyF?zF?{F?|F?}F?~F?_G?`G?aG?bG?cG?dG?eG?fGbD_Cve@|Ayd@yAsEcC}NeCic@gC?gG?hG?iGiOkC?jG?kG?lG|e@r@qd@u@xNyDyH{DrEmG?nG?oG?pG?qG?rG?sG_CzF{f@|F|f@~F~f@`G`g@bGbg@dGbPfGef@WoOqAdOtAqOwApEzAle@}A_b@_BbBtG?uG?vG?wG?xG?yG?zG?{GtHy@mH|G?}G?~G?_Hpa@`Aqa@bAra@dAta@fAqNhA_DuBxb@wB_f@{Bwd@]?`HkEaH?bH?cH?dHlP|Aza@qA?eH?fH?gH?hH?iH?jH?kH?lH?mH?nH?oH?pH?qH_DrH?sH?tH?uHjIXhP{FaP}F}f@_G_g@aGag@cGcg@eGyOkBcf@oB?vH?wHwa@WjEkAva@Ued@Xch@vB_c@yBvd@|BhI`Cxd@bChOeCdPhCiIlC}d@oCnc@mDcBoDxHqDbe@sDjOxHkPyH?zH?{H?|H?}H?~H?_IlOyDlg@|DnOlEte@nE|g@yG?`I?aIkIcAjb@fAmPiAkg@s@cb@v@wHy@mHkDtd@xB`c@{BmIbI?cIfIvF`PxFtEpAjf@~CeO`Dhd@dFnf@fF?dI?eI?fI?gI?hI?iI?jI?kI?lI?mIvh@|Frg@_Gyh@bGug@eG`i@aCtO`Bwe@dCzd@gCfg@hGhg@iCkc@kCig@kG?nI?oI?pI?qI?rI?sI?tI?uI?vI?wI?xI?yI?zI?{I?|I?}I?~I?_J?`J?aJ?bJ?cJsi@t@}e@yDuE}DzHRbDdJ?eJ?fJ?gJsj@{I?hJ?iJ?jJ?kJ?lJ?mJ?nJtPqAdO~Czi@aDmf@eF{OgFpf@iFrf@sDjOuDee@wDni@zD_I}De@oJ?pJ?qJ?rJ?sJ?tJ?uJ?vJ?wJ?xJ?yJ?zJ`P{Je@|J?}J?~J?_K?`K?aKYbKvg@rAqHcK?dK?eK?fKnEYu`@[w`@]|h@lBuc@oBfQmBdf@qBwj@u@~g@z@la@|@na@~@lPaAib@dAbh@gAnHiAlk@nBxOgK?hK?iKhQjK?kKie@cE|HeE?lK{HbEje@dE}HmKkAnK?oK?pK?qK?rKfOiAfDsK?tKwOuK?vKsP`Ipi@aApk@eAyP|AcP`Bej@eCbi@iCzPlCdi@pC_e@nD`e@pD?wK?xK?yK?zKdk@zJfk@xF?{K`D|K_C}K?~K?_L?`LYaL?bL?cL?dL?eLrk@oBf@nEeh@bHfh@dHhh@x@cOeHjh@gHoPfL?gL?hL?iLek@wF?{JgI{K`DvEbIjL?kL?lLmk@v@oNyD~PlExP}Fxh@`Gtg@cG{h@fGvEcHgh@_ApN|AlImL?nL?oL?pLsPzG}g@v@ti@z@?|GjP~G`h@_Ahb@bAah@eAi@qL{j@rAqH~CeOrL?sLtl@dHil@pApHeHkl@hHlh@jHnh@lHph@nHrh@pHol@w@vO{@fb@~@gQbA|l@fAql@~Fsg@aGzh@dG?tL?uL?vL?wL?xL?yLhl@pB}k@bChOoExe@yD~P~DdDlA~h@XyQU{EViBqBo@uCtIbL?zLzEyDpl@mEom@WyE{Gnk@{L?|L?}LmIwBdh@|BhDvCqm@v@wl@|Gyl@_Hem@cAri@gAsIaIqi@dAqk@hAgm@_Gcj@cGum@w@vOkDui@yB_i@}B}m@x@gOkD{QzB`f@]}h@wH|EX~l@_Aul@x@jl@fHkh@hH`m@kHoh@mHqh@oHsh@qHhBsA{a@uAtN~L?_M?`M?aM?bMel@wFwIsAkf@_DzOdFuPgF_k@jF|OlF}O`E{HcM?dMzIy@_h@}GkP_Hwm@dAzQiA{m@`Gsl@dGmEeM?fMiPgMsm@xBvi@|Bkm@yAdg@dC?hM?iM?jM?kM?lMgBmM?nM?oMym@aA|k@fAmPnEkn@z@xl@}Gln@_A{l@cAxm@hA}Q`B_l@fC~NgGgg@iGiIjGePpM?qM?rM?sM?tMtm@}BfDuM?vM?wM?xM`CRzEx@gO{@dm@_A{n@dAwn@bAfm@gA}n@cCeg@fC~n@hGhj@jClEjGao@qMco@sM~QyM?zM`RdCfj@hCci@mC_OoCei@nDkQwK?{M?|M?}M?~M?_N?`N?aN?bN?cN?dN?eN?fN?gN?hN?iNlAeCdPjNcBkN?lN?mNio@cA|n@iAjB|Gvm@_Aho@eAfOnE{ItAqO~L|InN}I~C|j@dFgn@hFqf@jFce@tDde@vD~OyDuEqE`IsE`DuEaIwE_F}Gzn@`Azm@eAqn@yB~m@]an@`A~Cx@bn@gHoPiHmh@kHen@nHcm@qHyIzD`Q~Dzo@fC{d@iC`l@mCaRpCbl@oDxHoN?pNYqNzEnEiRzBhPrN?sN?tN?uN?vN~o@uAtNwAxg@{A~C}Azg@yAsEaB?wN?xN?yN?zN?{NvP|N?}N?~N?_Oyi@wFop@{B?`O?aO?bOye@|Dse@mErp@vA?~L?cO?dO?eO?fOnn@aGim@eGlRbGdj@fGlAhMsn@jMun@lM~EdA|p@|Bfp@|AlIeHvQiHip@lHbm@oHmRcG`n@Udq@}BcJwAtp@|Ame@_BbBgO?hO_p@uAlf@`D{i@eF{OiO~QxBrn@}Bmq@_DzObDid@dDkd@xAbBfDvHhDnd@xAsRgD?jO?kO?lO?mOeQZv`@\bJaO}p@yDgRnOdJoO?pO?qO?rO?sO?tOwPuOgBvO?wOeq@x@gp@hHdn@lHiq@pHcp@~Gzl@`Aep@fAlp@gCgj@iG`o@kG?pM?xO?yOeFhCqo@nC~d@mDfi@pDcl@{Muo@zO?{Ojq@dGxIuLwQ|O?}O?~OwRpA_m@fHcn@iHhq@mHfn@pH`J{Dze@rEuOtE?|KxRiCmp@nCcr@nDkQqDhi@tD`p@wDbk@{DrE}DrR`Dnq@fFof@hFeRsDak@vDkO_Pcq@fGkE`P?aP?bP?cPzf@{Fwh@~Fhm@bGgBeJxj@gJpIhJ?dP?eP?fP|Q{Jml@tEcCjL?gP?hP?iP_Ry@eb@|@ok@_A}o@fAbs@z@~e@xBqR]?jP?kP?lP?mP?nP?oP?pPhBqP?rP?sPji@{HqP}Hmi@_I?_PeC{@go@`A`r@gAdr@eGm@tPrr@aD}j@fF?iOoq@yB~RfGeCkD{QuP?vP?wPjr@|DnO~D{RjC|d@mCnp@mDyRwK?xP?yP?zP?{P?|P?}P?~PdF]YgKeD_Qjs@|@cs@`Als@hA?`Qpg@sG}RaQwQwLgDbQns@kClc@mCos@nDso@{M?cQ?dQcFeQ?fQ?gQ?hQuRrOvRiQ?jQ?kQlBbDpq@eDpEfDrq@iDod@fAiRuP?lQ?mQfJqAih@fHgr@jHam@mHir@qH_SlDeo@]es@rPfs@zHki@|Hli@~HrP_PtRbOiD}Dvs@lCal@mDyRqDnr@uD_QxDfS~DoReApRVwIpF?nQ?oQiPwG^pQwi@cIbFxFfCqE?qQ?rQet@sPgs@|HeS_IlOnEht@mCws@oDxHsQ?tQ?uQ?vQ?wQ?xQ?yQkq@xAke@{Aup@~A~HzQ?{Q?|Q?}Q?~Q?_R?`R?aR?bR?cRdt@xBlBdFuPiOms@zBxt@yA~a@{Azt@_BsHaBwNuFyf@wFfC}DlAoElm@zD_IqEhRtE{e@vEvIkLwEdRrs@}@?eR?fRbF{J`s@vEvIgPhJiPeJ_Hmn@eAfClEtt@nClr@oDgi@rDfRxHii@zHft@}His@xDiDqEmJuEgJgP~t@eF~j@hFtr@tDor@xDiDlEnu@fFsr@iF`k@tDou@yDuElEeFgG_o@iCzPjGePlGrt@zHiu@~HrPxDhSRwAeHgq@jHct@nHo@aLoQgRsJ{Hhs@~Huu@yDsu@mEfu@oCro@oDrSsDur@wDpr@|D?qE`IhR?iRxu@|Hst@xDcJ~L|IjRbD{Eff@}E?kR?lR?mR?nR?oR?pR?qRYrR?bKkt@fAyP|QjB{L?sRsShGko@kCij@pMbo@rMdo@tMi@qB?aLoQcLuItR?uR}t@yBsJvR?wR?xReByR?zR?{RpQiLqQxFyk@tKzk@vKkFiGar@nIjj@pIkj@rImj@tI?|R?}RuR~R?_S?`S?aSySzBeFbS?cS?dS?eS?fS}s@cDjd@eDcSgDmd@iD_t@gAhFrEuOgSvu@fHbt@kHjp@oHwAhS?iS|N|QnD~QmSjS?kSxA_M?lS?mS?nS?oSlv@zJfl@{Knl@wE?jL|u@}Hju@yDgRrEzRuEcCyEaQpJ?pS?qS?rS?sS?tS`T{B^nEdv@gAnSzAyg@~A~H`B?uS?vS?wS?xS?yS?zS?{S?|S?}S?~S?_TjQeEhDnEzJ{A`u@yAsEuSdw@wSfw@yS?`TlBaT?bT?cT?dT?eTzIfTfo@gT?hT?iTYjT?kTvAcLuIlTcw@|Biw@|Alq@yAvp@wNxp@yN?mT~CnT?oT?pT?qT?rT?sT?tTiTnE^uTgFnQnt@vG{EvT?wTtJpCoc@rCqc@v@wHpApOpFmt@oQrDmDit@rDfRuDgSyDyJsEbp@vE?xT}ByT|w@nDmr@rD|OzT}OnFap@zD_IlE}ItAwg@xAyt@|AuNzAlS|QoJ{T?|T?}T?~T?_Uqw@}AkR`BvNwN}JmTsw@oTnT`U?aUjSbU|o@cU?dUaTdDqq@yAld@gDuv@xAbBjDoJeU?fU?gUgCgFhn@sDwS_PaK~A~HtG{g@vGpw@}Bxv@gHhp@jHwu@oHuThFeRkFsf@mFtf@wDjFmG?hUpToDrSkF?zT`x@wDjFqElu@vElRiU?jU~v@~Hyu@zDkp@Rwq@[?kU?lUjTiAcKiFqu@uDgSmU?nU?oU?pUkFqU?rUbu@pEnv@iCtu@kGbr@qMno@tMvTpDae@rD}w@vDvr@kMvn@fG_FsUsk@bEmx@hH}q@mHdK_Iux@rE`w@vEbIxE}BkLcKtU?uU?vU?wU?xU?yU?zU?{U}x@yDmm@RsD]uDxDzx@jFay@wDjF}DoJ~@eu@fA|TsDkx@kMlA|U?}U?~U?_V?`V?aVaKzA?bV?cV?dV?eV?fViy@_Ads@gAi@gVqF{QjJ}Q{t@_R?jS{v@cRuSbLpDhVqS_Aty@hAuD_Phy@yDwAiVpDsE`DhVky@tDru@zDlJrEvDxT}ByEsQzE?jVkJ~D~x@jClo@kG_y@rMhv@xBtDkV?lV?mVtHpAfr@gHnx@kHzv@pHyy@zDlJsEvEnV?oVsTfKtDwKto@pViJqVys@gQzs@qOzq@sO{q@kI?rV?sVxTiHhr@nHjU{Dkr@sE_KwE?tVkCcLuIuVwy@`Ats@iArTeDbThDsq@yA?jDgThAxAcO`q@eO?eQ?vVlDwV?xV?yV?zV`z@lVbz@v@wH|Cif@qAat@gHdz@lH~q@qHe@{V?|V?}VfInEhKjHox@pH}y@kCfv@qM`y@xBvAnErA~V?_Wmz@aAxn@gAaU|QcT_RbUkSdJiMtn@kMlz@|D{u@rEvDwEdUuD_Q_PpUjGmo@`W?aW?bW?cW?dW?eWpJxFmQtEcCxE?fW?gW?hW|z@bAjo@hAnz@xAtq@hDoz@jDxx@\tDqDjt@vD~OmU{x@oU|x@yDlx@_Bau@wN}JiW?jW?kW?lWf{@{KwJtVxy@kMi{@cAyz@kHez@qHpBiAyOmW?nWvEoWgt@yD_x@tEu@{M?pVgz@fQlDpW?qW?rW?sW?tW?uW?vW?wW?xW?yWxUtEcCtVgy@zDeUgK?zWt{@lHa{@kG~y@sM_u@{B|{@mHqB{WkTbT{JdTvFdAm{@rDgu@~G?yHiS}H_w@zDeUsE_KhVtFlE_VnHm@|W?}W`VsDwSxDfSlEaVoHtF}D?~W?_X?`X?aX?bX?cXnEvT?dX?eXuk@aEtk@dE}HiAge@`Evk@cEiQiA`U`Ak{@yAhx@hDl{@fAxDwTfTqJck@sJbQfX?gX?hX?iXh|@pHaKjX?kX?lX?mXo|@aA}z@hAwD|M?nX?oX?pX?qX?rX?sXr|@qHrJmEoFjUsUvDax@{Dqr@~DxAtX?uX?vX?wX?xX?yXt|@bAj{@iAuTzXus@xLxQnEhBpF{w@vG|TkFpx@`Ejn@dMsI{XjP|X~UvEvIlL{EY?}X?~X?_Y?`Y?aY?bY?cYhUR~TdY?eY?fY?gYp{@yAjw@vSew@xShTzShw@|S?hY?iY?jY?kY?lYyx@lUnC`BvNbBpQzJpn@fMz|@cAeVrJ?mY?nYe@oY?pY?qY?rY?sYhCdL?uV?tYdCnEjBuY?vY?wYpt@uFoSxFv|@nE`VkFsx@mFqx@xDku@rErUjLas@hP?xYf|@tDzy@{DrElE{DuD~w@zDqTmE{DxHhu@{HvS_IjFlEcUtEnJxT}ByYoBiSai@yAne@kC?zY?{YaR|YiIzY~}@nC`O|YiO}Y?~Y?_Zz}@aCrF~QnC`Zj@lSeTaZnUmViUqAwz@hHcy@nHkVzTtx@xDlVsEiKjLnViPi|@~DoVvDw|@|D~p@nE|RfJyj@zI|PhJ?bZbRgNcKcZ?dZ?eZ?fZi@oFoBgZ{}@zQdx@}Q?hZnw@iZf~@mFr}@yDvU]{{@{Dx|@RuVwD}T~DtVR_|@eAxS|Egf@jZ?kZ?lZ?mZ?nZ?oZ?pZ?qZoCrZ?sZ?tZ?uZ^vZgCiO}{@|Bbv@nEj@`MeTwZsKxT?xZ?yZ?zZ?{ZyV_PlB|Z?}Z?~Z?_[kF`[cBa[r~@fAYbQqBdOiJvVw{@b[o@c[gCdI|i@fI}i@hI_j@jIwPrViv@aLjv@dL?tRwr@aPxr@cPzr@|Fbj@`Gon@eGlAd[?e[?f[g}@{SqD}Slt@WaJsN?g[?h[wDpVv{@gQ?pWzUrW{UtW|Ui[?j[?k[?l[?m[?n[?o[?p[?q[?r[zFaBwp@xNyp@s[?t[?u[j@v[lQw[?x[_s@xFmQgS?y[jQz[tFqEnFwEoCsJbQ{[?|[dK}[rVgSxIaOxq@zDgC~[?_\?`\?a\kJlE?b\{_AmEqCnFi~@}Dv}@~G`|@zHtS_Ix}@mEgVwDb`AnE``AyHa|@~Hwx@{DlUtEy}@yEpVc\?d\jEe\?f\?g\?h\?i\sBdAzQhV~Vg[?j\wKk\{Al\?m\?n\lFkTeBsHth@o\?p\?q\?r\hE^y`@s\?t\?u\?v\?w\n`A_@?s\o`Au\?x\?y\?z\?{\}Ks\p`Ax\q`AqGw_AbOyVxDcUgSeWxDrVtEnJwE{R|\?}\?~\bF_]?`]?bQev@}Q?a]c~@v@rAb]?c]d|@mEpKpMgv@sMy~@}BwAmLvl@oLh`AeAoWc]o@gKeDiKhQd]?jK?e]cJf]?g]?h]?i]lWyDlFnE`_AgAlWmUmKpUt`AuEqCj]?k]~_AwD}TlEnCzQlSl]?m]?n]vBo]qIp]?q]?r]by@cE|Hs]qC`E{Ht]Yu]^bKz`AnLtQpLxV|D`SRpWqM{z@yB_LqEmJ|K~`AhAtDv]lK_W_LlE|DiAfDw]?x]?y]?z]{`AfAuWxDg|@mEqB{]sC|]bw@}]eW_PsWzDyW{DlaAgAmWmU`aAyDyUuEmaAyDpm@nEmWyDyJhR?~]?_^?`^_L}D}IcK?a^?b^?c^wDcQxs@eOkKfQlDd^?e^?f^?g^?h^?i^bDj^?k^wf@tF}~@}Z~~@l^pEm^n_AeOkKqVgKpWzUn^dVfD~s@xAjx@fAxDo^zWzDc|@tE~KxEzTzE|y@hPpKnI{Sp^?l]tDsQjSuQkSwQwt@yQjBkD_n@{BYc[d}@eY?q^?r^?s^iDmGng@oGgPhVgVaE?cM?t^xDu^rAv^?w^|t@x^?y^k`AtH_XgDix@yApz@fAqNz^gaAoL?{^{A}Mvo@_Nwo@aNxo@cNyo@|^?}^?~^hV__@mbAhDp|@gAbSvLjm@xL}QzQ?`_@?a_@?b_@?c_@?d_@?e_@tCf_@?g_@?h_@?i_@?j_@~FnEpB`^i`Aj\wKk_@`GhAfXiDvv@hApAmKb_AeOkKl_@?d^pAiApaAkMdy@uUey@wU{TyU?m_@aLn_@||@yL?o_@?p_@?q_@?qLgBr_@qv@qO?s_@sKwEcIyEgUjVhJhVu@t_@?u_@xi@v_@?w_@?x_@?y_@?z_@|QxF|bAxA_bAgAwI{_@gcAyAnbAgAaV|_@?}_@?~_@{KwN}JzNzp@fI?|N?_`@fGxEtUgWtCrM_z@yBmT``@e`Af\f`Ah\qBa`@taAzDabAuEmu@hPqaA|DtC`Wb{@bWd{@dW?b`@eVc`@?d`@?e`@?f`@?g`@bJuL_cAnE~T}U_U_Vny@h`@?i`@?j`@?k`@?l`@?m`@?n`@eJyHiSo`@i@p`@er@vLrbAyLkXp_@?tPbLq`@?r`@?s`@?t`@?u`@s~@}E?v`@?w`@e@x`@?y`@?z`@cF{`@?|`@?}`@?~`@_S_a@?`a@wTaa@mv@lByNuK{k@pBqbAwLgDyLucAq_@qX~Umy@`VsCba@?ca@~DjDbX_a@?da@dTkSlFuTl}@vGj@ea@s_Ax[u_A{KwJyEhG}DzHtPeC{L?sU?fa@fXga@?ha@?ia@d_AeIvPgI~i@iI?ja@uXfAwRka@}VXgdAgA?la@uf@yD?ma@g_AbLgl@dL?lTjBna@qPoa@n{@nUeKpa@~U|KYqa@m~@aCtOzQtbAa_@gXc_@hXra@YhVcbAoInIsa@lj@sI{PuI?ta@?ua@?va@k}@wFrQxFg{@vEbItVhB{_@?wa@?xa@}aAeQ?qV~aAqWx{@sWy{@uW?i[_Wk[aWm[bWya@?za@xA{a@?|a@uKuEdaAdE}H}a@fL|A~k@~a@?_b@?`b@?ab@?bb@nIcb@?db@?eb@?fb@gBgb@?hb@wW`K?ib@?jb@h_AbPyr@zFqg@}Frl@aGbq@fGoX{DfKoVsTgUa~@_RbUkb@w`Aw@fq@fHyv@lHaUlb@zFuSkw@xSl_A|SiTmb@{W~DtdAqVgKhQ}Snb@?ob@nW`]?pb@?qb@?rb@?sb@?tb@?ub@?vb@?wb@?xb@?yb@?zb@fYvSf}@ySgw@{Sm_AnEdGeQrz@gQ?wVtz@yVdF{b@?|b@pWxO?}b@?~b@?_c@oDsU?`c@q}@vF}v@tEh{@yEacAhPxKtMmIac@?bc@nCtG?cc@?dc@zXhA`LdQiJfQxaAe^}Wg^aGec@hLfc@?gc@?hc@?ic@?jc@?kc@?lc@?mc@?nc@?oc@?pc@reAeOwaAgQ?qc@?rc@`bA{DkNsc@?tc@i@yD{eAeQgKuc@?vc@?wc@n|@aEcVeErTxc@?yc@?zc@sD{c@|DdB?|c@?}c@`W~c@?_d@zK`d@?ad@?bd@?cd@?dd@iWed@?fd@?gd@?hd@~bAvLrXnE~|@lFg~@yDzu@nEmEid@?jd@ceA|DeYfUtT|Q_{@jS?kb@|aA~Z?l^cSkd@rHld@?md@?nd@?od@vApd@eFjNcBqd@?rd@bLo\l`Aq\cLxN?sd@?td@?ud@?vd@?wd@?xd@}XpIov@sI{Pyd@mXzd@c`AzHa`AxD_aAnUeKpU|DnExXlE|eA|DvClElLmFp~@zDmcAvE?{d@?|d@hUtP~A}d@o@rR?hVtK~d@z~@yEbGjVdG_e@lK`e@qFbVqy@dVsy@fV?ae@?be@~cAxLhIce@nCfEoe@hEpe@jEre@yDsaAvEyTfWuFhW|Vde@qSfUtTlb@^hK?_QxX~DpFee@?fe@rDqCpc@sCtHge@?he@?ie@s{@lMtCje@?ke@vC}DpGle@u{@zDlJqa@wDme@?ne@|FrEzR|K~AnEs`AyD~AiAkeAvVlDhQ{s@sOiz@rV?oe@?pe@?qe@sCtJ?fX?re@xFiXkGwSlw@zSh}@}SrYjd@vYyNrw@|A?nTtw@pTuw@rTww@tTeeAx@|q@iHkz@oHxCrCxw@w@lIrA_PnQmFwGpY}c@afA_d@zKse@oG{Hw}@xDaaAvEpShVnLmEyEte@aLq^gbAs^cXnGfPpGog@rGuYl^bTue@?ve@?we@?xe@nEye@?ze@?{e@tKiYnG|e@kI}e@yE~e@kA_f@pBnEjB{@ks@aArKnEbXlDoFlQvgA|@ss@aArKiA}X`f@cLaf@?bf@?cf@ygA}@gb@`AhYfQlDqc@j@df@~X{JqJ{d@raAnUwYyD|YwExJkLtIef@o@hKpKlGifAnD?ff@ogAr^hbAyDiBqL|~@kMyq@pO}S_S_TaShGmG?gf@xDhf@j}@cEoCmY?if@lKe_@hLjf@gZgQo_Akf@?lf@`hAs^hStPbVcM?mf@jT}a@uDcM?nf@?of@?pf@sGmTgx@pTggAsToT}S{dAbCsH~a@gLqf@l~@fZ~YR~VtNpp@rf@?sf@tYgUiLjSkAtf@cWyDyHuf@}_AnEf@hVsIvf@?wf@e@xf@?yf@?zf@_V{f@?|f@?}f@`Gz^|gA~@jy@gA_AqLyKe[?~f@uGpW?_g@?`g@}RkP?ag@?bg@bFcg@xCdg@?eg@obA~M?fg@?gg@?hg@?ig@}FmIpAdBjKjg@tGpAcz@hHe~@oH{KbB}gAxFsdAwEidAcLow@nEvCqE|KjLj@kg@fTpSaw@rS?lg@vGqWbYtW|UvW?mg@?ng@?og@?pg@?qg@fGjLsQlL?dRx`AnEqV|AcPfElEzY`~@rg@?sg@{o@lN?cU?tg@?ug@{IcKjk@eKqLsEiKtV~FhK?vg@lZyDpB`QjgAsCiUwg@jVwYvAxg@v_AcEhGqE`IqN?yg@eQ}X?zg@?{g@?|g@?}g@`G~g@qF`_@ubAb_@?_h@?`h@?ah@ddAfIe_AiI`j@kI?uOngAnEqCle@dZxTfUkLdIbh@_Cch@?dh@jXeh@?fh@?gh@?hh@?ih@?jh@?kh@fGtVoD|LgAvg@eC|G?lh@gCmh@?nh@?oh@?ph@?qh@u@rh@mXrO?sh@?th@?uh@u`Avh@?wh@?xh@haArE{y@yEbGyh@mgA|H}u@yDsYqEzhAgPhJxY?zh@pAnEmiArEmVgPliAdEviAyDhZtV{YkC?gErO_Xj|@aX?{h@?|h@~{@cTmw@eTicAsMy`A]ahAlMpF}h@?~h@pZrWp_AuWvdAj[`Wl[?_i@giAzD`ExTwZzE?bh@?`i@_fAbEzIai@bObi@?ci@iBaLpLfG_Z~D{LtM_Fdi@tEbi@?ei@o~@cR_Fwf@tZiK?fi@gBgi@jjAk[aWhi@?ii@?ji@?ki@?li@jbAyD{iAdi@wGag@pgAoGgPqGvKmi@?ni@qIoi@?pi@xLf[geA}SdgAxShT`TkAqi@?ri@rjAxBqR{b@thAqAd~@iHigApHcdAha@?si@eBti@yjAyBpBdB`C`^{AzO?ui@?vi@?wi@?xi@?yi@?zi@qjARrD{i@sZmN{Z}Hb|@{D}bAlMex@|Tfx@|i@~Eid@?}i@dSvP?~i@p@uFoS{JqJwEiG_j@?`j@~eAaj@nGbj@?cj@?dj@?ej@?fj@?gj@?hj@?ij@?jj@sv@kj@?aj@fjAgErOiEqe@kEoDlj@?mj@?nj@hdAoFsOma@gAiKnYfQsz@h^?oj@?pj@?qj@pGnF_`A~DjhA|AegAoTnTqTvw@sTeBrj@?sj@?tj@?uj@`{@jM~Jo^vAef@?pd@dYvE`KyEzTbh@`Uw@?vj@?wj@oCxj@?yj@pcAf`@?zj@e@{j@?|j@rcAvLgYRs|@kX?}j@i[hEvfAkEmkAwDq~@Rx_A_\y_Aa\pu@mE{FdZtcAwLsXo_@eGq_@aXtQut@vQo@jTo[iEgkAyDqV|QoG~j@h[_k@?`k@?ak@?bk@?ck@?dk@wjAySieA|SbDek@?fk@?gk@vYsd@jfAud@lfAwd@?hk@wAik@?jk@uKkk@?lk@bjArEgA_Q}fAzDqTmk@kChVqGnk@?ok@dGfOcfAwLsXnExdA|a@pA`Qe@pk@?qk@?rk@?sk@?iQ|s@kQyhArEvDxEgZtk@p[xDlVjTxAuk@?vk@ikAgQkU~R~S`S?wk@dDxk@vKgJ}r@bZ?yk@?zk@?{k@?|k@ykAwL{fA{Dmg@nGfPz\gYtPnfAoUo{@zD`E}k@wgAxBflA{DfW|K}K`@zLtE`XfWuF~k@sB_l@}E`l@gFal@{Lbl@?cl@dLyEgUbh@uHdl@rYel@fLl]caAfl@eZp_@j@nN~AmKrkAkMtPgl@?hl@?il@?jl@?kl@~Lll@j@ml@hhAmf@hiArG?nl@ly@~U?ol@ihArGqlApUejAzD`EhVbEiK?d]|kAxLxQo_@~kAqLakA~Hd`A|D~YtPamA{DtlA|Doi@mElBpl@?ql@?rl@?sl@?tl@?ul@|cAmB?uK}cAqBjBvl@yCd^yaAf^?wl@|Wxl@?yl@?zl@{[{l@sD{b@~fAgQkUrOvRtOrC|l@kG}l@?~l@?_m@ujAzD|ZsE?gSpA}d@i@`m@_Cam@?bm@_Jcm@hENo`@Pq`@Rj@dm@u[yD~Eem@sY}DydAeEwcAr`@?fm@~LzBpmA{DoaAgm@kAhm@xCim@?jm@?km@?lm@?mm@?nm@?om@xApm@?qm@lQzKr[sEb\zDsGzN?rm@?sm@|Lhi@?tm@?um@?vm@?wm@?xm@q[ym@?zm@?{m@?|m@tC}m@?~m@cGpLyIuf@{mAtEfZbf@?_n@?`n@?an@?bn@?cn@?dn@|Wen@emA|DqUsE_ZlEjKdL?fn@c[yS?gn@?hn@?in@?jn@?kn@bVbEwTln@sDmn@{|@vLrXo_@nAmS?aZ?nn@{p@on@hIpn@?qn@?rn@?sn@?tn@uGqc@xlAkLdG{`@?un@?vn@?wn@`Yxn@?yn@aXjWwUzn@?{n@?|n@?}n@?~n@lhAyAsE~a@?_o@?`o@y[|D?mGdXz\kjA{DfWuEaIxTwZbh@yCwVaGao@c\bWpXeW?bo@?co@i@zMf[fGkJb\eBdo@?eo@ylAlMnGp^dbAm]imAuKjmAuCpDgK?uTwAfo@?go@smA~DxRho@?io@bKjo@uGhQheAob@}nAqO?~R~Sko@?lo@}ZeEhkAyDyHmo@e@no@n}@qY?oo@?po@bMe^}Wqo@?ro@?so@}iAto@xZuo@?vo@nGqIpdAtInj@vI?wo@qj@yIpI|I}Pxo@tiAgIfdAjIrCyo@alA}Qvy@jS?zo@?{o@lC|o@}lAsGpU}o@dU~o@eZp`@yWz[gnAcEsbA`_@qiAc_@hXe_@xhAdLjdAnEsnA|D`StPkaAmEdEqEnFpQ?_p@?`p@gWrGioAnE_lAjEwfAzDu}@nEzCqEfCrQ|[_Io@qNnZ|QmLkb@hEa@{`@c@}`@e@_a@g@aa@i@ba@ap@?bp@?cp@}Kdp@?ep@?fp@?gp@?hp@?ip@~Ju^?jp@scAzHtSkp@?lp@{Dmp@?np@hDop@?pp@dE}DzHqp@pRvT?u^?rp@xPsp@?tp@?up@tgAaAiEvp@?wp@?xp@t\lTeMiAdVyp@?zp@qhAeg@_\bm@_J{p@?|p@zCmGrnA{\{A}p@?~p@~FbKm@_q@mGp\m`Ar\ynAfGsjAei@o\`q@?aq@?bq@?cq@{Gqm@bdAuFg[xFwhAjL?yY?c\koAsG{oAnEz[uEncAiPnkAnTfgAqTpkAtT|mA{DtnAvE`KxZ?de@gTbQpCfn@tmA{B|nAdq@tJeq@cBfq@nSgq@xiAhq@yiAhLll@zJjYvEpShP~GqE|KxEbGbh@jpA|DvFem@wDiq@cFjq@ofAyEfpAc\?kq@}[tE~KtVeEfm@xcAy`@?lq@?mq@meA|b@{\vE`KtVvT|C_PmFhe@aE`fAiA~JdX~G}DyGia@|D`QkAnq@~DfDvHjOuq@lOpG`EbMoq@pTqd@?pq@k\rOomAkIsFqq@?rq@aHuEneAkLwiAsq@iMtq@cBuq@kSvq@_HxDdZwEzpArGjEwq@?xq@?yq@?zq@d\{NedAhIf_AkIsFoe@?{q@rpArEmVkLj\RtfAyLa]vEukAyEkLiPtVbQseAgc@teAic@veAkc@xeAmc@lYoc@noAb@|`@d@~`@f@`a@h@?|q@?}q@?~q@?_r@?`r@?ar@?br@?cr@?dr@?er@yEfr@?gr@?hr@?ir@Yjr@lAkr@sZlr@cmAyLkXq_@uK|K{cA`a@ySuPvx@mr@?nr@rDor@~WsFzcAuFyChQjZ`SplAxLijAfGfCmGlFpr@?qr@dhAnGsLqGoM{d@yGrr@cLsr@nKkWq{@uFnAtr@?ur@mM}DmpA|B{nAgo@~hAbCbBvr@?wr@ypA~D_kAnD?xr@|[}[zLgSr[gKcv@iRfoAdEvAyr@_Mzr@f@bQwL|f@?{r@kA|r@iGaWc{@cWe{@eW?}r@}YgUjJ~r@?_s@uDt]cG`s@zC}DrgAxAsRkd@rL{[{VtZ?k\blAzScZmb@?as@e]~DiiAv@yw@qArNpF?bs@?cs@?ds@hYes@?fs@u@gs@?hs@?mU?is@sK{d@nAjs@h]nUwY~PgMzScZnE_nA_n@?ks@?ls@hLcPi_A}FaeAbGgM`TeqAjLslAyBYpr@oeAxBs\p_@lXms@umA|DsrA{SqDmb@hGlEiqAwEoVns@xjAri@qMos@?ps@?qs@?rs@?ss@?ts@Yus@cHhUjqAhc@ueAjc@weAlc@yeAnc@zeApc@{Ane@p\rI|SuI?vs@?ws@?xs@?ys@vKzs@vV{s@mlAzIj~@dP?|s@~gAoUrlA{D}\wExJyTjL}s@?~s@?_t@?`t@?at@yKgY?bt@?ct@~ZsWudAvW|hAdt@?et@?ft@?gt@yQht@}oAgN?it@?jt@?kt@z\vM?gT?iZxoA~DznAvKmZdMmoArErUtVghAnYxFlt@{qA|d@zDmt@?nt@ksApUmOuf@loAkEiDus@dsAic@kqAlc@fsAoc@mYot@?pt@urAzF`eA~F|r@cGf]eE_rAyA|}@zY_iAqt@?rt@opAuFdpA{Kf\}DnhAzD`EwExsAyDb]nEk@st@uqAqOl\tt@i@ut@bEd]gAtVtZvg@m]iAhVuX?vt@jrAyA?wt@?xt@jsA{Izj@bZ?yt@}FnJhsAsIqdAvIaoAxIrj@zI|P|IarARgtAhJk~@yt@zDzt@oC{t@btAzDzS|t@?}t@?~t@?_u@?`u@?au@xf@uF_oAf^zaAh^pA~g@goAa_@mdAd_@}qA}BmrAR|FqQtFbu@u@cu@vkAvj@{kA`\z_AuF~\du@n\zD?mo@~GlE`mAyDlAeu@?fu@?gu@?hu@`ZyDvBiu@?ju@pbA~^?ku@jM`B?~a@gL`b@|dAbb@nIp^{[d]rWe]yCqc@wbAg_@xbAi_@ybAuFn]tEuXlu@?mu@rsApBm@nu@pMsEiKxEpfAhPktA{Dt}@mEjXvU?ou@~lA}U_Uol@nAo]?pu@?qu@?ru@wXtEcHoGhlAxLlLsu@fH]oYyc@?tu@p@uu@{Gvu@vBwu@wtAku@vsAnt@jLxu@?yu@?zu@?{u@xT|u@?}u@nPnVfz@fUoMwEcIfWuF~u@?_v@}rA|S~D`v@?av@tMvr@Yyg@iVvYfL|QmLkSzFbv@kdA|HeSkp@?cv@oFdv@?ev@stAzDo]xEhcAhW?fv@?o^tMfE?gv@rHaAiEhv@?iv@l[xTljAjVt[sE`Dkk@?jv@~z@}Qr\kv@ziA}Lp@lv@uVaEibAmv@}]tE~KjLx~@sZwKuZsMtVmMqEmJkk@pnAkW?zn@qnAnv@|qAjW?bUjuAuE~tA|DxDov@?pv@wrAyD|iAnh@~iAph@?uo@?qv@llArv@y|@sv@aH|KvBaM?tv@nqAc@ooAf@pqAuv@?vv@?ap@roAcp@xIwv@?xv@~jAyv@~mA~m@upAyYgpAd\ysAjc@esAmc@u[mUmKzv@gH}DgB{v@?|v@?}v@?~v@jL_w@?`w@~DjX?aw@}dAbw@xkA|j@gqAfIuiAjIrCqq@agAqe@vMou@z]mb@sBcw@uuAkc@lqAnc@fDdw@?ew@?fw@?gw@?hw@xOuCvXgMj@iw@irA~Dt\tRbLuHztAqB{rAq_@dqAyDhZxE}tAiP`Ljw@wGlP?kw@r]bZvVhN~uARb\lw@wGmw@?nw@?ow@?pw@w\}Qr\kb@wWpu@?qw@?rw@|\oTokArThgA}S?mb@sBsw@cHnGqsARvuA~D{Zo`@luArEkCnEnAtw@aGoj@kkAqj@_AuCtoAuw@wLvw@?ww@{sA{F{r@_G|m@dGzZhRuaA_^?xw@o@yg@f@pp@^bQrMqEcjAhPduA{DpAyw@wVnEatA{Dz]}ShKzw@?{w@?nVf@op@x\rQ`C|Wd\rm@}mAk[cY|w@?}w@?~w@?_x@?`x@avAzDwMxEhtAtIpv@}R_gAtOrCax@^iRruAvX?sv@xLbx@?cx@YvZm@qp@hHdx@e\uEgJex@gCfx@?gx@?hx@?ix@vBjs@lmAyl@?jx@pYkx@?lx@?mx@?nx@wqAyL_dAqLqGnEdSjU?mr@?ox@?px@?qx@sWuf@i@lv@_Crx@?sx@?tx@cGux@lrA{SvW`_@hoAd_@?vx@m@wx@gMgn@cnAin@enAkn@u\rEajAyE{WlE}MuIoj@xx@boAzIjtA}I?xo@hFqLovA|D`nAtEnJyx@ciAdKrIfKkbAw^lbAy^uHzx@?{x@|]yEvvA{Dp^|DqUgK|`AiKbmAjK?|x@rLuJ?}x@?~x@aHfGqfAcVry@_y@onAyn@prA`y@i^vEqpAiPa^}Q?ay@?by@vEcy@?dy@dH{r@o@u]jcAg\g`Aey@b[fy@?gy@?hy@oD}Gdp@aArK`^wAiy@l[wExJex@a^jy@vMwU{Tky@i@cEjEly@?my@?ny@?oy@kApy@pwAh\_Cno@?`q@apAqy@?ry@aPsy@?p`@oBty@?uy@?vy@?wy@?xy@oDsRkvA|Fj_AaGxrAzBevApTkhAtThvAoGjW{\zwA}FvrAcG~MlEutAzDo]jL{Iyy@jVzy@?{y@dH}f@fuAo^{tAtEkuAgPaJ|y@?}y@?~y@?_z@o@vZjvAww@nrAw@lHge@?`z@_Aaz@wpApFin@aEcV}a@zrAyB~oAbz@a]{d@hwAaR?x^fqAsG{Lcz@?dz@?ez@oo@zM|Rfz@twAgz@fy@zU?hz@nAiz@|v@wFrdA{KwJxEeuAyZkGjz@qFkz@b^uClMlz@?mz@eBnz@hxAx^{uAlc@zsApc@j^o_@eGms@oBoz@rFpz@?qz@?rz@tGmLqWsz@msAtWq_Aj[?tz@?uz@n[}j@vFid@?vz@hjAdTs^wz@pMgKeDvg@?xz@ssAsEyIlw@tWyz@hCzz@cMhQxvAkIhqApe@~Zg^aG{z@gEqEhRgSkYcc@ftAfDvH|z@?}z@?~z@?_{@xC`{@fxAx@vf@pF}|@wGfKdHgQge@muAvE~wAmEawA|SfDoKwk@qKxk@fAzvAsv@{Ga{@vhA{KnxAfWxfAyZdEmGdXpGqgAsG{Fb{@?c{@?d{@h\l]xxAtEk\~R~]bMw]kk@kCxg@`HnEvMe{@ptAa\cXhUbhAqOl\_SadAyK?w[t_AyJeMmKu^zBpZf{@iHwE~]g{@_xA{DlUgSnLb\rvAsm@|Lm[bWh{@oOtCvW{AkIi{@?j{@?k{@?l{@zlAuFn]m{@zxArEdjAhPxSn{@sMxEbGhVlMo{@?p{@hyAk[svA}w@tvAq{@?r{@?s{@_vAnE|FqL`]kd@ffAmd@gfAt{@mGu{@?v{@_Dw{@sGx{@?y{@g\xV?z{@dl@hLppAwFmxAtEunAyZcwAhn@dnAjn@fnA|SouAzDxyA{De[ui@|jAwi@}jA{{@fhAdEgHqE|KtVtpAeO?|{@e@}{@wuAeO?jq@dLkLfM~{@{A_|@?`|@r]dP?a|@uj@`JoIb|@pxAvCvnAcWfrAbo@lnAzEltA}t@?c|@?d|@r^dEzdAkq@sCe|@tRf|@|^uFvCmGqt@qa@zClEoyAsE|tAyEvpAd\yKg|@t~@lZzVh|@tJ|Y_~@{Y_Org@?i|@?j|@?k|@?l|@?m|@?n|@vyAy{@~Co|@?p|@?q|@nKr|@cyAs|@?t|@?u|@?v|@sBeM}EvGs^uy@ywAw|@?x|@iHy|@eCz|@?{|@?||@?}|@qZgPuLdi@`zARyX~|@?_}@?`}@?a}@dwAsE_KxTfUyYtuAb}@_Rc}@n[d}@?e}@?f}@_}@}X`}@_Yb}@aYc}@cYlgAk[?~c@qYhi@?g}@~M}DrMmG}M|R`jAsOaZsVnLbQiH{d@?yr@qxAy^cxAh}@?i}@zJ{QrFj}@?k}@nwAdy@hAxz@bx@uAsp@xAcx@}AkRfEufAiE`lAzDwVyDnCl}@d]nElBm}@?n}@|MrQgk@}Jhk@_KqIo}@ntAb_@vbAd_@?p}@cMd^?q}@glArQfKr}@kv@s}@?t}@}pAsOaZu}@tXv}@x]yLx^nEf\qEspAyEi\w}@u@x}@aSy}@fVz}@iW{}@g]bWpXb`@jMjD__@yEb]o_@rrAc^?xl@mmA|}@?}}@zCb\gwAeK{zAvA_q@cOqz@eQleAd^nNrW{U~}@guAkC}}@{Yb_@qt@~sAnD?fq@t]aBwNhLqQ{JekAxEtUhWk@xz@|pAaE?_~@fMlTfyA{BklArGeI`~@clAtd@kfAvd@mfAa~@j@b~@bSc~@?d~@?e~@tLyDh^p_@lXqLrLfXocAe`@qcAf~@yGsi@iGg~@?h~@?i~@yZ}RyxAj~@~zA~Jik@`K?k~@c^yk@nlA{k@pBwx@uD_~@r^nEo@hVeEl~@?m~@~XxFrM}D}Zs]pBmK~MqEb{AkL`qA`i@bzA~t@?n~@?o~@?p~@?q~@?r~@?s~@`ZnEeLkR~u@mR`v@oR?t~@?u~@brAyDyU|KaqAnD?v~@?w~@?x~@hMnS?y~@j^nEpvA|Dn^uEg]jm@wmAlm@ymAnm@?z~@kmA{~@?|~@n{AzDk{A|Bo^yEoC}~@y]yu@auA~~@g{AzY}sArt@uGd^f{AsW?~}@{wA{Bj@__Ad|A{Yb_@sg@_tAvFzN`_A}^xEoxAzZi\hKfiAst@d_@~D?a_A~AhVwoAqa@uoA{HvSkp@t^qTipA}S`yA}S`N~Rv[b_ApeAc_A?d_A?e_A?f_Ak^mr@xKg_A?h_A_yAwEnXkLyqAoGvjArGb|A}BpFrU_Ni_AwzA|d@gFj_A?k_A?l_A?m_A?n_AdiAo_AxAp_A?q_AbNlE_H_Pd[eHvQr_A_Mpr@?s_AYt_AuSef@fmAql@gmAsl@hmAul@hnAwL}kAp_@?u_AlAv_AbqAvQ?vq@zJbVrfAw_AvAx_AszA~c@qYm[?`d@bfAy_A?z_A?{_AhB|_AivAR{D}_A?ln@?~_AdeA|QgsA_`A?``AdNjL?yTnzAoQ|\a`AnKb`A`_@a|@_zAaJ?b|@i@nEyYmk@`^|N?c`AnWpb@j@d`AjxAdz@kxAtM?yM~^|Dn^kk@nZlb@vBiz@v^{JmNe^?e`A?f`A?g`A?h`A?i`A?j`ArIk`A{Eye@c_@e}@e{A~L|IlS?wu@?l`AeyAx[?m`AzzA|Qk|A_S_Tn`AwMtVuMo`A`Ywa@?p`AkVq`A?su@}wA~F|sAdGxKbl@?r`A?s`AdElEtMzQldAb_@_{Ae_@{yArEezAtE`XyEkLhVb}A_GlvAeG~FbQs{ArEvDyr@fH{b@e^hRf^t`AlsAbt@?u`ArAv`A}Vw`AwAx`A?y`A?z`A?{`A{MnEm@`^nuA|`ArwA~G_r@aAdJ}`AmMlEnU~`A?_aA?`aA?aaA?baAxqAs_A?caAuW_Ps_@}DkwAdVe]lEuZzg@vZ|g@?daA`^gIdoAkIsFsVx|AjWwUlWmzAhP}YeaA?faAvCgaAhFhUrJbQq|AfHfeAmH?haAkcAey@oYiaA?jaAdzAnGzqArGmjAcEjMzQd}Ac_@h}A`Gk_AfGrAkaA?laAk]maAc\jm@`|AnaAeN]q\a]lC}WpFoaA?paAbRqaAlxAraAkYuGhMsaA?taAq^uaA_^d@oqAg@qoAvaAzFwaA?xaA?yaA?zaArzAzg@vZ{aA`tA~DqX|aA?}aA?~aA?_bAp}A~DnvAgKp[_Pt}AgHxz@mHt^`bAuxAabA?bbAzZsEh~@gPz|Ac`A_Ht]c}AmEpDm{@u|A_d@?hi@?cbA?dbAxtAjKjwAe]oEge@sxAuWz{@wW}UyWxUaz@yGebApCzz@?c[zyAeEe}AsE`~AhPi}AsEd~AiP{bAtZ?k_@wsAyDuEmGd]o_@eGtPv_@tE{]wY{AfbAf_@gbA?hbA?ibAq\~Q`dAcRp_@nEe@jbA~DkbAaHlbAg|AyEu@mbA?nbA~vAobAmGpbA?qbAxFrbA?sbAeEtbAy|A_Jvj@aJ_NeTl^vIpj@xIitA{Itj@}IhHubA?vbAa|A{Dv]nEy{AlR_v@nRav@t~@?wbA?xbA?ybA?zbAjH{bAiyAaAiEi{@kyAk{@myAjl@dEhVp@|bAswAxE~dAhb@pMuTi@bQj|A|H?o`@cNvg@yoAbA?}bAcG~bAczAvFo^yYo[_XgjAbXo|ApGx_@i[_Wtz@rRrLu_@paAbvA|p@iBrRn_@}DdNxEh|A{Zt~A`Xk|@bX?_cAdF|b@{A`cAf_@qX?acAw]vEyTyE`Msq@~}AhHuhApHiHpQjoA`p@gWb}@wMjL}hAdR~rAmEw~AyEq}AmEf|AnC?rg@`iAnD?kNbKtg@vFeM~Awx@pyAl[zK|w@g^~w@uvA`x@YnEozAtEc~AtEg}AkLdIbcAs\q_@fZccA?dcA?ecA?fcA?gcApAqa@pC~{@e^sEhuAlk@eBhcAq[uQebAicAp\aw@?jcA?kcA?lcAdLgWknArc@sJ~j@~WmcA?ncA?ocAsGiWizAuFhHpcAxVz[}Myd@vzAtOrCu}@piAa_@gX_h@siAqcA~^rcArxAmc@mqApc@?ot@m\iAf]bQr`AscA?tcA?ucA?vcA?wcA?xcA?ycA?zcA?{cA?|cA_`@tcAm_BvcAo_BxcAq_BzcA?}cA?~cA?_dAs_BucAn_BwcAp_BycA?`dA_`@adA?bdA?cdA?ddA?edA?fdA?gdA?hdA?idA``@vcAt_BycAr_B}cAu_BjdA?kdA?ldAv_BbdAw_BddAx_BfdA``@mdA?ndAoXuf@m~A`JoIodAfzAkZu~@mZ?h|@u}Akm@grA|Q~~AnE__@fWanAmEeL~E?pdA?qdAg~AzDtCrdA?sdApItdA?udA?vdA?wdA?xdA?ydA?zdA?{dA?|dA`]gD?}dA{}A{g@oiA~dA?_eAcpAyK?`eA|zAnEi|ARbMo@bY~}@qZlL{\{d@f@aeAw[beA{FceA?deA?eeA|^yDzDfeA__Brg@?geA?heA?ieA?jeA?keA?leA?meA?neAbuA}u@nPoeA}]gSxCpeAh[wc@aJqeAi[reA|Mqa@?seAnNteA?ueA?veA?weA?xeA?yeAoMxThCx_A?zeAjzAt|@?{eAh_@ms@o_@|eA?}eA||Ae`A}|Ag`A~|Ai`A_}AeK?eaAeN|b@hH~eAw|AvGqGrQc_@_fAj@`fA?afA?bfA?cfAyCdfA?efA?ffA?gfAv^xFhBhfAvwA`q@wwAry@xwAp`@vGifA_MnEeLjZ?jfA?kfA?lfA?mfAisAfNs~A}e@qtAnfAuLwf@t[gKeDtV_AgKpDhRnAwu@?ofA~GmGo_@o@b`BuFdCok@l^vs@?pfAbyAtEq~AmRz{At~@mRqfA?rfA?sfA?tfA{|Ajq@ryA{Qj_@d`@wkAf~@y_@}a@puAoh@xZqh@p`B~]vaAxw@e~AtEc_BzE}LbcAh_@q_@qLhRf^qGeaAaE?t]vXwG}_@tEbxAhPs}@zh@pCnE}^jLnVxYkCef@qMufAquAuo@?vfA?wfAuzA}RvqAxfAo{Ah~@?yfA?zfAd[mLqW`s@{vAgx@|vAix@oR{fA?abAu@|fAj_BkIsF}fA?~fA?_gA?`gAnAaM?g{@a{ArE?qN~_BpdAn}AcaAm|AagA?bgA?cgAjHdgA?egA?fgA?ggAs}AfaAc`Bpp@?qa@g_@fKmhAuNd`@ph@d`BzD`QlEl{AsGjKrB|Mpp@qMks@trAlx@?hgAf~Ak_@y`Bhx@h~Ap_@c`@l`A`}Am`AcNtVi_BigA|DmKk`BjgA{Mmb@o}AkM`{AnE{hAkgAbgAhX?lgAc`@}^?mgAqCngAexA|k@hKogAgE}Dz_@pgAewA{Io~Axo@yuAaw@g_BqgA?rgA`_@eP~r@yJi{AxFepAkL`Ns_@?sgA?tgAgHlErDugAo@jr@tzAnGsLxw@?t`A|]tVp@vgAz_BaJuY_[~\z`@cFfO?wgAe`@uE_qAzEbbAiPu\qQp~A|Da_Bm[?|w@g^xgA?ygA``B{D}\xThAhV`cA}RjZzgA|~AiHzjAqH{G{gAj[|gA?}gA?~gA?_hAm\mKtK`hAa}@`Y?ahAf@nu@zW{Dp{AqOhz@tOrC}fA{`B_gA`TbhA?chA?dhA?ehAsBem@_Xkd@syAnd@?fhAdNtVetAvt@uMrO~pArVe@ghAk_Bb_@riA`h@?hhAu~Aj[?ihA?jhAo\pYo}@oo@?khA}`BsE`vAqLu@xPaSzPps@|PbEfi@j_@gX~LuP`t@lhArAmhAlMaq@?qy@iNuEgJkLlZnhAb`@i|@gzAk|@?ohA?phA?qhA?rhAqqAnDh{AuFu]vEcu@lLu@shAk~Ac^?en@w\thA~`BuhAy_@iAvGvhA?whAc|AkLdIjVpL{c@saBvE}[gSc^fN_JxhAaQmz@_DyhA?ti@v`Aa]u_@zhA?{hA?|hA?}hA?~hA?_iA?`iA?aiAx`BnLtQ`s@r~Ao`@mZt^qkAsj@j[biA?ciA?diAttAfu@s]hu@tWk]oaBeiA?fiAe@giA?hiAy~AyP?y}@fVacAz~AwEn|AzE?iiA~_@`j@?jiA?kiAxaBliA?miA?niAaLfYxCoiA?piAl_Bnc@j]ot@yaBoL?`s@eM}a@kaB|D_|AvE{~AkL~aBqEnFxT{~@yZ?qiAs[fm@yXdi@m_@v~@}{AriA}}AkMr|AxLdmAp_@gElEw`BqOdyAsiA?tiA|_@lbAz}Ae@poAh@?uiAsoAip@?`m@|ZhReEviAn_@qEt{AzEt_@{AjyAj{@lyAl{@nyAvFe@wiA?xiA?yiAs[hLh`@qy@?ziA?{iAmEdAfQ|iA?}iA_sAps@`sArs@asAts@t]~a@gL~iA?`f@_Agf@yC_jAxA`jAcbB{fA`Jlw@`bBlMiuAt]{KajA{Ssa@`oAyd@qrAmUmKbjAfGgPbwAa_@otAcjAu@djA?ejA?fjAnpAnD?uq@cqAvGhEgjA?hjA?ijAp`@QdvA~QdTkb@eaBmEmGjjA}FkjA^t_A~AdBz[kk@`aBrQeCljAhBmjA?njAp|Ak_A?ojAh\|QnDay@xLpjAlAqjA__AnD?rjAsCsjAm}@hXq|@tjAdKujAwvAyE?vjAzLaz@|}ARdCus@}~AnErtAmE_bBrEvD{d@ccAu_@dcAw_@ecAy_@fcAyJg`@k[cYn[iVwjAvCrcA?xjAv~A~DoByjAtqAtFe|A|Bg\h^jkApj@y}AtaAoBzjAlbBuFi`@xTpzA{jAeE|jA?}jA?~jAy]_kA?`kA?akAq{Azk@olA|k@tGge@pHbkAm]}a@taBfq@pbBckA?dkA?ekAqCfkAiBqN_NgkAmnAun@nnAwn@uZ~XmaBhkAl`Baq@raBry@m`Bp_@hMikAzaBfiAe[{Ot_@bVt|AjkA?kkAfYlkAzfAuFu]|K`C_q@k[yr@ckA}i@g`Bo@?teAh`BveAi`BmkA?nkA?okA?pkA?qkAgEmGv_@rkAd_@lEwaBgNaTskA?tkAaxAcEbN~D|_BgWuUyZ?ukAoFvkApGj]tIwkAkrAsZuM~Rv[aSjHxkAxbBhWqbB_Y?ykAinAzkAu^ll@|lAcEzC{kAdDhLwyAxFqB|kA^zL{_@}kA?~kAbaB~Dj`BtVjbBhVf@vZvU_lAi@uFdH`lAvBmS?saAdkAvFcvAalAiaBlEjUz[v`BgPzSblA?clAt`B~]s`Bbu@j\tP_eAdlAgFelAobBvF|yA{`@ycA}`@mtAvFjY|KtXflAgE{kAYhKb[i[wdAglA?hlA?ilAs]lv@ohAyf@oBjlAnbBk^{aAuFi`@wE~yAklA?llAqwAan@?dt@osAft@?mlAuwA_i@wLnlA?olA?plA?qlA?rlAtyAv{@wXgSe`@|KoGslAiNkk@}_BnElLtlAu{An~@v{Ap~@w{Ar~@x{AhLdaB{Ky[qEb^gKeDzLabBmEk^ulAx}AvGnYvlA?wlAw[xlA?ylA~bBwGm_@uq@sBid@?el@gaBeOaq@wgAxgAzlA?{lA?|lA{J}lAdYz^?~lA}_@gSvG_g@iN|KebBoIodArI|Syd@fbBnUeKbjAs_@qEnFhVi~AuEaIhVgHmGy^qGhC~{@^yg@~_@k^?mcAh_BocAz`BabAsU_mAgAst@`L`mAxuAamA?bmA?cmA_HcM?dmAvaBwEnXyT|FemAyyA|D_DfmA?gmAz_@wIcaB|I}P~I?hmA?imA?jmAg`@tz@qLgKvxAst@u@xKzmAyJ}bBtEeN{b@l@kmAuLlmA?mmAw_@ci@?nmA?omA_\pmAq^~QmSqmA_^rmA?smA?tmA?umAh`@bq@bpAuFb`@geA?vmAaz@~`Al}A`aAm}AbaA_uA~U_mAcEiQ}a@i^bKlaBjHzz@qHnAiu@vtAwmAtG|CojAei@{DxmA?ymAyYmEjHrTfvAnEnjA}C?bi@iMzmA?{mAkG|mAd_BdcAe_BfcAi@}mAmTvMk]hTo`BkZ{_BnZwbBR|{AzD`xAgP~xApAzw@bs@orAds@gxAmFxpAbEe\|KytArc@kT~mA?_nA?`nA?anAl|Af_A?bnAkFcnA?dnArbBvFsbBteAtbBweA?mkAubBokAvbBqkAyZhs@h]is@a_@jVccBlZzVnZcN_QgAzLx~AaXl|@enAbJwv@suAyi@?fnAn\ma@bcBol@bbBrE?hR?gnA|_@uEhaBjVfHhnAd{AkLzbBinA?jnAr}AiPhzAaAzoAknAa_@bh@?sq@usAhXx_@vWnsAet@psAgt@ecBgKiwAd]rW|x@iGlnA?mnA?nnAm{Aud@dlAa~@lBonAyDmr@?pnAq`BnGsL`^~Esw@cMdfA?qnA|wApGdbBfGf}AuEcCgP`cBvEelAlk@{FrnA?snAdcBmZv~@oZiMtnAcBrjAeJunA?vnAuaBwnAdHxnA?ynA`NrO?znA{bBj[|L_i@|aBy}@}aByJacB|KkzAvy@?w|@?{nAc{AcWazA|nAjaB|w@?}nA?~nApaBtEulAgW?~u@|V_oAoG`oA`Hok@fJtC{xAgD?|z@|xA~z@u@aoA?boA?coAfIwFkbBRa~AuFfMdoAaaB~^?eoA{Ygv@n~@foAsCgoA?hoA?ioAc[joAbEbQcuAwr@s|AnD`_BlNaiAdUfcBwW}UkoAcHqLbkA}T`\OibBRgcBP`\loA?moAhcBQicBRgbBhjAhbBP?noA</div>
<div id="globalStacks" style="display:none"></div>
<div id="methods" style="display:none">@??A??B?????B??C??B?????B??D??B?????E??F??C?????E??G??C?????E??H??C?????E??I??C?????E??J??C?????E??K??C?????E??L??C?????M??N??B?????M??O??C?????M??P??C?????M??Q??C?????E??R??C?????E??S??C?????E??T??C?????E??U??C?????V??W??B?????X??Y??@`Bcv?Z??[??pF?sG?Z??\??`I?CG?]??^??pW?gF?_??`??@?????V??a??B?????]??^??pr?kG?]??b??@p?wM?]??c??pA?CR?d??e??@?????V??f??B?????E??g??C?????E??h??C?????V??i??B?????E??j??C?????E??k??C?????E??l??C?????E??m??C?????E??n??C?????E??o??C?????E??p??C?????E??q??C?????E??r??C?????E??s??C?????E??t??C?????E??u??C?????v??w??B?????X??Y??puCWy?x??y??`J?[]@z??{??@A????X??|??p??Wy?X??}??@D?K|?~???@?P@?sN?@@?A@?`C?sz?B@?C@?@@?Wo?D@?E@?`@??O?D@?E@?`T?{Q?F@?Y??`B?WM?G@?Y??`G?SJ?H@?Y??@@????B@?f??ptBct?I@?J@?P@?s`?I@?J@?pJ?_c?K@?L@?@P??\?D@?E@?`@?GP?D@?E@?`V?CR?M@?N@?PC?kH?O@?N@?PN?sS@P@?Q@?pC?ku?R@?S@?Pj@WY?T@?U@?pF?[O?V@?W@?@A?CJ?X@?W@?@?????E??Y@?C?????V??Z@?B?????[@?Y??@M?KC?\@?[??@A?cE?Z??[??P@?GH?]@?Y??pA?Cs?^@?Y??P@?kf?O@?_@?@V??F@`@?Y??P??SH?a@?Y??`G?sK?b@?Y??@@????K@?c@?`p?cM?d@?e@?pH?oh?f@?{??PD?Oe?d@??@?p@?se?d@??@?@i?[j?g@?h@?p@?KEAg@?i@?@R?w^?j@?k@?PU?Gg?l@?m@?pE?ob?M@?N@?`E?sH?n@?Y??`??G]?j@?k@?Pc?sg?g@?o@?@O?We?p@?k@?PY?wF@q@?r@?@A????s@?t@?@??[T?u@?v@?@??O\@E??w@?C?????x@?Y??@C????y@?z@?p@?wC?{@?|@?pW?cA?}@?~@?`@?kF??A?~@?`E?ca?g@?@A?pA?_@Ag@?AA?PW?gu@BA?CA?@G?gUBBA?DA?`D?[WBEA?FA?PC?_s@V@?GA?`B?KL?X@?GA?@?????M??HA?C?????E??IA?C?????[@?Y??pS?WC?JA?KA?@U?wL?LA?MA?@F?WC?JA?f??@A??G?NA?f??`D?CF?OA?f??@Z?CY?d??f??@A?KO?d??f??@U?_Q?d??PA?@`?gS?QA?f??@@?{A?QA?RA?@??????A?~@?PD?_a??A?SA?@e?wg?s@?TA?PF?WQ?g@?UA?`E?CfAVA?Y??PM?sm@WA?r@?@A????s@?XA?P??ST?s@?YA?@X?_X?ZA?TA?`??OV?ZA?YA?@C?oV?ZA?[A?pQ?o\?g@??@?p??OQAg@?\A?`L?Wz?g@?]A?`M?Wy?^A?r@?@C????ZA?_A?@@?o\?ZA?`A?@j?OX?aA?r@?@B????ZA?bA?P??_\?cA?dA?@L?[M?eA?fA?`b?KE?K@?gA?`X?OZ?hA?h@?@??oR?E??iA?C?????E??jA?C?????O@?_@?`E?GE@O@?kA?@`?SA@P@?`??pA?[w?R@?S@?pA@CX?V@?lA?@D?oN?`@?Y??P@?[H?hA?h@?`g?kT?mA?e@?`A?wm?mA??@?p@??l?mA??@?`S?Wp?nA?{??P@?C`?nA?{??`N@?e?oA?pA?`??WW?oA?h@?pK?KT?qA?pA?@D?oV?rA?k@?@L?cs?g@?sA?PM?{t?tA?{??PA????uA?vA?pB?GG@EA?k@?pB?_r@B@?f??`gACs?wA?xA?PK?GH@cA?dA?Pz?SO?g@?yA?p??SOAg@?zA?`[?KI@{A?r@?@A????cA?|A?`F??P?cA?}A?@K?_L?wA?}A?`E?cO@wA?gA?PH?CF?~A?gA?`j?Cc?B@??B?PZ?wi??A?@B?P@??_?X??AB?P@?km?E??BB?C?????E??CB?C?????E??DB?C?????E??EB?C?????E??FB?C?????E??GB?C?????wA?HB?P@?GG?IB?HB?A^?{Q??A?@B?Q@??_?X??AB?qC?sm?E??JB?C?????E??KB?C?????E??LB?C?????MB?k@?@L?{w?NB?r@?@B????s@?OB?P??cZ?s@?PB?pB?OM??A?PB?pA?[K@QB?RB?`E?oL?E??SB?C?????E??TB?C?????B??UB?B?????s@?YA?PI?WW?VB?WB?@@?gH?E??XB?C?????M??YB?C?????M??ZB?C?????M??[B?C?????E??\B?C?????E??]B?C?????E??^B?C?????E??_B?C?????E??`B?C?????E??aB?C??????A?SA?pb?[g?s@?fA?pP?WI??A?bB?@@?gJ@cB?dB?@I?sA?eB?fB?@E?{LAeB?gB?`B?g^BeB?hB?P??GQBeB?iB?qB?wGBjB?@A?Q???F?nA?{??`K@{d?kB?Y??@@????eA?lB?pS?s_?mB?nB?`[?sW?oB?pB?@A?kH?oB?pB?pH?cI?oB?qB?PK?CL?wA?}A?pF?gO@rB?gA?`??G`?wA?HB?P@?GG?IB?HB?@^?{Q?A??sB?B?????K@?c@?@L?WL?K@?tB?`K?OV?uB?vB?`@????wB?xB?P?????yB?zB?@B?__?E??{B?C?????E??|B?C?????E??}B?C?????~B??C?B?????y@?z@?`A?wC?LA?@C?@W?GN?LA?AC?pA?gO?JA?BC?@B?WH?JA?BC?PG?OI?CC?BC?pE?WQ?NA?BC?`D?[D?OA?BC?pH?O`?d??BC?@A?SB?d??BC?@a?CE?d??DC?@`?OG?QA?BC?@@?wB?EC?FC?@?????V??BC?B?????ZA?[A?PO?k\?ZA?GC?pX?[T?HC?@A?@U?GE?IC?r@?@C????HC?JC?@@?GE?HC?KC?@??sE?E??LC?C?????E??MC?C?????E??NC?C?????E??OC?C?????E??PC?C?????B??QC?B?????V??RC?B?????SC?k@?@I?cC@g@?TC?QA?cV?UC?VC?aK?OC?WC?XC?AJ?OJ?X??Y??PBASs?YC??@?@@?WB?ZC?Y??@@????B@?[C?pR?gj?B@?f??PW?Wp?B@?\C?PB@[y?]C?^C?@M?gg?I@?HB?p^?{a?A??_C?B?????`C?Y??@@????IB?aC?`@?oW?bC?aC?Pb?{^?cC?dC?PV?[m?eC?Y??`@A[l?wA?J@?P@?gB?wA?J@?P@?[G?IB?J@?`T?sR?IB?fC?@Y?wT?wA?gC?PG?OL@hC?BC?P@?Gg?OA?BC?@J?Kb?d??BC?PA?cH?d??BC?pR@cL?QA?iC?@@?GC?EC?jC?@?????V??iC?B?????LA?MA?PJ?sC?LA?kC?@A@sK?LA?lC?PD??H?y@?mC?PI?{B?X??Y??@pCGy?Z??nC?p??[H?~A?gA?`Z?_b?rB?HB?`??S_?]C?dC?@B?ke?B@?dC?pL?Gl?B@?oC?@L?gm?wA?pC?pM?GN@?A?qC?`E?c_?X??qC?`V?Om?rC?Y??@@????IB?sC?@b?OW?NA?f??pC?CF?tC?uC?@A?_X?mB?nB?@N?[W?vC?wC?`??GD?vC?xC?`A?wE?yC?@A?P@?w\@zC?@A?`??[P?zC?{C?QA?_T?zC?|C?QF?WV?}C?~C?QA?k~@}C?~C?AB?O?Au@??D?q@?{ZCHC?KC?pz?CH?g@?@D?p??_FAg@?AD?PE?Wh?g@?BD?PR?oi?CD?r@?@A????HC?DD?P??GH?ZA?ED?@C?sR?FD?GD?`G?SQ?HD?ID?P??GL?HD?JD?pC?kN?HD?KD?`??oL?LD?MD?p@?S^?ND?OD?P@?wR?ND?PD?PF?_o?QD?Y??@A????LD?RD?a??W^?SD?TD?aA?WF?UD?VD?aD?gz?WD?VD?a??GE@WD?VD?Q@?wC@XD?@A?Q??_y?u@?YD?Q??OQA?A?SA?PG?Cf?FD?fA?p}?cG?FD?ZD?@@?wQ?[D?[??`x?cL?\D?Y??P??gL?\D?Y??PP?gM?]D?^D?a??KJ?_D?^D?aF?[c?_D?`D?AA?oj@_D?`D?Q@?Sj@u@??D?q??{ZC{@?|@?`D?OA?aD?bD?P@?_w?aD?fA?pC?{e?cD?dD?@Z?[EBcD?eD?PK?KHBcD?fD?@_?sKBcD?gD?pz?wPBcD?hD?`B?CYBcD?iD?PE??BBaD?jD?P??scAE??kD?C?????E??lD?C?????E??mD?C?????{@?|@?PE?OA?nD?oD?`??kA?nD?oD?@A?[C?nD?pD?pD??D?u@?qD?QB?{RBrD?qD?aJ?oZ?E??sD?C?????d@?e@?AL?sh?tD?dC?QE?cH?D@?E@?a@??O?D@?E@?A??[P?E??uD?C?????E??vD?C?????E??wD?C?????v??xD?B?????X??qC?`V?Om?B@??B?PZ?wi?B??yD?B?????O@?kA?pc?WA@zD?{D?PN?gZ?|D?}D?P@?w]?~D??E?@B??~?~D?@E?`F?Ke?zD?{D?pE?KZ?AE?BE?PY?[d@CE?FA?p@?g^?V@?GA?P@?ST?cA?|A?PN?KP?DE?EE?`r?[R?]D?FE?@C?S[?rD?GE?p@?Co?M??HE?C?????V??IE?B?????LA?@C?pD?gM?JE?KE?A@?SL?LE?ME?a??SE?LE?NE?qL?gD?M??OE?C?????E??PE?B?????E??QE?C?????E??RE?C?????E??SE?C?????IB?fC?pL?oT?LD?TE?pB??i?E??UE?C?????E??VE?C?????E??WE?C?????E??XE?C?????E??YE?C?????eC?Y??`w?sj?cA?ZE?A@?g`?[E?v@?Q??WC@[E?\E?q@?cu?V??]E?B?????mA??@?pJ?Kp?nA?{??@???c?X??Y??`cAgt??A?^E?pE?_L@_E?`E?@??KP?aE?bE?P@?G^?cE?dE?@?????E??eE?B?????E??fE?C?????B@?f??@t??x?B@?\C?qc?{x?gE?hE?Q@?oE?d@??@?@W?Gj?iE?dD?@d?wF?iE?jE?PQ?{Q?iE?kE?PL?_O?LD?lE?`A?GY?X??AB?qB?om?]??mE?a@?GQ?R@?S@?`_@sX?R@?nE?aB?sR?WC?XC?A??KJ?s@?YA?pN?_W??A?oE?pE?KK@X??pE?@@?_n?]??mE?pC?SQ?d??qE?@?????FD?fA?@i?oF?nD?pD?`F?CD?u@?rE?a??Cq@HC?KC?`x??H?HC?sE?`@?CI?cA?fA?@l?[K?mB?tE?pJ?{N?mB?uE?pB?kJ?zD?{D?QN?gZ?|D?}D?Q@?w]?~D??E?AB??~?~D?@E?Q@?Ce?OA?f??pf?oY?d??f??@??cP?DE?EE?`q?WR?DE?vE?pV?[F?DE?wE?`W?GK?xE?yE?`A????zE?{E?`B?cC?|E?yE?@A????LD?}E?A@?oO?~E?yE?Q@?????F?@F?a???D?AF?yE?A@????LD?BF?qD??K?u@?CF?QG?wy@u@?DF?aW?WJArD?EF?QL?{W?FF?GF?aC?kH?ZA?[A?PS?s\?g@?zA?PB?GH@HF?IF?Q??WA?HF?IF?A??SD?iE?jE?aZ?SR?cA?|A?PH?GP?A??JF?B?????E??KF?B?????LA?AC?`??cO?LF?MF?`V?OJ?NF?^D?aD?sE?OF?BC?QB?kC?OF?BC?qI?oD?s@?t@?PL?CU?ZA?PF?@H?cJ?cA?PF?@I?_V?eA?QF?p_?gX?vC?RF?`??CE?SF?@A?@C?KL@SF?TF?P??cQ@u@?YD?pE?WQArD?YD?@??KK?X??Y??@rBKw??A?^E?@C?WL@UF?v@?@@?_L?iE?dD?@f?{F?iE?VF?pK?wS?vC?WF?@B?OL?vC?XF?pK?[O?MB?k@?`R?Gx?g@?o@?Q@?kd?mB?nB?@V?kW?YF?{??@B?????A?ZF?Q??wg??A?[F?QF?sV?\F?@A?Q??_E?E??]F?C??????A?oE?pC?GK@UF?NE?@A?{N?zC?^F?@@?W`?zC?^F?`B?Cp?zC?_F?q??_o?zC?~C?aE?Ga@}C?~C?AD?S?AFD?fA?Pl?wF?`F?fA?qB?cA?HC?sE?a@?CI?cA?fA?aD?cC?DE?wE?@F?wJ?aF?yE?@?????aE?bE?@S?{_?_E?bF?P@?gS?cF?dF?`??_O@X??AB?pB?om?eF?Y??@B????y@?fF?p??CC?gF?mC?PG?GC?hF?mC?`B????\D?Y??pQ?gM?SD?@A?@@?sD?WD?VD?P@?wC@E??iF?C?????E??jF?C?????E??kF?C?????X??Y??pnACu?oB?lF?@C?WO?oB?lF?AE?SP?mF?nF?aE?[Y?oF?pF?Q@?w|?qF?fA?QE?S}?rF?fA?a@?Cv?K@?c@?@N@KO?K@?sF?@P?wS?I@?aC?`P?ob?V??tF?B?????d??f??pP?SQ?uF?vF?@E?_M?wF?@A?@e?kI?DE?EE?PO??Q?]D?^D?`??KJ?_D?^D?`F?[c?_D?`D?@A?oj@_D?`D?`F?_j@u@?xF?pE?sVCA??yF?B?????~B?zF?B?????E??{F?C?????oB?lF?PB?WO?E??|F?C?????DE?vE?`E?WE?`F?}F?p@?gC?vC?XF?`I??N?zC?y??@F?GO@~F?{??@E????vC??G?`^?GO?zC?~C?AB?Ca@@G?AG?Q@?[C?@G?AG?Q@?S[@uF?vF?AE?_M?wF?@A?aQ?[H?K@?tB?PD?oU?BG?XC?a@?kF?E??CG?C?????E??DG?C?????E??EG?C?????cA?|A?PD?_O?g@?FG?q??SPAg@?GG?qH?Sv?g@?HG?a@?gc?g@?IG?aA?KP?UC?JG?QJ?SB?WC?KG?qF?OH?p@?k@?PU?kF@l@?m@?qE?ob?M@?N@?QC?kH?O@?N@?QN?sS@zD?Q@?AK?kX?|D?LG?A@?GS?MG?LG?QA?cH?~D?NG?a??cy?OG?PG?AD?KN?QG?RG?a??gC?E??SG?C?????K@?L@?pJ?g[?\F?TG?@A??O?E??UG?C?????E??VG?C?????E??WG?C?????iE?jE?aT?GR?cB?dB?pJ?sA?XG?YG?`F??]?XG?ZG?`C?c]?[G?\G?`@?Ci?[G?]G?pK?sj?[G?^G?pC?kk?_G?`G?@??SG?E??aG?C?????B@?\C?qZ?wx?E??bG?C?????[@?Y??PN?KC?B@?dC?pA?{k?gE?cG?QG?OB?\F?dG?aN?WS?LA?kC?Pf?cJ?LA?eG?@T?wL?fG?fA?pO?[D?FD?GD?pD?OQ?`F?gG?pD?wB?zC?^F?@u?or?zC?hG?qG?Go?zC?iG?Qc?GaAzC?jG?AV?k_AZA?[A?`P?k\?uB?vB?a@????wB?xB?qC????^A?fA?Q?????kG?fA?A??oA?V??lG?B?????eC?Y??@~?wj?cA?mG?Px?Wd?MG?LG?Q??_H?OG?nG?qB?GM?iE?jE?@s?GS?iE?kE?p_??P?oG?pG?PM?wI@oG?qG?pq?[k?aD?fA?qC?{e?cD?dD?AQ?KEBcD?rG?a@?[CBcD?iD?QE??BBaD?jD?AG?CdAsG?r@?@B????s@?tG?`??sX?s@?uG?pK?_N?vG?wG?@@?KN?vG?xG?PA?_U?yG?@A?p@?GX?yG?zG?P??{Q?kG?YD?@?????E??{G?B?????s@?|G?@L?oM?}G?dC?a??wB?yG?@A?`F?SX?nA?{??@w?[d?LD?~G?qF?wl?tC??H?a??c^@@H??H?qL?OV?E??AH?C?????G@?Y??pJ?[J?~D??E?a??{}?MG?BH?aJ?KJ?~D?CH?a??s`?E??DH?C?????E??EH?C?????E??FH?C?????eA?QF?@r?WY?GH?Y??@D????eA?HH?pe??]?mB?IH?P@?SE?JH?NE?pB?cD?KH?^F?pC?wY?KH?zG?P??kQ?UD?LH?@?????E??MH?C?????]??^??pM?KF?]??NH?qa?WI?E??OH?C?????E??PH?C?????QH?gA?`V?Cg?K@?L@?AM?k[?[E?Q@?a??K|?[E?RH?a??Cu?[E?SH?A@?kT?[E?TH?A??GR?JH?NE?PF?gD?g@?FG?a???H?g@?GG?QB?Gv?HF?IF?AA?SD?HF?fA?qA?{C?K@?L@?AP??\?D@?E@?a@?GP?D@?E@?aV?CR?E??UH?C?????d??BC?pW?cD?uF?vF?qB?[M?s@?YA?pN?_W??A?oE?AE?KK@x??NE?@D?K\?x??NE?p@?W[?x??VH?p@?ON?x??VH?@M?{M?HC?@A?QL?sD?HD?WH?ak?kF?B@?\C?QB@[y?oB?pB?p`?cJ?oB?XH?p@?SN?oG?@A?a??oa?oG?YH?qN?gb?ZH?rE?AG?wD?[H?rE?qA??C?\H?rE?AD?OZ?]H?rE?AZ?OG?s@?YA?PK?[W?^H?WF?Q@?cA?^H?fA?QC?sA?_H?fA?AE?KB?_E?`H?a??Op?aH?bH?a@?{C@l@?m@?AA?_b?cH?dH?QE?KR@cH?eH?a@?[P?UC?fH?qJ?cG?gH?hH?AA?KF?A??iH?B?????jH?kH?B?????eC?Y??`d?[j?E??lH?C?????cA?|A?Pe?cP?cA?mH?`A?w_?cA?mH?pI?O`?bC?aC?@??K^?cC?dC?QV?[m?DE?vE?PT??F?yC?y??P@?C`@}C?~C?aG?W?ArD?nH?AD?oH?~B?oH?B?????E??pH?C?????oG?y??`Q?sW@vC??G?@A?CN?u@?qH?pA?o[BrD?qH?p@?wc?zC?^F?@??{o?{@?|@?PA?KA?rH?sH?@@?wV?nD?fA?P@?{B?O@?_@?@??oD@`C?Y??@?????cA?fA?@t?gK?K@?fA?`B?kB?LD?tH?@C?Gt?LD?tH?P@?Cr?uH?vH?@A?cO?uH?wH?pG?[G?E??xH?C?????E??yH?C?????E??zH?C?????eA?QF?`y?O^?g@?FG?p??SPAg@?GG?pH?Sv?g@?HG?pH?Cd?g@?AA?@a?Sv@g@?i@?a??K^?bC?aC?PY?w^?vC??G?@L?WN?{H?y??`F?kC?|H?{??@C????vC?}H?`B?_N?~H?yE?@B????DE??I?`??CF?vC?wC?P@?GD?@I?AI?P??[m?BI?CI?@B?go?DI?fA?pE?[h?E??EI?C?????iE?VF?qK?wS?B??FI?B?????B??GI?B?????s@?OB?P??cZ?s@?PB?qB?OM??A?PB?qC?_K@UF?HI?Q@?OP?zC?HI?a??Cv?zC?{C?QF?sT?]??NH?AG?WH?II?JI?qD?sV?cD?gD?PA?sNBcD?iD?qG?O~Au@?KI?q??gSAu@?KI?QB?SVAj@?k@?`Y?Wg?LI?r@?@A????eA?MI?pM?[K?K@?NI?Q@?{Z?DE?wE?`]?OK?]D?^D?`??WN?_D?^D?p@?Gq?_D?OI?@G?OM?PI?QI?pA?K\BA??RI?B?????iE?dD?@b?sF?iE?SI?pK?WP?iE?@A?P??OI?TI?@A?`@?SI?@H?UI?P??cj?]D?^D?@??WN?oB?pB?`??kH?IB?sC?pU?CW?]C?^C?pU?kg?]??b??`d?OM?Z??VI?PY?KR?WI?NE?@A?sL?oG?^F?PA?Ge?oG?XI?@M?Sf?YI?TH?PC?KO?YI?ZI?p@?CM?^H?WF?P@?cA?^H?fA?PC?sA?_H?fA?@C?GB?s@?|G?@??cM?X??Y??pL@sq?[I?AB?AH?S?@WI?NE?AA?sL?oG?^F?a??Ge?oG?zG?QA?GT?cD?eD?PR?gHBcD?iD?qD?S?B{@?|@?pC?OA?u@?\I?qA?OlA]I?^I?qP?_Y?]I?_I?a???U?u@?`I?A@?[[@X??Y??PG@_q?B@?f??PcAwr?gE?aI?a??wD?gE?bI?qJ?OD?E??cI?C?????E??dI?C?????eI?r@?@C????ZA?fI?@@?c\?ZA?bA?pA?c\?g@?]A?pN?Wy?g@?gI?@??GR?hI?r@?@?????p@?k@?`O?OF@oG?pG?PB?[I@\D?Y??@G?OM?oB?pB?`k?wJ?mF?NE?@Z?_W?oF?NE?`??WT?oF?SH?P@?GH?cA?mG?pK@wd?zD?Q@?QY?OY?MG?BH?QI?GJ?cB?dB?@B?gA?iI?jI?Q??wM?kI?lI?a??[R?oF?lI?qA?_u?rF?fA?qG?Kv?oF?mI?AL?Sc?X??Y??`q?[p?nI?oI?aB?c{?cD?eD?@D?{GBcD?pI?aA?syAu@?qI?AB?k]@rD?qI?Q??{A?E??rI?C?????oG?pG?PR?{I@E??sI?C?????E??tI?C?????E??uI?C?????E??vI?C?????nA?{??PR@Ge?wI?{??@C????eA?xI?`G??[?mA?pA?AI?Wq?HC?@A?@X?KE?g@?zA?@T?{H@x??y??aL?W]@E??yI?C?????s@?YA?`S?CX?s@?|G?@L?oM?vG?dC?P??WH?NF?^D?a??oE?OF?`I?aF??B?vC?wC?`A?GD?zI?{I?P@?[g?|I?}I?@U?gM?~I??J?`B?WH?|I?@J?PB?K^?|I?AJ?QK?C_?|I?BJ?qC?w_?CJ?DJ?qC?wX?DI?EJ?Q??Wl?DI?FJ?AJ?Kj?eA?QF?@]?_X?HF?fA?`??gC?HF?fA?@C??D?iE?jE?pn??S?rD?GE?@C?Co?PI?GJ?PI?wmBX??Y??pD@_q?E??HJ?C?????cD?gD?`E?wNBcD?pI?aB?syAX??qC?@??Sl?mB?nB?@P?_W?VB?IJ?PD?OO?JJ?r@?@@????mB?KJ?@??_W?E??LJ?C?????E??MJ?C?????E??NJ?C?????\@?[??@N?KF?\@?OJ?pB?{G?PJ?jI?@@?CU?WI?jI?@@?wI?oG?QJ?AD?kw?OF?`I?AC?{A?rD?qI?QD?GB?DE?wE?PA?wJ?RJ?jI?Q@?_i@SJ?fA?aD?ci@y@?mC?p??_B?fG?KD?aN?GG?u@?TJ?q??_fAu@?`I?a@?[[@E??UJ?C?????E??VJ?C?????E??WJ?C?????E??XJ?C?????E??YJ?C?????E??ZJ?C?????E??[J?C?????B??\J?B?????V??]J?B?????g@?\A?PB?Cz?HF?IF?P??WA?HF?IF?@??SD?E??^J?C?????E??_J?C?????zD?Q@?A??OX?O@?_@?pF?GE@O@?kA?@??k?@v??`J?B?????v??aJ?B?????d@??@?qf?Wj?bJ?{??AA????eA?cJ?AT?kb?K@?NI?aJ?C[?IB?HB?AO?_Q?bC?dJ?QA?k]?M@?N@?A@?gH?eJ?fJ?A@?????A?gJ?A@?s_?iE?kE?p]??P?rD?qD?AO?C[?hJ?iJ?A@?[K@jJ?iJ?Q??SJ?E??kJ?C?????X??AB?A??km?E??lJ?C?????cA?|A?@??WO?zD?{D?aL?_Z?AE?mJ?QA??[@MG?nJ?Q??gJ?QG?oJ?Q??OD?iE?VF?qM?{S?cD?fD?PF?oJBaD?jD?QA?{cAE??pJ?C?????E??qJ?C?????B??rJ?B?????tD?dC?Q??SH?X??Y??pv?cp?x??NE?AD?K\?vC??G?@??CN?x??y??aJ?[]@|H?{??AC????vC?}H?q@?[N?u@?qH?qA?o[BrD?qH?Q??oc??A?SA?@f?wg?uB?vB?P@????mA?pA?`J?Wq?rA?k@?@J?cs?sJ?oI?@??GV?]??NH?A??GH?g@?BD?qM?ci?_H?fA?@E?KB?_E?`H?`??Op?aH?bH?`@?{C@]??mE?qB?SQ?]??NH?@??GH?O@?_@?pG?KE@^@?LG?a??Sh?^@?PG?q??_g?~D?tJ?QA?oa?E??uJ?C?????[E?\E?QH?{u?LD?BF?AD??K?u@?TJ?QI?_hArD?GE?AD?Co?iE?SI?q\?CQ?l@?m@?@A?_b?cH?dH?PE?KR@cH?eH?`@?[P?UC?fH?`K?cG?vJ?XC?`C?GJ?A??wJ?B?????cA?fA?PK?GD?QH?fA?`L?[f?D@?xJ?PA?_X?a@?fA?PA?{J?|D?fA?@B?WQ?rD?qI?QE?GB?oG?y??`T?oW@\H?rE?Q??KZ?_H?fA?@D?KB?E??yJ?C?????zJ?{J?B?????zJ?|J?B?????FD?fA?ps?CG?zC?^F?``?wq?DE?EE?Pw?cR?tC?uC?@@?SZ?TI?fA?@B?wC?tC?fA?@A??Q?@H?fA?PJ?WN?tC?}J?`??kO?tC?}J?`??o]@K@?c@?`^?wL?QA?iC?A@?GC?EC?jC?A?????~J??K?B?????SF?TF?@F?wQ@|D?}D?Q??w]?iE?VF?aL?wS?uH?wH?pE?WG?cD?dD?@D?wDBcD?iD?pG?O~Au@?KI?p??gSAu@?KI?P??SVAcD?eD?@??wGBaH?bH?QC??D@_E?`H?q??{K?_E?`H?QW?_t?_E?@K?q??{u?_E?`H?qK?Cy?_E?bF?qE?oS?_E?bD?aE?oX?wA?pC?q@?gM@E??AK?C?????y@?mC?pD?sB?{@?BK?PA?cC?CK?DK?pM?g@?zC?@A?a??[P?zC?{C?aG?wT?cB?dB?`E?gA?rF?oI?AE??w?{@?|@?pU?gA?nD?}F?pI?kL?EK?fA?pI?KB?vC?XF?PH??N?uB?vB?PA????FK?xB?P?????yB?zB?@??[_?wA?xA?QK?GH@OA?f??QB?KX?]C?^C?AR?kg?cD?fD?@d??LBcD?gD?@??cNBOA?f??QA?CX?iE?jE?@M?sQ?]C?^C?qP?kg?uA?vA?qB?GG@g@?h@?q@?KEAg@?i@?qH?W^?zC?|C?aE?WV?cA?mG?@??Wb?A??GK?B?????E??HK?C?????B@?f??P^Csu?wA?pC?@K??N@x??VH?p@?cM?E??IK?C?????JK?r@?@?????g@?BD?@??{h?HD?ID?`@?KL?KK?LK?P??wG?KK?`I?@??kF?K@?MK?`B?kT?]C?dC?@??ge?|I?BJ?AG?{_?zI?NK?Q??CG?iE?dD?@X?_F?iE?OK?AL?wI?E??PK?C?????JK?r@?@A????ZA?QK?P@??[?cA?RK?PF?WT?eA?SK?py?oL?g@?TK?`@?GGAg@?BD?QR?oi?UK?r@?QB????s@?VK?AC?OU?WK?fA?AN?OC?FD?fA?`W?GF?EK?EE?Q??GC?rD?qD?qa?g[?FF?qD?QD?wG?OG?nG?QD?OM?M@?N@?QB?kH?E??XK?C?????zC?hG?pG?Go?zC?iG?p^?CaAE??YK?C?????E??ZK?C?????E??[K?C?????E??\K?C?????E??]K?C?????E??^K?C?????E??_K?C?????E??`K?C?????E??aK?C?????E??bK?C?????E??cK?C?????~J?dK?B?????E??eK?C?????cA?fA?Qb?GK?oF?NE?a??WT?oF?SH?aC?KH?]C?^C?qX?og?NA?f??qC?CF?tC?uC?A??_X?g@?TC?a@?cV?g@?fK?AA?sU?rD?qH?q@?wc?hF?mC?pA????gK?hK?pF?_C?iK?@A?PA?{y@iK?@A?@?????jK?kK?B?????jK?lK?C?????jK?mK?C?????jK?nK?C?????jK?oK?C?????jK?pK?C?????jK?qK?C?????vC??G?`C?GN?A??rK?B?????Z??[??qF?sG?Z??\??aH??G?vC??G?pJ?WN?uB?vB?q@????wB?xB?Q?????qA?pA?AB?oV?qA?sK?q??wU?LD?TE?AD?wi?~J?tK?B?????X??Y??@iCwx?zI?y??`@?Od?uK??J?p??sI?vK??J?p??WH?|I?AJ?@G?s^?wK?xK?Pc?ki@yK?{??@A?GJ?zK?yE?@A????[I?{K?Q??g@@RJ?jI?P@?_i@SJ?fA?PC?ci@|K?jI?@B?oR@zC?}K?QD??XAR@?S@?@^@sX?R@?~K?@@?_S?g@?sA?pB?Wt?M@?N@?@@?gH?eJ?fJ?@@?????A?gJ?p@?s_??L?{??@?????E??@L?C?????g@?zA?p\?KI@AL?r@?@?????cA?PF?PE?SV?BL?r@?P?????CL?DL?@??ki?EL?FL?p@?sA@qA?fA?pD?kS?]I?GE?@??GW?FD?GD?`A?KQ?zC?^F?pE?_p?E??GL?C?????E??HL?C?????E??IL?C?????[I?AB?pD?O?@vC?XF?`C?wM?F@?Y??@??WM?X??Y??pRAss?x??JL?QF?og?s@?fA?@??{H?E??KL?C?????HD?WH?a@?CE?FD?LL?A@?_R?`@?Y??@??SH?a@?Y??aG?sK?b@?Y??Q?????cA?fA?`C?cB?HF?ML?@??GB?IB?HB?PR?kQ?DE?vE?pX?oF?DE?wE?@??wJ?rD?nH?aM?{H?FF?GF?A@?_H?FF?NL?q@?gC?cD?iD?qD?G~A|I?AJ?AD?o^?B@?[C?AR?gj?OL?{??PB????JH?PL?a??gD?JH?HI?AB?{D?KH?HI?AP?_`?]??^??pN?OF?Z??QL?qR?sO?JA?KA?pX?KM?g@?BD?pM?ci?A??RL?B?????B@?[C?qR?gj?O@?kA?pV?o@@g@?AD?@??Kh?ZA?PF?AH?cJ?cA?PF?AI?_V?eA?QF?qZ?WX?iE?jE?@p?CS?E??SL?C?????g@?zA?P??CH@M??TL?C?????]??NH?AF?WH?cD?iD?a@?K?BLA?@C?pd?oN?{H?y??a@?gC?UL?jI?a@?gP?]??mE?aI?kQ?]??mE?qC?SQ?d??qE?A?????~J?VL?B?????cA?RK?`J?cT?OF?BC?AN?sD?WL?XL?q@?sM?O@?kA?Pa?SA@E??YL?C?????IB?sC?qU?CW?B@?\C?an?Gy?{@?|@?PG?SA?nD?ZL?`H?gM?A??[L?B?????d??BC?P??_I?\L?@A?AI?cE?\L?fA?AF?kD?}G?dC?`E?GC?{H?y??PB?gC?|H?{??@?????oB?lF?pF?WP?x??jI?@??Kz?E??]L?C?????eA?fA?@T?sD?d@?fA?qA?Sf?zE?{E?p??cC?aF?yE?@A????DE?^L?q??cB?u@?CF?aB?sy@E??_L?C?????iE?jE?qq?CS?cD?iD?AF??BB@I?AI?p@?[m?`L?AI?pB?WC?aL?fA?@@?_m?zI?fA?@@?WD?|I?fA?pA?[J?hI?r@?@A????ZA?bL?`M??[?HF?fA?AA?{C?\F?cL?AA?cM?E??dL?C?????eL?Y??AQ?cE?E??fL?C?????E??gL?C?????Z??VI?@O?oQ?WI?hL?P@?sK?oG?iL?a??Gd?oG?YH?QT?sb?E??jL?C?????UC?fH?pJ?cG?gH?hH?@A?KF?A??kL?B?????E??lL?C?????LA?@C?`R??N?LF?mL?QK?GG?oG?@A?`??oa?oG?YH?@_?Cc?ZH?rE?@G?wD?[H?rE?pA??C?\H?rE?@D?OZ?]H?rE?@G?wF?nL?rE?`G?KU?B@?\C?aS?kx?mB?nB?AN?[W?vC?wC?a??GD?vC?xC?aA?wE?SF?@A?AC?KL@SF?TF?QE?sQ@DE?EE?@V?OQ?zC?_F?p??_o?zC?~C?@@?Ca@E??oL?C?????E??pL?C?????E??qL?C?????E??rL?C?????E??sL?C?????E??tL?C?????zC?HI?qC?Wv?zC?uL?AJ?OcAHD?WH?aF?SE?XD?@A?a\?Cz?|I?@J?`@?K^?E??vL?C?????G@?Y??@Q?gJ?`@?Y??Q??SH?a@?Y??A@?gK?B@?\C?qi??y?a@?Y??qJ?{K?v??wL?B?????FD?fA?Po??G?|I?@J?PA?K^?|I?xL?qD?Ka?yL?zL?a@?OM?{L?fA?q@?OM?|L?fA?AB?_N?[D?[??ps??L?u@?qD?A@?[TBrD?qD?AI?kZ?FF?qD?A@?oG?O@?kA?`@?w?@}L?@A?Q??gD?g@?i@?q??K^?LA?kC?@??kH?SJ?oI?P??_i@SJ?oI?@A?{i@~L?oI?P??s]@~L?oI?Q??G^@?M?@M?QI?{[@zC?AM?qK?wYAcA?dA?`|?OQ?[E?SH?QP?SU?R@?~K?A@?_S?wF?@A?@_?WI?K@?fA?PG?cI?uB?vB?Q@????yB?zB?AB?__?g@?BD?A??{h?CD?r@?AA????HC?DD?Q??GH?ZA?ED?AC?sR?FD?GD?aG?SQ?HD?ID?Q??GL?HD?JD?qP?sO?HD?KD?a??oL?LD?MD?a??S^?BM?xB?Q?????B@?\C?@A?Sx?BG?CM?P@?gI?D@?DM?@??oU?rD?qH?AP?Sd?rD?GE?AC?Co?PI?GJ?aM?{mBLA?kC?Px?GK?LA?EM?Q??kF?@G?FM?q??Gp?@G?FM?aL?wf?F@?Y??@@?WM?R@?S@?@??_U?cD?eD?`G?CHBcD?iD?pD?S?Bu@?GM?p??[[C{@?|@?@g??B?}@?~@?a@?kF?eA?MI?PW?oK?B@?dC?`S?cl?HM?IM?aL????JM?IM?AF????wB?KM?QC????]I?_I?q???T?]I?_I?AB?wR?LM?MM?Aj?gb??A?SA?@I?Gf?FD?NM?P??kT?FD?fA?@??WE?uA?OM?@??GF@eC?Y??pz?sj?gE?aI?q@?wD?M??PM?C?????M??QM?C?????B??RM?B?????E??SM?C?????E??TM?C?????{@?|@?P@?GA?CK?DK?pC?S@?zC?UM?a??_?@zC?VM?qB?kW?~F?{??Q@????iE?dD?@`?oF?iE?WM?AY?gN?zC?jG?aB?G_AZ??[??Q@?GH?u@?CF?PG?wy@u@?DF?`W?WJArD?EF?PL?{W?A??XM?B?????E??YM?C?????E??ZM?C?????R@?S@?PAAOZ?UC?VC?q??GC?K@?tB?`N?_W?mB?uE?P??_J?mB?[M?@@?WH?P@?`??`C?_w?R@?~K?AD?gS??A?gJ?qB?s_?a@?Y??@@?gK?|D?\M?@@?GX?MG?\M?@E?GG?QG?RG?`??gC?K@?c@?@??wK?d??f??PD?kP?iE?jE?QQ?{Q?s@?YA?PK?[W?_H?fA?AC?GB?nA?{??@|?_d?oA?J@?P@?cQ?oA?J@?PF?wV?qA?J@?P@?_S?qA?J@?`E?OU?x??]M?pK?Wi?B@?f??PCA[r?vC?}H?AE?cN?x??NE?q@?W[?x??VH?q@?ON?x??VH?QC?cM?v??^M?B?????rD?nH?QU?KI?s@?uG?pE?WN?qF?oI?@@?g}?rF?_M?PK?{w?E??`M?C?????LA?@C?PF?oM?fG?aM?`E?cN?rD?EF?aB?gW?iE?jE?qg?gR?R@?S@?Pc@?Y?CK?DK?@??O@?cD?iD?QA?{ABO@?kA?pK?g@@eA?fA?PD??D?LD?tH?AC?Gt?LD?tH?Q@?Cr?uH?vH?AA?cO?uH?wH?qG?[G?bM?cM?Q@?OC?dM?cM?Q@?CM?iE?dD?@Z?cF?iE?eM?@N?kJ?vC?RF?@D?CE?fM?{I?P@?[`?|I?xL?pD?Ka?yL?zL?`@?OM?{L?fA?p@?OM?|L?fA?@B?_N?A??gM?B?????g@?GG?AH?Sv?rA?fA?A@?Gs?l@?fA?Q??oa?n@?fA?Q??K\?cA?fA?PH?wC?[E?fA?PC?Oo?eA?QF?q_?gX?vC?RF?Q@?CE?@I?AI?q@?[m?`L?AI?qA?WC?hM?iM?aA?{m?X??Y??plC{x?x??NE?aB?[[?E??jM?C?????yG?@A?@B?KX?yG?kM?P??KU?yG?lM?@@?KS?mM?`??PC?_F?mM?nM?PB?_D?]C?^C?AM?gg?V??oM?B?????oG?zG?PA?GT?rD?YD?PH?OK?s@?TA?`C?SQ?s@?pM?QE?[U?g@?qM?q??kSAg@?rM?qH?gA@g@?HG?qF??d?uB?vB?QA????FK?xB?AE????~F?fA?qA????K@?MK?`F?oT?K@?tB?@??kU?g@?HG?`@?gc?g@?IG?pC?OP?UC?VC?`K?OC?WC?XC?@J?OJ?u@??D?@??{ZCZA?QK?Q@??[?cA?RK?AI?_T?rD?qH?qC?wc?bM?cM?P??OC?sM?tM?@@?wR?LA?kC?pr??K?fG?aM?@D?cN?eC?Y??Po?oj?uH?uM?Q??wF?g@??@?q??OQAg@?\A?QB?Cz?HF?fA?AC??D?zC?iG?qg?WaAzC?vM?QA?[\AE??wM?C?????{@?|@?pB?OA?]I?_I?QD?GU?u@?xF?Q@?_UCvC?}H?aB?_N?~H?yE?AB????DE??I?a??CF?vC?xC?A??sE?SF?TF?Q??cQ@u@?YD?qD?WQAHD?JD?pP?sO?SD?TD?A??KF?rD?nH?aW?oH?OG?nG?QF?SM?~D?xM?Q??O`?B??yM?B?????IC?r@?PA????~A?gA?AY?[b?E??zM?C?????E??{M?C?????E??|M?C?????E??}M?C?????V??~M?B?????E???N?C?????E??@N?C?????E??AN?C?????E??BN?C?????E??CN?C?????E??DN?C?????WI?NE?@??sL?X??qC?pB?Wl?EN?FN?a@?kI?~A?gA?Q??sa?[H?GN?Q??{K?E??HN?C?????E??IN?C?????E??JN?C?????OA?KN?@??gW@JA?BC?QG?OI?CC?BC?qE?WQ?NA?BC?Q@?WD?zD?Q@?@R?{X?zD?LN?`A?oK?QD?Y??@?????rA?k@?`N?ks?g@?sA?@??Kt?rD?EF?qN??X?FF?GF?AB?gH?DE?wE?pP?CK?|E?yE?@?????E??MN?C?????u@?\I?pA?OlA]I?^I?pP?_Y?]I?_I?`???U?u@?`I?@??[[@g@?\A?AF?Oz?ZA?bA?PC?g\?g@?zA?@F?SH@j@?k@?@C?Wf?oG?YH?pN?gb?DE?vE?PN?gE?vC?XF?@??sM?B??NN?B?????EK?fA?QQ?WB?VB?ON?aA??G?O@?kA?@e?WA@x??y??a@?K]@{A?r@?@?????rD?nH?qI?wH?FF?GF?QD?kH?E??PN?C?????s@?pM?@C?WT?g@?zA?pH?SH@g@?IG?qC?OP?\@?[??PO?OF?PJ?JL?@@?OU?WI?JL?@@?SN?oG?JL?`I?wt?FF?GF?qG?sH?E??QN?C?????E??RN?C?????E??SN?C?????E??TN?C?????E??UN?C?????E??VN?C?????E??WN?C?????zJ?XN?B?????zJ?YN?B?????zJ?ZN?B?????B@?[C?aI?_j?[N?\N?Q@?_C?]N?\N?qA?WR@uH?\N?AA?_H?E??^N?C?????s@?YA?`Z?cX?HF?IF?Q@?SD?_N?@A?AC?SI?`N?{C?aH?[Z?cA?dA?@y?OO?E??aN?C?????v??bN?B?????g@?i@?AA?K^?ZA?PF?PJ?gJ?iE?kE?PJ?WO?u@?v@?Q@?O\@MB?k@?`N?Cx?g@?]A?@??gx?g@?zA?p_?OI@E??cN?C?????v??dN?B?????\L?fA?AH?oD?O@?kA?`O?g@@bM?cM?@??OC?O@?N@?A??CR@P@?Q@?QB?ku?[E?\E?AA?cu?E??eN?C?????K@?tB?@P?_W?tD?fA?Q??wG?fN?fA?Q@?OA?zC?y??`K?CO@zC?AM?aJ?wYADE?EE?pi??R?`F?gG?pA?sB?x??NE?`B?[[?iE?kE?Pb?CP?vC?RF?AD?CE?fM?{I?Q@?[`?V??gN?B?????B@??B?P??Si?vC?RF?qB?CE?zI?hN?aD??M?yL?fA?AC?CM?iN?fA?q??cf?fM?fA?q??kD?|I?fA?aN?GL?E??jN?C?????HD?ID?pC?WL?kN?lN?`??cT?kN?mN?`C?SQ?kN?nN?PQ?kZ?[D?[??Pb?{J?rD?EF?aG?kW?SD?@A?A@?sD?cA?fA?Al?[K?mB?tE?qG?wN?oB?tE?aM?CH?oB?oN?QH?sL?mF?HI?qR?_X?vG?dC?Q??WH?vG?xG?aH?sU?`L?AI?qB?WC?aL?fA?A@?_m?zI?fA?A@?WD?|I?fA?qA?[J?]??^??@??oE?rD?EF?QT?OX?pN?qD?Q@?OKIFF?qD?QH?KH?u@?KI?A@?SVA[I?fA?QA?c~?WI?fA?AB?kE?jK?qN?C?????~B?rN?B?????ZA?bL?@O?C[?ZA?sN?`B?G]?E??tN?C?????zC?hG?QF?Co?V@?uN?@??WR?u@?TJ?@??GhArA?k@?`R?os?g@?o@?QE?{d?u@?CF?aC?sy@[I?fA?QC?g~?cD?eD?pZ?oHBLA?eG?`L?sL?OF?f??@A?SG?OF?f??`C?gG?OF?vN?`E??K?wN?xN?@D????yN?xB?@A????E??zN?C?????DE?EE?@G?oP?EK?fA?qB?CB?s@?YA?`H?WW?FD?ZL?PC?GU?VB?WF?@A?CF?VB?fA?`@?OE?iE?kE?`R?kO?u@?TJ?a@?_fAu@?fA?Q??cZCV@?W@?AA?CJ?X@?W@?A?????E??{N?C?????oG?YH?QM?cb?u@?qD?PB?{RBrD?qD?`l??\?u@?fA?P??cZCwA?HB?@??GG?LD?TE?aD?wi?mA?|N?@??Km?iE?eM?qp?gK?iE?kE?@I?KO?cA?fA?QK?GD?QH?fA?aL?[f?D@?xJ?AB?_X?D@?fA?QF?oM?IB?fC?PL@kU?}N?Y??@@????E??~N?C?????E???O?C?????SC?k@?PM?kC@g@?o@?AJ?Ge?sG?r@?PA????EN?FN?QB?oI?uF?vF?pB?[M?_N?@A?`G?oI?]??^??pM?KF?g@?]A?@B?ox?zD?Q@?PE?WX?eI?r@?@?????M??@O?C?????OG?nG?qK?_M?|I?@J?@??K^?]??mE?qA?KQ?UC?VC?PE?KC?]??NH?QL?_H?AO?BO?A@?KD?u@?YD?QC?WQAiE?WM?`L?{M?]D?FE?@??S[?LD?lE?q@?CY?E??CO?C?????E??DO?C??????A?^E?PL?kL@EO?oI?Q??O_@zC?AM?q@?WYAx??VH?PC?cM?FD?fA?pY?GF?vC?WF?AB?OL?vC?XF?aE?{M?x??fA?AA?cI?cA?fA?QH?wC?[E?fA?QC?Oo?UK?r@?PB????WK?fA?aB?wB?R@?S@?P`@sX?zD?{D?PB??Z?|D?FO?@@?OV?MG?FO?pD?CI?~D?GO?PD?wz?~D?NG?pU@kk?iE?jE?qs?OS?`F?}F?A??gC?mF?nF?AT?CZ?E??HO?C?????oB?lF?@E?SP?mF?nF?`C?CY?x??fA?P??_I?kI?fA?P??wC?rD?qD?@O?C[?hJ?iJ?@@?[K@R@?S@?@m@[Y?iE?kE?PS?kO?WI?hL?@??sK?\L?@A?@I?cE?\L?fA?PD?gD?E??IO?C?????E??JO?C?????wA?gC?@@?{K@KO?LO?@C??g?|I?AJ?PK?C_?|I?BJ?@G?{_?zI?NK?PB?CG?DI?MO?PK?Kk?NO?{??@??gM?rD?nH?AP??I?vG?dC?PY?[I?OO?@A?PJ?wV?mF?nF?A@?{X?E??PO?C?????mB?nB?AP?_W?VB?IJ?QD?OO?JJ?r@?A@????mB?KJ?A??_W?x??VH?QI?sM?zI?y??a@?Od?|I?}I?AU?gM?uK??J?q??sI?vK??J?q??WH?`N?{C?aE?OZ?QO?RO?a??wU?QO?SO?a??[V?LA?@C?`G?sM?fG?TO?P??CF?fG?aM?@??[N?[E?\E?aC?gu?UO?r@?@?????B??VO?B?????HD?JD?`G?{N?E??WO?C?????P@?`??QD?_w?]@?XO?A??s~?v??YO?B?????cD?hD?PK?[YBcD?iD?QQ?sBBUC?fH?QE?_G?zC?AM?aA?WYAzD?Q@?AR?{X?zD?LN?aA?oK?bC?aC?pR?k^?gE?ZO?a@?sB?oG?QJ?PA?gw?vC?wC?A??GD?@I?AI?Q??[m?BI?CI?Q??co?eC?Y??@z?sj?[O?\O?@??kC?[H?rE?aB??C?\@?[??P??_E?\@?]O?qB?{F?cD?eD?@??wGB\D?Y??pE?OM?O@?kA?`S?o@@]I?_I?PD?GU?u@?xF?P@?_UCJA?BC?AZ?WJ?cA?mG?@B?[b?[E?JI?@I?cx?[E?^O?`F?[W?[E?_O?aV?o`?[E?`O?QB?[d?d@?e@?q@?gh?gE?bI?AJ?OD?\F?XC?QA?[H?LF?MF?`P?GJ?NF?^D?P@?gD?NF?^D?@A?{D?NF?aO?@??wI?a@?Y??@J?{K?~B?bO?B?????|K?jI?@??oR@cO?dO?`Z?GR@u@?qI?@B?k]@rD?qI?PD?GB?FD?ZD?A@?wQ?ZH?rE?AK?CE?]H?rE?AG?wF?iE?kE?@a??P?s@?uG?AG?WN?l@?m@?aD?kb?]I?^I?`F?sX?aD?bD?@??_w?LA?kC?@`?KJ?cA?mG?PO@?e?zD?Q@?aW?GY?AE?mJ?aF?K[@AE?eO?AB?kY@[E?\E?QG?ou?|I?}I?PT?gM?|I?fO?A@@C[?R@?~K?@D?gS?[E?JI?AG?_x?E??gO?C?????bC?dJ?qK?s]?E??hO?C?????rD?qH?AC?wc??L?{??@E????eA?iO?QS?s\?jO?BH?AL?[H??A?[F?QC?oV?eA?fA?`J?_D?iE?eM?pO?oJ?mF?NE?@@?GV?_E?kO?aW?gn?_E?lO?q??kw?oG?YH?aS?sb?|H?{??PA????LD?lE?p@?CY?|I?BJ?AE?w_?zD?Q@?@K?kX?|D?LG?@@?GS?MG?LG?P??_H?OG?nG?pB?GM?M??mO?C?????s@?fA?PD?gE?]I?^I?pA?cX?u@?v@?@@?O\@DI?MO?pI?Gk?{L?{??@B?[M?nO?oO?P?????YF?{??@?????fG?KD?`N?GG?u@?TJ?`@?_fALA?MA?QE?WC?eA?QF?Pv?w]?uA?OM?PU?oF@rD?qH?@P?Sd??M?@M?QE?s[@vC?XF?pA?wM?{@?|@?`r?_B?E??pO?C?????DE?wE?@@?wJ?yC?qO?AE?c^@SD?@A?aA?{D?XD?@A?QQ?oy?OF?f??PA?cG?OF?rO?pA?GI?cD?fD?@??KJBUF?v@?A@?_L?s@?|G?PB?gM?rF?fA?aH?Kv?ZA?bL?QK?{Z?cA?sO?QL??S?DE?tO?aL?[S?uO?gA?QB?gE?uO?vO?QD?oD?tC?wO?A??cU?xO?Y??@B????uA?yO?@B?wF@g@?FG?`???H?g@?GG?@F?Sv?_E?kO?`W?gn?_E?lO?p??kw?_E?`H?pK?Cy?_E?bF?AA?gS?[E?_O?aL?W`?[E?zO?A??og?E??{O?C?????B@?f??`w@Or?BG?XC?`@?kF?UC?VC?p??GC?|O?}O?@@?g~@B@?\C?AA?Sx?BG?CM?Q@?gI?UC?~O?a??sD?|O?}O?A??g~@B???P?B?????G@?Y??@J?[J?eA?MI?p[?oK?@P?fA?qC?_B?@P?fA?A??GC?|I?xL?AA?Ga?NF?^D?Q@?gD?NF?^D?aE??E?zD?Q@?AS??Y?}L?AP?AA?[J?SC?k@?pK?gC@nA?{??P???c?eA?xI?@??_Z?rD?qD?aE?gZ?WA?r@?@?????x??y??QF?W]@cC?dC?qC?Om?\F?dG?QG?OS?\F?BP?QA?S`?rD?nH?aE?sH?_H?fA?qE?KB?~B?CP?B?????DE?EE?`K?sP?_D?^D?PD?Wc?PI?QI?P??C\BRJ?jI?A??_i@x??VH?QH?sM?PI?QI?a@?cXB~H?yE?P?????X??AB?Q@?km??A?~@?PI?oa??A?[F?@??gV?iE?jE?@w?SS?_E?`E?A??KP?aE?bE?AS?{_?_E?bF?Q@?gS?cD?hD?@??kXBK@?fA?`H?gI?D@?xJ?QA?_X?a@?fA?AB?{J?}C?~C?A??G?ArD?qD?aF?gZ?CK?DK?@C?S@?@G?DP?p??[B@OF?vN?PC?wJ?WL?EP?pA?sb?X@?EP?PA??q?X@?FP?PA??s?X@?GP?pB?Kc?X@?HP?P??wa?[G?^G?@C?kk?_G?`G?`C?sG?g@?zA?@H?SH@p@?fA?A@?cE@l@?fA?qA?sa?oG?qG?`K@sl?dM?cM?Q??CM?D@?IP?a@?_V?}L?KG?a??OE?cD?eD?`]?wHBD@?fA?aB?gL?iE?jE?AP?wQ?JA?KA?@@?GL?X??Y??peAkt?zC?jG?QH?O_AtC?uC?AA?_X?TI?fA?AB?wC?tC?fA?AA??Q?@H?fA?qH?SN?mB?uE?@B?kJ?tC?wO?PA?kU?E??JP?C?????K@?tB?@R?kW?mA?HB?`A?So?nA?HB?@M?[a?oA?HB?QC?GV?qA?HB?qD?kT?D@?E@?QJ?wP?iE?dD?@\?gF?iE?KP?@O?SL?IB?fC?`O?sT?v??LP?B?????E??MP?C?????V??NP?B?????s@?YA?P^?S[?UC?fH?aK?cG?E??OP?C?????yK?{??PD?KJ?uK?{??P@?[J?PP?{??@?????K@?c@?pT?kL?~A?gA?aZ?_b?I@?HB?q^?{a?QP?jI?AA?{P@RP?fA?QG?{M@eA?HH?@c?o[?g@?GG?AF?Sv?SF?TF?PE?sQ@iE?jE?`Z?SR?z??{??AA????X??|??q??Wy?X??}??AD?K|?~???@?Q@?sN?@@?A@?aC?sz?B@?C@?A@?Wo?D@?E@?aT?{Q?u@?TJ?PI?_hAoG?pG?@??SI@zC?jG?aS?c_AzC?^F?`I?kp?A??SP?B?????QH?gA?pL?{f?mB?[M?QD?[H?wA?TP?QB?wD?E??UP?C?????vG?xG?AB?_U?O@?_@?`f?gF@~J?VP?B?????eC?Y??pa?Sj?QH?WP?aA?Gh?s@?XP?A@?S^?BG?@A?Q??_D?AO?BO?A??KD??A?oE?qC?GK@cA?mH?@G?K`?[E?NE?`??{|?[E?RH?`??Cu?[E?SH?@@?kT?[E?TH?@??GR?v??YP?B?????oG?YH?aF?_b?D@?E@?QD?cP?}L?XC?QA?_G?E??ZP?C?????X??Y??P|Bgw?qA?sK?qD?CV?nI?[P?qC?G{?O@?_@?p_?cF@^@?}D?a??[h?^@?BH?q@?Ch?uH?wH?qE?WG?HD?WH?aB?GE?\P?FN?q@?[`?u@?DF?qE?sIA[H?rE?A???C?oG?pG?PG@?L@u@?YD?@??OQAzD?Q@?aC?WX?E??]P?C?????UO?r@?@A????ZA?^P?a@?G]?ZA?_P?aU??c?HF?ML?A??GB?oG?iL?QB?Gd?^H?fA?AA?sA?FD?ZL?QC?GU?VB?WF?AA?CF?VB?fA?a@?OE?JH?NE?@??_D?UC?VC?qJ?OC?gH?hH?Q@?GF?|I?xL?A???a?`P?zL?A??gI?g@?i@?aU??_?DE?wE?@[?OK?_D?OI?@E?SM?_D?aP?PF?CO?bP?cP?@C?wf?{@?|@?@??GA?rA?k@?@Q?ks?M??dP?C?????DE?EE?AV?OQ?`F?gG?qA?sB?x??VH?AM?{M?fG?KD?PP?KG?[O?\O?p??kC?u@?KI?Q??SVAu@?GM?q@?[[CCK?DK?PG?_@?mF?nF?aC?CY??A?^E?P_?WM@_G?`G?@K?SH?_G?eP?aB?wN?eB?fP?qJ?kB@u@?gP?q??CXAKH?^F?A]?C[?]I?hP?@??WG?zD?Q@?`W?GY?[E?\E?aF?ku?zC?{C?A@?[T?DE?wE?p^?SK?PI?QI?`B?G\BE??iP?C?????cA?PF?QE?SV?BL?r@?Q?????CL?DL?A??ki?EL?FL?q@?sA@qA?fA?qD?kS?LA?kC?PX?{I?UC?JG?a@?OB?s@?VK?@C?OU?WK?fA?pC?{B?VB?ON?`C?{F?HM?IM?`Q????wB?KM?PB????]I?GE?@B?KW?mF?nF?AH?_Y?SC?k@?@??SC@E??jP?C?????E??kP?C?????E??lP?C?????E??mP?C?????E??nP?C?????E??oP?C?????E??pP?C?????E??qP?C?????E??rP?C?????E??sP?C?????E??tP?C?????E??uP?C?????E??vP?C?????~B?wP?B?????E??xP?C?????E??yP?C?????E??zP?C?????E??{P?C?????E??|P?C?????E??}P?C?????E??~P?C?????E???Q?C?????E??@Q?C?????E??AQ?C?????E??BQ?C?????E??CQ?C?????E??DQ?C?????E??EQ?C?????E??FQ?C?????XD?@A?Qd?Kz?eB?fB?AE?{LAeB?gB?QE?k^BcA?fA?pg?WK?FD?GQ?PQ?[W?HQ?Y??@A????FD?IQ?`@?WW?\H?fA?pB?SM?cO?JQ?P??[M@cO?dO?`??cP@cO?dO?@e@CU@cO?KQ?QF?G[@LQ?jI?QA?SP?MQ?jI?A@?GHANQ?{??P?????oG?YH?qD?_b?oG?zG?Q??GT?rD?GE?q@?Co?E??OQ?C?????Z??\??QQ?OG?mF?NE?@S?CW?rF?NE?@H?_z?oF?PQ?`F?SI?[I?fA?AB?c~?ZA?bL?PK?{Z?cA?sO?PL??S?DE?tO?`L?[S?uO?gA?PB?gE?uO?vO?PD?oD?tC?wO?@C?kU?TI?fA?`A??C?tC?fA?PH?CQ?bC?aC?pZ?w^?eA?fA?PW?wD?LF?MF?pG?gI?s@?OB?@??cZ?X??Y??`~Cwy?QQ?{??@@????X??RQ?Q??wy?SQ?Y??AA????X??TQ?a??{x?[I?UQ?QB?SA@VQ?[P?AB?Wb@E??WQ?C?????_E?`H?pA?sx?x??y??pI?[]@sJ?[P?@??sU?mF?nF?AI?cY?@P?fA?AC?cB?iE?jE?aE?_Q?iE?@A?Q??OI?TI?@A?a@?SI?@H?UI?aA?gj?vC??G?p]?GO?BI?QI?P??oA@XQ?YQ?pG?oI?BI?WF?`G?K@@K@?c@?P`?oO?{H?y??QB?gC?iI?jI?P??wM?kI?lI?`??[R?oF?lI?P@?_u?eB?hB?@??GQBE??ZQ?C?????u@?TJ?AB?OhAkN?lN?`@?gT?d??DC?A`?OG?QA?BC?A@?wB?EC?FC?A?????~J?[Q?B?????vC?RF?a??CE?u@?YD?qE?WQArD?YD?QB?OK?zC?jG?QK?W_Aa@?fA?QA?{J?|D?fA?AB?WQ?T@?U@?qB?SO?DE?EE?`b?wQ?rD?nH?QQ?CI?pN?qD?Q??[IIpN?qD?Q??OKI\Q?WF?A@?_C?tC?wO?AC?kU?TI?fA?aA??C?tC?fA?QH?CQ?KH?^F?qC?wY?KH?zG?Q??kQ?UD?LH?A?????]Q?^Q?B?????~I??J?A??WH?`F?gG?@??oB?_E?`H?@??gx?cD?dD?AD?wDBu@?KI?AF?SVArD?GE?A??wn?IB?HB?QR?kQ?wA?gC?QG?OL@HD?JD?pK?WO?WK?fA?`H?GC?VB?ON?P??{F?_H?AG?Q@?_A?^H?AG?a??GA?cA?dA?pH?[M?mB?IH?@??SE?zC?y??@??{N@zI?NK?pA?CG?_Q?`Q?E??kJ?zC?iG?Ae?SaAiE?eM?Qd?OK?@G?FM?an?gh?pN?aQ?a??CVIpN?aQ?a@?SYIFF?aQ?q@?WK?[I?AB?@H?S?@oG?XI?`Q?_f?d??PA?A`?gS?QA?f??A@?{A?QA?RA?A?????~J?bQ?B?????tA?{??@?????LA?@C?@??SM?p@?k@?@??{E@|I?}I?@??KM?~I??J?qE?[H?u@?xF?aD?cUCwF?@A?q`?[I?O@?_@?PD?GE@ZA?[A?@??_[?uO?gA?AF?oE?cQ?gA?QX?{B?dQ?fA?aD?{C?D@?fA?QE?kM?DE?EE?ab?wQ?O@?N@?Q??CR@eB?gB?aI?k^B{H?y??`D?gC?sJ?oI?`@?KV?rD?EF?AS?OX?LA?MA?pK?wC?\P?FN?qE?k`?\P?eQ?qR?{b?fQ?vB?q@????gQ?IM?QJ????hQ?IM?qD????wB?KM?QB????]I?hP?q@??F?]I?iQ?a??WB?@G?FM?aZ?_g?u@?qI?Q??g]@u@?GM?aA?[[C]I?^I?qA?cX?u@?v@?A@?O\@{@?|@?@_?sA?LF?fA?QK?_D?X??Y??py@Ks?HM?IM?QG????jQ?IM?qD????]I?kQ?q@?k\?]I?lQ?qC?w]?X@?mQ?qK?{T@eA?fA?P[??E?iE?fA?Q??oA?E??nQ?C?????l@?fA?a@?sa?zC?iG?qO?[`AzC?oQ?Q??{\AE??pQ?C?????CK?DK?P??O@?{@?|@?pc?CB?nD?qQ?aA?kJ?nD?rQ?QD??L?u@?xF?`D?cUCnD?pD?@??sC?BA?DA?pE?[WBEA?FA?@??Ws@cA?RK?`G?_T?vC??G?pB?GN?iE?dD?pb?sF?s@?t@?@O?GU?x??VH?PI?sM?q@?r@?@?????DE?EE?`H?oP?]D?fA?`??[F?_D?fA?@B?_D?E??sQ?C?????E??tQ?C?????E??uQ?C?????fG?KD?AH?CG?u@??D?A??{ZCB@?f??@|@Wr?K@?c@?@N?cL?[E?vQ?Q??K}?nA?HB?pO?ca?}G?dC?aC??C?s@?YA?@J?WW?g@?zA?`C?OH@cD?fD?PB?gJBrD?KI?AG?SL?X??qC?@@?Sl?E??wQ?C?????gE?aI?`??wD?E??xQ?C?????cA?mG?PJ@wd?cA?mG?@N@?e?E??yQ?C?????CK?DK?P@?O@?zQ?zG?Q@?g??{Q?zG?aD?o??QH?fA?AC?Cf?LD?tH?A@?Cp?LD?tH?Q??Ct?eC?Y??@??ki?zQ?zG?a??g??OF?MF?Q??[K?OF?`I?q??sA?IB?HB?AP?kQ?E??|Q?C?????oG?XI?PD@Oh?oG?pG?pE?oI@vJ?XC?aC?GJ?[H?GN?A??{K?s@?tG?PK?WY?[I?UQ?a@?OA@WI?jI?q@?wI?}Q?jI?AA?[|?~Q?fA?q@?Gd@VQ?fA?qQ?Cb@V???R?B?????oA?h@?`B?{S?rA?k@?@??[s?E??@R?C?????uF?vF?aC?[M?E??AR?C?????KH?^F?QM?SZ?oG?^F?`??Ge?oG?XI?@??Gf?E??BR?C?????iE?VF?AI?sS?x??fA?Q??_I?kI?fA?Q??wC?~J?CR?B?????\L?fA?QD?gD?mF?nF?`B?CY?LA?eG?AT?wL?fG?fA?qO?[D?rD?qD?Q]?_[?K@?tB?`I?{U?_H?fA?AD?KB?~I??J?@??WH?DR?@A?P??{J?DR?@A?pA?GK?cA?mG?P?@kd?yC?qO?@C?c^@zC?qO?`B?wG@|I?fA?AC?_J?\L?@A?qM?gE?ER?AB?QD?oL?FR?fA?q??OI?GR?fA?QH?OC?GR?HR?AD?cD?B@?dC?@??wk?wA?gA?@??{E?_N?@A?a@?KI?zC?y??pA?CO@IR?y??@??wj?Z??\??a@?kF?Z??JR?Q??{C?wF?@A?af?oI?KR??H?a??cC?KR??H?a??gS?@H??H?Q@??V?E??LR?C?????B@??B?@??Si?`F?}F?q@?gC?vC?XF?aC?wM?UF?fA?QA?sG?UF?fA?a@?kE?]??mE?Q??GQ?E??MR?C?????LA?MA?pF?WC?JA?f??@???G?UD?VD?Q??Kz?UD?NR?AC?[@@u@?v@?Q??O\@B??OR?B?????B@?\C?A??Sx?I@?dJ?AE?cd?|D?\M?A@?GX?MG?\M?AE?GG?fG?aM?P??[N?MG?LG?AB?gH?E??PR?C?????E??QR?C?????E??RR?C?????V??SR?B?????cA?sO?`_?SS?u@?TJ?AF?_hA~A?gA?AD??b?]C?fA?AO??e?s@?pM?q@?ST?g@?yA?q??SOAs@?uG?aE?WN?A??TR?B?????LD?~G?AH?Cm?UR?VR?QJ?{E?UR?fA?AB?WE?TI?fA?AB?{D?tC??H?a??kO?HC?@A?PL?sD?HD?WH?Pp?oF?zC?{C?QH?wT?zC?AM?AH?oYAE??WR?C?????~J?XR?B?????oG?pG?`F@?L@oG?TH?@??su@zD?LN?p@?oK?K@?fA?PE?[I?[E?fA?Q??Ko?YR?fA?Q??OC?nA?{??pi?Kd?`N?{C?AA?GZ?BI?QI?Q??oA@mF?NE?pA?KV?_E?`H?aC?Ot?s@?pM?p@?ST?I@?HB?@X?sa?ZR?KG?aA?cH?sJ?oI?`A?KV?\L?fA?aK?sD?[R?fA?A??SB?zC?_F?aC?co?[E?zO?QO?Gi?sM?tM?P??wR?|I?BJ?`H??`?\R?]R?@???G?E??^R?C?????B@?dC?`R?cl?DE?EE?@F?kP?DE?_R?`F?_N?u@?rE?@??Cq@E??`R?C?????u@?fA?a@?gZCzD?Q@?QE?WX?cD?fD?`R??KBcD?iD?qB?{ABu@?qI?AA?k]@vG?xG?A??[U?DI?fA?qE?[h?E??aR?C?????E??bR?C?????</div>
<span style="position:fixed; bottom: 0; right:0; padding: 2px 4px; background-color: #ffffe0; border-top: 1px solid #ffc000; border-left: 1px solid #ffc000; border-top-left-radius: 4px;"><span id="produced">Produced by <a href='https://github.com/jvm-profiling-tools/async-profiler'>async-profiler</a>&nbsp;</span><span id='match' style="display: none">Matched: <span id='matchval'></span>&nbsp;<span id='reset' title='Clear'>&#x274c;</span></span></span>

<h1 id="title">Heatmap, CPU</h1>

<canvas id='canvas'></canvas>
<div id='hl'><span></span></div>

<span id='status' style="position:fixed; bottom: 0; left:0; padding: 2px 4px; background-color: #ffffe0; border-top: 1px solid #ffc000; border-right: 1px solid #ffc000; border-top-right-radius: 4px; display: none">&nbsp;</span>
<script>
	// Copyright 2020 Andrei Pangin
	// Licensed under the Apache License, Version 2.0.
	'use strict';
	let root, rootLevel, px, pattern;
	let reverse = true;
	const levels = Array(0);
	for (let h = 0; h < levels.length; h++) {
		levels[h] = [];
	}

	const canvas = document.getElementById('canvas');
	let c = canvas.getContext('2d');
	const hl = document.getElementById('hl');
	const status = document.getElementById('status');

	const canvasWidth = canvas.offsetWidth;
	let canvasHeight = canvas.offsetHeight;
	canvas.style.width = canvasWidth + 'px';
	canvas.width = canvasWidth * (devicePixelRatio || 1);
	canvas.height = canvasHeight * (devicePixelRatio || 1);
	if (devicePixelRatio) c.scale(devicePixelRatio, devicePixelRatio);
	c.font = document.body.style.font;

    const search = typeof searchIterative === 'function' ? searchIterative : searchSimple;
    const init = typeof renderHeatmap === 'function' ? renderHeatmap : render;

	const palette = [
		[0xb2e1b2, 20, 20, 20],
		[0x50e150, 30, 30, 30],
		[0x50cccc, 30, 30, 30],
		[0xe15a5a, 30, 40, 40],
		[0xc8c83c, 30, 30, 10],
		[0xe17d00, 30, 30,  0],
		[0xcce880, 20, 20, 20],
	];

	function getColor(p) {
		const v = Math.random();
		return '#' + (p[0] + ((p[1] * v) << 16 | (p[2] * v) << 8 | (p[3] * v))).toString(16);
	}

	function f(level, left, width, type, title, inln, c1, int) {
		levels[level].push({left: left, width: width, color: getColor(palette[type]), title: title,
			details: (int ? ', int=' + int : '') + (c1 ? ', c1=' + c1 : '') + (inln ? ', inln=' + inln : '')
		});
	}

	function samples(n) {
		return n === 1 ? '1 sample' : n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + ' samples';
	}

	function pct(a, b) {
		return a >= b ? '100' : (100 * a / b).toFixed(2);
	}

	function findFrame(frames, x) {
		let left = 0;
		let right = frames.length - 1;

		while (left <= right) {
			const mid = (left + right) >>> 1;
			const f = frames[mid];

			if (f.left > x) {
				right = mid - 1;
			} else if (f.left + f.width <= x) {
				left = mid + 1;
			} else {
				return f;
			}
		}

		if (frames[left] && (frames[left].left - x) * px < 0.5) return frames[left];
		if (frames[right] && (x - (frames[right].left + frames[right].width)) * px < 0.5) return frames[right];

		return null;
	}

    const marked = [];

    function render(newRoot, newLevel, minLevel) {
        minLevel = minLevel || 0;
        if (root && minLevel === 0) {
			c.fillStyle = '#ffffff';
			c.fillRect(0, 0, canvasWidth, canvasHeight);
		}

		root = newRoot || levels[0][0];
		rootLevel = newLevel || 0;
		px = canvasWidth / root.width;

		const x0 = root.left;
		const x1 = x0 + root.width;

		if (minLevel === 0) {
		    marked.length = 0;
        }

		function mark(f) {
			return marked[f.left] >= f.width || (marked[f.left] = f.width);
		}

		function totalMarked() {
			let total = 0;
			let left = 0;
			Object.keys(marked).sort(function(a, b) { return a - b; }).forEach(function(x) {
				if (+x >= left) {
					total += marked[x];
					left = +x + marked[x];
				}
			});
			return total;
		}

		function drawFrame(f, y, alpha) {
			if (f.left < x1 && f.left + f.width > x0) {
                let match = pattern && pattern.test(f.title) && mark(f);
                const fw = f.width * px;
                if (fw < 0.1) {
                    return;
                }
                c.fillStyle = match ? '#ee00ee' : f.color;
				c.fillRect((f.left - x0) * px, y, fw, 15);

				if (fw >= 21) {
					const chars = Math.floor(fw / 7);
					const title = f.title.length <= chars ? f.title : f.title.substring(0, chars - 2) + '..';
					c.fillStyle = '#000000';
					c.fillText(title, Math.max(f.left - x0, 0) * px + 3, y + 12, fw - 6);
				}

				if (alpha) {
					c.fillStyle = 'rgba(255, 255, 255, 0.5)';
					c.fillRect((f.left - x0) * px, y, fw, 15);
				}
			}
		}

		for (let h = minLevel; h < levels.length; h++) {
			const y = reverse ? h * 16 : canvasHeight - (h + 1) * 16;
			const frames = levels[h];
			for (let i = 0; i < frames.length; i++) {
				drawFrame(frames[i], y, h < rootLevel);
			}
		}

		return totalMarked();
	}

	canvas.onmousemove = function() {
		const h = Math.floor((reverse ? event.offsetY : (canvasHeight - event.offsetY)) / 16);
		if (h >= 0 && h < levels.length) {
			const f = findFrame(levels[h], event.offsetX / px + root.left);
			if (f) {
				hl.style.left = (Math.max(f.left - root.left, 0) * px + canvas.offsetLeft) + 'px';
				hl.style.width = (Math.min(f.width, root.width) * px) + 'px';
				hl.style.top = ((reverse ? h * 16 : canvasHeight - (h + 1) * 16) + canvas.offsetTop) + 'px';
				hl.firstChild.textContent = f.title;
				hl.style.display = 'block';
				let details = f.details || '';
				canvas.title = f.title + '\n(' + samples(f.width) + details + ', ' + pct(f.width, levels[0][0].width) + '%)';
				canvas.style.cursor = 'pointer';
				canvas.onclick = function() {
					if (f !== root) {
						render(f, h);
						canvas.onmousemove();
					}
				};
				status.textContent = 'Function: ' + canvas.title;
                status.style.display = 'inline';
				return;
			}
		}
		canvas.onmouseout();
	}

	canvas.onmouseout = function() {
		hl.style.display = 'none';
		status.textContent = '\xa0';
        status.style.display = 'none';
		canvas.title = '';
		canvas.style.cursor = '';
		canvas.onclick = '';
	}

    window.onkeydown = function() {
        if (event.ctrlKey && event.keyCode === 70) {
            event.preventDefault();
            search(true);
        } else if (event.keyCode === 27) {
            search(false);
        }
    }

    document.getElementById('reset').onclick = function() {
        search(false);
    }



    class DataBuffer {
        data;
        pos = 0;
        constructor(encodedData) {
            this.data = encodedData;
        }

        nextVarInt() {
            let res = 0;
            let shift = 0;
            let b;
            do {
                b = this.byteAt(this.pos++);
                res |= (b & 0x1F) << shift
                shift += 5;
            } while (b >= 0x20)
            return res;
        }

        byteAt(pos) {
            return this.data.charCodeAt(pos) - 63;
        }

        int30(pos) {
            return (this.byteAt(pos++) << 0)
                | (this.byteAt(pos++) << 6)
                | (this.byteAt(pos++) << 12)
                | (this.byteAt(pos++) << 18)
                | (this.byteAt(pos) << 24);
        }

        int36(pos) {
            return (this.byteAt(pos++) << 0)
                | (this.byteAt(pos++) << 6)
                | (this.byteAt(pos++) << 12)
                | (this.byteAt(pos++) << 18)
                | (this.byteAt(pos++) << 24)
                | (this.byteAt(pos++) << 30);
        }

        varInt(pos) {
            let res = 0;
            let shift = 0;
            let b;
            do {
                b = this.byteAt(pos++);
                res |= (b & 0x1F) << shift
                shift += 5;
            } while (b >= 0x20)
            return res;
        }

    }

    class HeatmapCollection extends DataBuffer {

        maxZoom;
        blocks;
        zoomToCounts;
        zoomToMaxes;
        zoom;

        constructor(encodedData) {
            super(encodedData);

            this.maxZoom = this.nextVarInt();   // fixme
            this.maxZoom = 3;

            const startMethodsCount = this.nextVarInt();
            const starts = new Set();
            for (let i = 0; i < startMethodsCount; i++) {
                starts.add(this.nextVarInt());
            }

            const lz = new Lz78Data(this, starts);

            let max = 1;

            let prevByte = -1;
            const blocksCount = this.nextVarInt();
            let counts = new Uint32Array(blocksCount);
            for (let i = 0; i < blocksCount; i++) {
                let v = 0;
                let p = 0;
                let hasMore = false;
                do {
                    if (prevByte === -1) {
                        prevByte = this.byteAt(this.pos++);
                        hasMore = (prevByte >>> 5) === 1;
                        v |= ((prevByte >>> 3) & 3) << p;
                        prevByte &= 7;
                    } else {
                        hasMore = (prevByte >>> 2) === 1;
                        v |= (prevByte & 3) << p;
                        prevByte = -1;
                    }
                    p += 2;
                } while (hasMore);
                counts[i] = v;
                max = Math.max(max, v);
            }

            this.blocks = lz.decode(counts);

            this.zoomToCounts = new Array(this.maxZoom);
            this.zoomToMaxes = new Array(this.maxZoom);

            this.zoomToCounts[0] = counts;
            this.zoomToMaxes[0] = max;

            for (let z = 1; z < zoomToGroupSize.length; z++) {
                const size = zoomToGroupSize[z] / zoomToGroupSize[z - 1];
                const nextCounts = new Uint32Array(Math.ceil(counts.length / size));
                for (let i = 0; i < counts.length; i++) {
                    const index = (i / size) | 0;
                    nextCounts[index] += counts[i];
                    max = Math.max(max, nextCounts[index]);
                }
                this.zoomToCounts[z] = counts = nextCounts;
                this.zoomToMaxes[z] = max;
            }

            this.data = null;
        }

        setZoom(zoom) {
            this.zoom = zoom;
        }

        heatmap() {
            return this.zoomToCounts[this.zoom];
        }

        max() {
            return this.zoomToMaxes[this.zoom];
        }

        currentTimeBlock() {
            // FIXME 20 is hardcoded
            return 20 * zoomToGroupSize[this.zoom];
        }

        startBlock() {
            const blockMs = this.currentTimeBlock();
            const timeBlockMs = blockMs * heatHeight * 20;
            return Math.floor(startMs % timeBlockMs / blockMs);
        }

        count() {
            return Math.ceil((this.heatmap().length + this.startBlock()) / 20 / heatHeight) * 20 * heatHeight;
        }

    }

    class LzChunk extends Uint32Array {
        constructor(size) {
            super(size);
        }

        copyWithNext(element) {
            let result = new LzChunk(this.length + 1);
            result.set(this);
            result[this.length] = element;
            return result;
        }
    }

    class Lz78Data {
        data;
        starts;
        lz78;

        tmp = [];
        prevSubTreeId = -1;

        constructor(data, starts) {
            this.data = data;
            this.starts = starts;

            this.lz78 = [new LzChunk(0)];
        }

        decode(counts) {
            const synonymsCount = this.data.nextVarInt();
            const synonyms = new Uint32Array(synonymsCount);
            for (let i = 0; i < synonymsCount; i++) {
                synonyms[i] = this.data.nextVarInt();
            }

            const tailsCount = this.data.nextVarInt();
            const tails = new Uint32Array(tailsCount);
            for (let i = 0; i < tailsCount; i++) {
                const tail = this.data.nextVarInt();
                tails[i] = (tail < synonyms.length ? synonyms[tail] : tail) - synonymsCount;
            }

            const result = new Array(counts.length);
            for (let i = 0; i < counts.length; i++) {
                result[i] = new Array(counts[i]);
            }

            let thisChunk = null;
            let currentTail = 0;
            const tmp = [];
            let t = -1;
            for (let block of result) {
                for (let i = 0; i < block.length; i++, currentTail++) {
                    t++;
                    const tailId = tails[currentTail];
                    if (tailId < this.lz78.length) {
                        const tail = this.lz78[tailId];
                        if (tail.length !== 0 && this.starts.has(tail[0])) {
                            console.log(t, 'only', tailId);
                            block[i] = tail;
                            continue;
                        }
                    }

                    if (thisChunk === null) {
                        const chunkId = this.data.nextVarInt();
                        const prevChunk = this.lz78[(chunkId < synonyms.length ? synonyms[chunkId] : chunkId) - synonymsCount];
                        const addMethodId = this.data.nextVarInt();
                        console.log(t, 'chunk', chunkId, addMethodId);
                        thisChunk = prevChunk.copyWithNext(addMethodId);
                        this.lz78.push(thisChunk);
                    }

                    tmp.length = 0;
                    tmp.push(...thisChunk); // FIXME it is ok to push as is, or even as lz78 index

                    while (true) {
                        const chunkId = this.data.nextVarInt();
                        const prevChunk = this.lz78[(chunkId < synonyms.length ? synonyms[chunkId] : chunkId) - synonymsCount];
                        const addMethodId = this.data.nextVarInt();
                        thisChunk = prevChunk.copyWithNext(addMethodId);
                        this.lz78.push(thisChunk);
                        console.log(t, 'chunk', chunkId, addMethodId);

                        if (this.starts.has(thisChunk[0])) {
                            console.log(t, 'starts', thisChunk[0]);
                            console.log(t, 'ends', tailId);
                            const tail = this.lz78[tailId];
                            tmp.push(...tail);
                            block[i] = new Uint32Array(tmp);
                            break;
                        } else {
                            tmp.push(...thisChunk);
                        }
                    }
                }
            }

            return result;
        }
    }

    class Queue {
        data = new Array(1024);
        first = 0;
        afterLast = 0;

        push(e) {
            let a = this.afterLast;
            let d = this.data;
            d[a++] = e;
            if (a >= this.data.length) {
                a = 0;
            }
            if (a === this.first) {
                let d2 = new Array(d.length * 2);
                let i = 0;
                for (let p = a; p < d.length; p++) {
                    d2[i++] = d[p];
                }
                for (let p = 0; p < a; p++) {
                    d2[i++] = d[p];
                }
                this.data = d2;
                this.first = 0;
                this.afterLast = i;
            } else {
                this.afterLast = a;
            }
        }

        shift() {
            let i = this.first;
            let r = this.data[i++];
            if (i >= this.data.length) {
                this.first = 0;
            } else {
                this.first = i;
            }
            return r;
        }

        size() {
            let r = this.afterLast - this.first;
            if (r < 0) {
                return r + this.data.length;
            }
            return r;
        }

        reset() {
            this.first = this.afterLast = 0;
        }
    }

    function claimHtml(id) {
        let e = document.getElementById(id);
        let r = e.innerHTML;
        e.remove();
        return r;
    }

    let sq = 5;
    let sqPx = sq;
    let sqScale = 1;
    const canvasScrollPadding = 200;
    let canvasTimeHeight = 12;
    let canvasTimeHeightPx = 12;
    let ticksPerSecond = 1000000000;
    let startMs = 1666208293981;

    const zoomToGroupSize = [
        1,              // 20 ms
        50,             // 1 s
        50 * 5,         // 5 s
        50 * 60         // 1 m
    ];
    const zoomToHeight = [50, 60, 60, 60]

    let methods = new DataBuffer(claimHtml("methods"));
    let executionsHeatmap = new HeatmapCollection(claimHtml("executionsHeatmap"));
    let cpool = ["all","","libsystem_pthread.dylib","thread_start","_pthread_start","libjvm.dylib","thread_native_entry","Thread::call_run","JavaThread::run","JavaThread::thread_main_inner","attach_listener_thread_entry","load_agent","JvmtiExport::load_agent_library","libasyncProfiler.so","Agent_OnAttach","Profiler::run","Profiler::runInternal","LockTracer::start","WatcherThread::run","WatcherThread::sleep","Monitor::wait_without_safepoint_check","os::PlatformMonitor::wait","libsystem_kernel.dylib","__psynch_cvwait","jdk.internal.net.http.HttpClientImpl$SelectorManager","run","sun.nio.ch.SelectorImpl","select","lockAndDoSelect","sun.nio.ch.KQueueSelectorImpl","doSelect","sun.nio.ch.KQueue","poll","kevent","processEvents","clearInterrupt","sun.nio.ch.IOUtil","drain","read","GangWorker::initialize","GangWorker::loop","semaphore_wait_trap","VMThread::run","VMThread::loop","VMThread::inner_execute","VMThread::evaluate_operation","VM_Operation::evaluate","VM_G1CollectForAllocation::doit","G1CollectedHeap::do_collection_pause_at_safepoint","G1CollectedHeap::do_collection_pause_at_safepoint_helper","G1CollectedHeap::post_evacuate_collection_set","G1CollectedHeap::post_evacuate_cleanup_2","G1BatchedGangTask::~G1BatchedGangTask","G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::~FreeCollectionSetTask","libsystem_malloc.dylib","szone_size","java.util.ArrayList","forEach","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$405.0x0000000800dbf1d8","accept","lambda$run$3","handleEvent","jdk.internal.net.http.SocketTube$SocketFlowEvent","handle","jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadEvent","signalEvent","jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription","signalReadable","jdk.internal.net.http.common.SequentialScheduler","runOrSchedule","jdk.internal.net.http.common.SequentialScheduler$SchedulableTask","jdk.internal.net.http.SocketTube$SocketFlowTask","jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$284.0x0000000800daa9b0","jdk.internal.net.http.Http1AsyncReceiver$Http1TubeSubscriber","onNext","jdk.internal.net.http.Http1AsyncReceiver","asyncReceive","jdk.internal.net.http.HttpClientImpl$DelegatingExecutor","execute","java.util.concurrent.ThreadPoolExecutor","java.util.concurrent.SynchronousQueue","offer","java.util.concurrent.SynchronousQueue$TransferStack","transfer","java.util.concurrent.SynchronousQueue$TransferStack$SNode","tryMatch","java.util.concurrent.locks.LockSupport","unpark","jdk.internal.misc.Unsafe","Unsafe_Unpark","__psynch_cvsignal","one.nio.server.SelectorThread","one.nio.net.JavaSelector","java.lang.Thread","java.util.concurrent.ThreadPoolExecutor$Worker","runWorker","jdk.internal.net.http.common.SequentialScheduler$CompleteRestartableTask","jdk.internal.net.http.common.SequentialScheduler$LockingRestartableTask","jdk.internal.net.http.Http1AsyncReceiver$$Lambda$310.0x0000000800dafdd8","flush","jdk.internal.net.http.Http1Response$HeadersReader","tryAsyncReceive","jdk.internal.net.http.Http1Response$Receiver","java.util.concurrent.CompletableFuture","complete","postComplete","java.util.concurrent.CompletableFuture$UniApply","tryFire","java.util.concurrent.CompletableFuture$UniCompletion","claim","java.util.concurrent.CompletableFuture$Completion","postFire","java.util.concurrent.CompletableFuture$UniCompose","jdk.internal.net.http.MultiExchange$$Lambda$224.0x0000000800d90910","apply","jdk.internal.net.http.MultiExchange","lambda$responseAsync0$4","java.lang.String","isEmpty","ThreadsListHandle::cv_internal_thread_to_JavaThread","ok.dht.test.ilin.servers.ExpandableHttpServer$$Lambda$201.0x0000000800d864b0","ok.dht.test.ilin.servers.ExpandableHttpServer","lambda$handleRequest$1","ok.dht.test.ilin.sharding.ShardHandler","executeRequest","jdk.internal.net.http.HttpClientFacade","send","jdk.internal.net.http.HttpClientImpl","get","waitingGet","java.util.concurrent.ForkJoinPool","managedBlock","unmanagedBlock","java.util.concurrent.CompletableFuture$Signaller","block","park","LockTracer::UnsafeParkHook","JNIHandleBlock::allocate_handle","one.nio.net.Session","process","one.nio.http.HttpSession","processRead","one.nio.net.JavaSocket","sun.nio.ch.SocketChannelImpl","readIntoNativeBuffer","sun.nio.ch.SocketDispatcher","read0","sendAsync","responseAsync","completeAsync","java.util.concurrent.CompletableFuture$AsyncSupply","jdk.internal.net.http.MultiExchange$$Lambda$220.0x0000000800d8bcd8","lambda$responseAsync0$2","responseAsyncImpl","jdk.internal.net.http.Exchange","responseAsyncImpl0","uniHandleStage","uniHandle","jdk.internal.net.http.Exchange$$Lambda$330.0x0000000800db2d20","lambda$responseAsyncImpl0$10","checkFor407","jdk.internal.net.http.Exchange$$Lambda$241.0x0000000800d93128","lambda$responseAsyncImpl0$9","jdk.internal.net.http.Http1Exchange","sendHeadersAsync","jdk.internal.net.http.Http1Response","<init>","subscribe","jdk.internal.net.http.common.SequentialScheduler$TryEndDeferredCompleter","Unsafe_Park","Parker::park","getTask","parkNanos","jdk.internal.net.http.Http1Response$BodyReader","jdk.internal.net.http.ResponseContent$FixedLengthBodyParser","jdk.internal.net.http.Http1Response$Http1BodySubscriber","onComplete","jdk.internal.net.http.ResponseSubscribers$ByteArraySubscriber","java.util.concurrent.CompletableFuture$UniWhenComplete","uniWhenComplete","jdk.internal.net.http.ResponseSubscribers$$Lambda$516.0x0000000800dd8460","jdk.internal.net.http.ResponseSubscribers","lambda$getBodyAsync$2","jdk.internal.net.http.SocketTube","readAvailable","thenCompose","uniComposeStage","jdk.internal.net.http.Http1Exchange$$Lambda$379.0x0000000800dbb760","lambda$sendHeadersAsync$4","connectFlows","jdk.internal.net.http.SocketTube$InternalReadPublisher","signalSubscribe","registerEvent","register","SharedRuntime::complete_monitor_locking_C","SharedRuntime::monitor_enter_helper","ObjectSynchronizer::enter","ObjectMonitor::enter","ObjectMonitor::EnterI","os::PlatformEvent::park","onSubscribe","jdk.internal.net.http.SocketTube$InternalWriteSubscriber","SharedRuntime::complete_monitor_unlocking_C","SharedRuntime::monitor_exit_helper","ObjectMonitor::ExitEpilog","java.util.concurrent.CompletableFuture$UniHandle","jdk.internal.net.http.MultiExchange$$Lambda$396.0x0000000800dbddf0","lambda$responseAsyncImpl$7","cancelTimer","jdk.internal.net.http.common.Log","logTrace","ObjectMonitor::TrySpin","ObjectMonitor::NotRunnable","pthread_jit_write_protect_np","java.util.Optional","isPresent","JvmtiExport::post_monitor_contended_entered","LockTracer::MonitorContendedEntered","LockTracer::recordContendedLock","Profiler::recordSample","jvmti_GetStackTrace","JvmtiEnvBase::get_stack_trace","vframe::java_sender","vframe::sender","vframe::new_vframe","CompiledMethod::scope_desc_at","filterChain","jdk.internal.net.http.FilterFactory","getFilterChain","java.lang.Class","getConstructor","getConstructor0","privateGetDeclaredConstructors","reflectionData","java.lang.ref.SoftReference","jdk.internal.net.http.Http1Response$$Lambda$490.0x0000000800dce120","onFinished","jdk.internal.net.http.HttpConnection","closeOrReturnToCache","jdk.internal.net.http.ConnectionPool","returnToPool","registerCleanupTrigger","jdk.internal.net.http.ConnectionPool$CleanupTrigger","_complete_monitor_locking_Java","handlePendingDelegate","java.lang.invoke.Invokers$Holder","linkToTargetMethod","java.lang.invoke.DirectMethodHandle$Holder","newInvokeSpecial","java.lang.invoke.DirectMethodHandle","allocateInstance","OptoRuntime::new_instance_C","InstanceKlass::allocate_instance","MemAllocator::allocate","libsystem_platform.dylib","_sigtramp","sendResponse","writeResponse","write","one.nio.net.Session$ArrayQueueItem","writeFromNativeBuffer","sun.nio.ch.FileDispatcherImpl","write0","establishExchange","jdk.internal.net.http.ExchangeImpl","jdk.internal.net.http.ExchangeImpl$$Lambda$249.0x0000000800d969f8","lambda$get$0","createExchangeImpl","JvmtiExport::post_monitor_contended_enter","jvmti_SetTag","JvmtiEnv::SetTag","JvmtiTagMap::set_tag","Mutex::lock_without_safepoint_check","_pthread_mutex_firstfit_lock_slow","__psynch_mutexwait","java.util.concurrent.CompletableFuture$UniRelay","completeRelay","java.lang.invoke.VarHandleGuards","guard_LLL_Z","java.lang.invoke.VarHandleReferences$FieldInstanceReadWrite","compareAndSet","jdk.internal.net.http.AsyncTriggerEvent","jdk.internal.net.http.SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$290.0x0000000800dabd58","handleSubscribeEvent","handlePending","jdk.internal.net.http.SocketTube$InternalReadPublisher$ReadSubscription","signalOnSubscribe","unknown_Java","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$418.0x0000000800dc4f48","requestMore","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$WriteSubscription","jdk.internal.net.http.Http1Exchange$Http1Publisher$Http1WriteSubscription","request","jdk.internal.net.http.Http1Exchange$Http1Publisher$WriteTask","tryFlushCurrent","writeAvailable","java.nio.channels.SocketChannel","writev","writev0","processHttpBuffer","handleParsedRequest","handleRequest","selectNow","resumeReadEvent","resumeEvent","eventUpdated","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$298.0x0000000800dad140","startSubscription","java.nio.ByteBuffer","wrap","java.net.http.HttpHeaders","firstValue","allValues","java.util.Collections$UnmodifiableMap","java.util.TreeMap","getEntry","getEntryUsingComparator","java.lang.String$CaseInsensitiveComparator","compare","coder","thenApply","uniApplyStage","uniApplyNow","jdk.internal.net.http.ExchangeImpl$$Lambda$314.0x0000000800db0900","lambda$createExchangeImpl$2","h2Upgrade","jdk.internal.net.http.HttpRequestImpl","setH2Upgrade","jdk.internal.net.http.Http2ClientImpl","getSettingsString","getClientSettings","getParameter","jdk.internal.net.http.common.Utils","getIntegerNetProperty","java.security.AccessController","doPrivileged","executePrivileged","jdk.internal.net.http.common.Utils$$Lambda$120.0x0000000800c9ba38","lambda$getIntegerNetProperty$13","sun.net.NetProperties","getInteger","java.lang.System","getProperty","java.util.Properties","java.util.concurrent.ConcurrentHashMap","hashCode","retrieveProxy","sun.net.spi.DefaultProxySelector","sun.net.spi.DefaultProxySelector$3","java.lang.StringBuilder","append","java.lang.AbstractStringBuilder","putStringAt","java.net.URI","create","java.net.URI$Parser","parse","parseHierarchical","parseAuthority","parseServer","parseHostname","scan","match","OptoRuntime::new_array_nozero_C","CollectedHeap::array_allocate","MemAllocator::Allocation::notify_allocation","jdk.internal.net.http.HttpRequestBuilderImpl","uri","checkURI","toLowerCase","java.lang.StringLatin1","PreserveExceptionMark::PreserveExceptionMark","jdk.internal.net.http.Http1AsyncReceiver$Http1AsyncDelegateSubscription","jvmti_GetClassSignature","JvmtiEnv::GetClassSignature","os::malloc","nanov2_malloc","pthread_cond_signal","java.util.concurrent.LinkedBlockingQueue","take","java.util.concurrent.locks.ReentrantLock","unlock","java.util.concurrent.locks.AbstractQueuedSynchronizer","release","signalNext","java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject","await","java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionNode","jdk.internal.net.http.Http1Request","headers","toString","newString","AllocTracer::trapHandler","_kernelrpc_mach_port_deallocate_trap","one.nio.server.Server","incRequestsProcessed","java.util.concurrent.atomic.LongAdder","increment","add","JNIEnv_::CallStaticObjectMethod","jni_CallStaticObjectMethodV","jni_invoke_static","JavaCalls::call_helper","AbstractInterpreter::size_top_interpreter_activation","remaining","OptoRuntime::new_array_C","InstanceKlass::allocate_objArray","compiledVFrame::sender","compiledVFrame::compiledVFrame","vframe::vframe","hasOutgoing","java.util.concurrent.ConcurrentLinkedDeque","peekFirst","mach_absolute_time","purgeTimeoutsAndReturnNextDeadline","java.time.Instant","now","java.time.Clock","currentInstant","jdk.internal.misc.VM","getNanoTimeAdjustment","JVM_GetNanoTimeAdjustment","oopDesc::metadata_field","jdk.internal.net.http.common.Demand","reset","jdk.internal.net.http.Http1HeaderParser","resumeOrSecondCR","addHeaderFromString","isValidName","wakeup","casHead","registerTimer","wakeupSelector","write1","equals","createHttp1Exchange","getConnection","checkOpen","collectHeaders0","collectHeaders1","java.util.function.BiPredicate$$Lambda$414.0x0000000800d1fac8","test","java.util.function.BiPredicate","lambda$and$0","jdk.internal.net.http.common.Utils$$Lambda$138.0x0000000800c9f940","lambda$static$12","java.util.function.Predicate$$Lambda$128.0x0000000800cdf4b8","java.util.function.Predicate","lambda$negate$1","jdk.internal.net.http.common.Utils$$Lambda$127.0x0000000800c9eb70","lambda$static$5","equalsIgnoreCase","regionMatches","regionMatchesCI","java.lang.CharacterDataLatin1","toUpperCase","jdk.internal.net.http.common.MinimalFuture","newIncompleteFuture","jbyte_arraycopy","jni_GetObjectClass","one.nio.http.Response","toBytes","one.nio.util.ByteArrayBuilder","one.nio.util.Utf8","readBodyAsync","readBody","firstValueAsLong","java.util.ImmutableCollections$MapN","probe","java.util.TreeSet","resumeOrEndHeaders","of","headersOf","jdk.internal.net.http.HttpClientImpl$$Lambda$401.0x0000000800dbe8f8","lambda$sendAsync$0","unreference","java.util.concurrent.atomic.AtomicLong","JNIHandles::make_local","put","addEntryToEmptyMap","jdk.internal.net.http.common.HttpHeadersBuilder","jdk.internal.net.http.Http1Request$$Lambda$301.0x0000000800dae350","ofEpochSecond","java.lang.Math","floorDiv","ok.dht.test.ilin.servers.ExpandableHttpServer$$Lambda$536.0x0000000800d868e8","lambda$handleRequest$0","one.nio.http.HttpServer","RequestHandler2_getEntity","ScopeDesc::sender","ScopeDesc::decode_body","CompressedReadStream::read_int","purgeExpiredConnectionsAndReturnNextDeadline","jdk.internal.net.http.ConnectionPool$ExpiryList","purgeUntil","java.util.LinkedList","descendingIterator","java.util.LinkedList$DescendingIterator","java.util.LinkedList$ListItr","checkRequestMore","__gettimeofday","sun.nio.ch.Util","getTemporaryDirectBuffer","sun.nio.ch.Util$BufferCache","getBytes","jbyte_disjoint_arraycopy","_platform_strlen","Parker::unpark","ThreadSafepointState::handle_polling_page_exception","build","java.net.http.HttpHeaders$$Lambda$203.0x0000000800d0bda0","lambda$headersOf$1","java.lang.Integer","compareTo","java.util.concurrent.atomic.AtomicReference","ResourceArea::rollback_to","JvmtiThreadEventMark::JvmtiThreadEventMark","JavaThread::threadObj","whenComplete","uniWhenCompleteStage","unipush","tryPushStack","guard_LL_V","set","lock","java.util.concurrent.locks.ReentrantLock$Sync","acquire","java.util.concurrent.locks.ReentrantLock$NonfairSync","tryAcquire","java.util.concurrent.locks.AbstractOwnableSynchronizer","setExclusiveOwnerThread","RegisterMap::RegisterMap","addAndGet","os::os_exception_wrapper","jvmti_GetTag","ThreadShadow::clear_pending_exception","java.lang.reflect.Constructor","newInstance","newInstanceWithCaller","java.lang.reflect.AccessibleObject","checkAccess","verifyAccess","slowVerifyAccess","jdk.internal.reflect.Reflection","verifyMemberAccess","jvmti_GetCurrentThread","JavaCallWrapper::~JavaCallWrapper","increase","getAndAccumulate","parseRequest","one.nio.http.Request","setHeader","addEntry","fixAfterInsertion","rotateRight","java.lang.Object","thread_self_trap","getOutgoing","initialTryLock","java.util.HashMap","computeIfAbsent","resize","checkChars","jdk.internal.net.http.MultiExchange$$Lambda$392.0x0000000800dbd4d0","lambda$responseAsyncImpl$6","responseFilters","jdk.internal.net.http.AuthenticationFilter","response","getCache","java.util.WeakHashMap","hash","JVM_IHashCode","requestFilters","jdk.internal.net.http.RedirectFilter","sliceWithLimitedCapacity","limit","java.nio.Buffer","G1BarrierSet::write_ref_array_work","tryRelease","setState","jvmti_Deallocate","os::free","JavaCallWrapper::JavaCallWrapper","jdk.internal.net.http.Http1Response$$Lambda$484.0x0000000800dcd670","lambda$readBody$3","addTrailingOperation","jdk.internal.net.http.HttpConnection$TrailingOperations","java.util.IdentityHashMap","identityHashCode","JvmtiEnvBase::is_valid","processUpdateQueue","JavaThread::last_java_vframe","Arena::Amalloc","jdk.internal.net.http.Http1Exchange$Http1Publisher","offerLast","linkLast","newNode","JNIHandleBlock::release_block","grow","getConnectionFor","putConnection","getNode","jdk.internal.net.http.ConnectionPool$CacheKey","java.util.Objects","java.net.InetSocketAddress","java.net.InetSocketAddress$InetSocketAddressHolder","jdk.internal.net.http.ResponseTimerEvent","jdk.internal.net.http.TimeoutEvent","plus","java.time.Duration","addTo","java.util.concurrent.ForkJoinTask","compareAndSetForkJoinTaskTag","casStatus","guard_LII_Z","java.lang.invoke.VarForm","getMemberName","I2C/C2I adapters","libdyld.dylib","tlv_get_addr","ScopeDesc::ScopeDesc","appendToOutgoing","compareToCI","_platform_memmove","CompilationPolicy::must_be_compiled","trim","java.net.http.HttpRequest","newBuilder","getDebugLogger","jdk.internal.net.http.common.DebugLogger","createHttpLogger","levelEnabledFor","frame::real_sender","frame::sender","frame::sender_for_compiled_frame","java.lang.Iterable","java.net.http.HttpHeaders$$Lambda$419.0x0000000800dc5170","lambda$headersOf$0","jdk.internal.net.http.Http1Request$$Lambda$427.0x0000000800dc63b0","lambda$collectHeaders0$1","java.util.Collection","stream","java.util.List","spliterator","java.util.AbstractList$RandomAccessSpliterator","JvmtiEnvBase::jvmtiMalloc","_pthread_cond_wait","pthread_testcancel","remove","java.util.ArrayDeque","pollFirst","indexOf","jdk.internal.net.http.Http1Response$$Lambda$465.0x0000000800dc9ee0","lambda$readHeadersAsync$0","unsubscribe","ensureCapacityInternal","java.util.Arrays","copyOf","zero_blocks","resumeOrLF","java.nio.HeapByteBuffer","nextGetIndex","processReadyEvents","java.util.HashSet","putVal","java.util.LinkedHashMap","linkNodeLast","jdk.internal.net.http.HttpClientImpl$SelectorAttachment","concat","java.lang.StringConcatHelper","simpleConcat","prepend","length","tryDecrement","decreaseAndGet","nmethod::metadata_at","Arena::grow","jdk.internal.net.http.Exchange$$Lambda$387.0x0000000800dbc9a0","lambda$responseAsyncImpl0$8","completeValue","jdk.internal.net.http.Exchange$$Lambda$237.0x0000000800d92808","java.util.AbstractSequentialList","iterator","java.util.AbstractList","listIterator","node","java.util.ArrayList$Itr","next","at","charAt","os::current_thread_enable_wx","JavaThread::pd_last_frame","CodeCache::find_blob","CodeCache::find_blob_unsafe","CodeCache::get_code_heap_containing","jdk.internal.net.http.Http1Response$$Lambda$491.0x0000000800dce9c0","lambda$readBody$1","JavaThread::is_Java_thread","java.util.stream.ReferencePipeline","findFirst","java.util.stream.AbstractPipeline","evaluate","java.util.stream.FindOps$FindOp","evaluateSequential","wrapAndCopyInto","copyInto","copyIntoWithCancel","java.util.Spliterator","getExactSizeIfKnown","estimateSize","getFence","copyOfRange","ObjectSynchronizer::inflate","map","jdk.internal.net.http.HttpConnection$$Lambda$531.0x0000000800dda5e8","lambda$closeOrReturnToCache$2","ObjectMonitor::TryLock","ChunkPool::allocate","ThreadCritical::ThreadCritical","iteratorFor","sun.nio.ch.Util$2","keySet","java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet","java.util.Collections$UnmodifiableMap$UnmodifiableEntrySet$1","substring","G1EvacuateRegionsBaseTask::work","G1EvacuateRegionsBaseTask::evacuate_live_objects","G1ParEvacuateFollowersClosure::do_void","G1ParScanThreadState::steal_and_trim_queue","G1ParScanThreadState::trim_queue_to_threshold","G1ParEvacuateFollowersClosure::offer_termination","TaskTerminator::offer_termination","_pthread_mutex_firstfit_unlock_slow","__psynch_mutexdrop","MemAllocator::mem_allocate","MemAllocator::allocate_inside_tlab_slow","_malloc_zone_malloc","nanov2_allocate_from_block","jdk.internal.net.http.Http1Response$$Lambda$338.0x0000000800db5130","advance","dropSubscription","jdk.internal.net.http.HttpClientImpl$$Lambda$160.0x0000000800d04450","getAsBoolean","isSelectorThread","java.util.Locale","getLanguage","sun.util.locale.BaseLocale","ObjectMonitor::exit","JvmtiEnvBase::phase","signal","isHeldExclusively","getExclusiveOwnerThread","JvmtiEnv::GetTag","JvmtiTagMap::get_tag","pthread_mutex_lock","java.util.ImmutableCollections$ListItr","compareAndSetState","ThreadsListHandle::ThreadsListHandle","java.lang.invoke.VarHandleInts$FieldInstanceReadWrite","itable stub","lockingScheduler","os::javaTimeSystemUTC","libsystem_c.dylib","clock_gettime","gettimeofday","position","libnio.dylib","Java_sun_nio_ch_FileDispatcherImpl_writev0","plusSeconds","os::javaTimeMillis","isForSelf","ok.dht.test.ilin.hashing.impl.ConsistentHashing","getServerAddressFromKey","jdk.internal.net.http.ImmutableHttpRequest","java.lang.invoke.LambdaForm$DMH.0x0000000800d89800","not_walkable_Java","ObjectSynchronizer::quick_enter","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ull, G1BarrierSet>, ","jdk.internal.net.http.Exchange$$Lambda$459.0x0000000800dc9378","jdk.internal.net.http.frame.SettingsFrame","toByteArray","hasDemand","forEachWithCancel","readResumeStatusLine","os::PlatformEvent::unpark","lambda$sendRequestBody$7","getResponseAsync","readHeadersAsync","thenApplyAsync","jdk.internal.net.http.MultiExchange$$Lambda$527.0x0000000800dd9cc8","lambda$responseAsync0$3","jdk.internal.net.http.HttpResponseImpl","ObjectSynchronizer::FastHashCode","G1CollectedHeap::allocate_new_tlab","G1CollectedHeap::attempt_allocation_slow","MutatorAllocRegion::retire","G1AllocRegion::retire_internal","G1CollectedHeap::retire_mutator_alloc_region","G1CollectionSet::add_young_region_common","G1Policy::predict_region_non_copy_time_ms","G1Analytics::predict_card_scan_time_ms","G1Predictions::stddev_estimate","AbsSeq::dsd","AbsSeq::dvariance","Java_sun_nio_ch_SocketDispatcher_read0","int const static_fast_get_field_wrapper<10, int const>","encodeRelay","ok.dht.test.ilin.service.EntityService","getEntity","org.rocksdb.RocksDB","librocksdbjni18323329994961417160.jnilib","Java_org_rocksdb_RocksDB_get__J_3BII","rocksdb_get_helper","rocksdb::CompactedDBImpl::Open","rocksdb::DBImpl::Get","rocksdb::DBImpl::GetImpl","rocksdb::MemTable::Get","rocksdb::SkipListFactory::CreateMemTableRep","arrayof_jint_disjoint_arraycopy","join","JNI_OnLoad","java.util.stream.ForEachOps$ForEachOp$OfRef","java.util.stream.ForEachOps$ForEachOp","java.util.HashMap$KeySpliterator","forEachRemaining","java.util.stream.ReferencePipeline$2$1","jdk.internal.net.http.HttpClientImpl$SelectorAttachment$$Lambda$388.0x0000000800dbcbd8","lambda$events$0","java.util.TreeMap$EntrySet","getFirstEntry","snode","jdk.internal.net.http.Http1Response$$Lambda$499.0x0000000800dd66a8","Fingerprinter::compute_fingerprint_and_return_type","java.util.function.Function$$Lambda$181.0x0000000800d2ce60","java.net.http.HttpResponse$BodyHandlers$$Lambda$208.0x0000000800d8d2d0","java.net.http.HttpResponse$BodyHandlers","lambda$ofByteArray$12","java.net.http.HttpResponse$BodySubscribers","ofByteArray","Method::jmethod_id","InstanceKlass::get_jmethod_id","oopDesc::address_field","clear","CodeHeap::find_blob_unsafe","proxy","completedFuture","getProperties","jdk.internal.net.http.HttpConnection$TrailingOperations$$Lambda$503.0x0000000800dd68e0","lambda$add$0","processDeregisterQueue","arrayof_jint_fill","JNI_ArgumentPusher::JNI_ArgumentPusher","std::__1::vector<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample> > >::vector<std::__1::__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, MethodSample>, void*>*, long> > >","java.util.ImmutableCollections$AbstractImmutableList","Java_sun_nio_ch_IOUtil_write1","sun.misc.Unsafe","putByte","ThreadInVMfromJava::~ThreadInVMfromJava","timeout","arrayof_jbyte_disjoint_arraycopy","sun.nio.ch.IOVecWrapper","AllocTracer::send_allocation_in_new_tlab","lambda$static$0","StackOverflow::reguard_stack_if_needed","java.util.stream.StreamSupport","java.util.stream.ReferencePipeline$Head","sendRequestBody","incrementAndGet","InstanceKlass::signature_name","jdk.internal.net.http.PullPublisher$Subscription$PullTask","JavaCallArguments::JavaCallArguments","ThreadInVMfromNative::ThreadInVMfromNative","contains","containsKey","ThreadsListHandle::~ThreadsListHandle","vtable stub","CompiledMethod::find_pc_desc","addHeader","java.net.Inet4Address","SafepointSynchronize::handle_polling_page_exception","SafepointMechanism::process","SafepointSynchronize::block","GenericWaitBarrier::wait","ScopeDesc::decode_object_values","nmethod::metadata_addr_at","deleteEntry","PcDescCache::find_pc_desc","malloc","wrapSink","java.util.stream.ReferencePipeline$5","opWrapSink","java.util.stream.ReferencePipeline$5$1","java.util.stream.Sink$ChainedReference","java.util.concurrent.atomic.AtomicInteger","java.util.TreeMap$EntryIterator","java.util.TreeMap$PrivateEntryIterator","nextEntry","successor","java.lang.invoke.LambdaForm$DMH.0x0000000800c99000","getAndSet","isStopped","startParsingRequestBody","parseInt","isLatin1","java.lang.invoke.LambdaForm$MH.0x0000000800ca5400","invoke","java.lang.invoke.LambdaForm$MH.0x0000000800ca4400","invokeStatic","java.lang.Long","getChars","method","getBodyAsync","FlightRecorder::recordEvent","Recording::recordMonitorBlocked","pthread_getspecific","JvmtiEnv::GetCurrentThread","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2646116ull, G1BarrierSet>, ","ceilingKey","getCeilingEntry","readResumeHeader","arrayof_jlong_disjoint_arraycopy","javaVFrame::is_java_frame","frame::sender_raw","isOpen","tryLock","addAll","default_zone_malloc","previous","os::javaTimeNanos","getHeader","jdk.internal.logger.AbstractLoggerWrapper","isLoggable","sun.util.logging.internal.LoggingProviderImpl$JULWrapper","readStatusLineFeed","java.util.stream.LongPipeline","_new_instance_Java","java.util.stream.StreamOpFlag","fromCharacteristics","JavaThread::can_call_java","getTable","expungeStaleEntries","java.lang.ref.ReferenceQueue","reallyPoll","__error","responseAsync0","exceptionallyCompose","uniComposeExceptionallyStage","jdk.internal.logger.LazyLoggers$LazyLoggerWrapper","wrapped","on","colorOf","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<594020ull, G1BarrierSet>, ","getState","_pthread_mutex_droplock","Chunk::next_chop","ChunkPool::free","WorkGang::run_task","GangTaskDispatcher::coordinator_execute_on_workers","semaphore_signal_trap","G1BatchedGangTask::work","G1PostEvacuateCollectionSetCleanupTask2::FreeCollectionSetTask::do_work","G1CollectionSet::iterate_part_from","FreeCSetClosure::do_heap_region","CompositeElapsedCounterSource::now","os::elapsed_counter","java.nio.channels.spi.AbstractSelectableChannel","keyFor","requireNonNull","JavaThreadParkedState::~JavaThreadParkedState","JavaThreadStatusChanger::set_thread_status","to_abstime","translateAndUpdateReadyOps","enqueue","java_lang_Thread::interrupted","pthread_mutex_unlock","ofNullable","PcDescContainer::find_pc_desc_internal","CollectedHeap::print_heap_before_gc","GCHeapLog::log_heap","G1CollectedHeap::print_on","outputStream::print","outputStream::do_vsnprintf_and_write","outputStream::do_vsnprintf","os::vsnprintf","_vsnprintf","__v2printf","__vfprintf","jdk.internal.net.http.common.Logger","log","java.lang.System$Logger","Thread::is_Named_thread","java.lang.ThreadLocal","java.lang.ThreadLocal$ThreadLocalMap","JvmtiEnv::Deallocate","nanov2_free_to_block","methodHandle::~methodHandle","default_zone_free_definite_size","read_stable_mark","jdk.internal.net.http.AbstractSubscription","__commpage_gettimeofday_internal","mapToLong","java.util.stream.LongPipeline$StatelessOp","JavaFrameAnchor::make_walkable","java.util.Base64$Encoder","encodeToString","encode","encode0","findConnection","java.lang.Character","rocksdb::MemTable::KeyComparator::operator","_platform_memcmp","wrapForUpgrade","Symbol::as_C_string","getBlocker","toAsciiString","java.lang.invoke.LambdaForm$MH.0x0000000800d88800","invokeExact_MT","java.lang.invoke.LambdaForm$DMH.0x0000000800ddc000","AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<598116ull, G1BarrierSet>, ","ThreadBlockInVMPreprocess<InFlightMutexRelease>::~ThreadBlockInVMPreprocess","start","jdk.internal.net.http.SocketTube$InternalWriteSubscriber$$Lambda$435.0x0000000800dc7c40","frame::sender_for_interpreter_frame","CodeBlob::is_compiled","Buffer::putVar64","sun.nio.ch.SelectionKeyImpl","getFDVal","G1CollectedHeap::pre_evacuate_collection_set","G1CollectedHeap::run_task_timed","java.util.TreeMap$KeyIterator","lockInterruptibly","acquireInterruptibly","Arena::Amalloc_4","JvmtiTagMapTable::find","java_lang_Thread::thread","java.util.ImmutableCollections$List12","toArray","tryAdvance","java.util.stream.FindOps$FindSink$OfLong","jdk.internal.net.http.AuthenticationFilter$Cache","ScopeDesc::is_top","java.lang.ref.Reference","refersTo","refersToImpl","isHttp11","jdk.internal.net.http.Exchange$$Lambda$468.0x0000000800dca5b8","pthread_dependency_wait_np.cold.3","compiledVFrame::bci","interrupted","nanov2_allocate","increaseIfFulfilled","one.nio.util.URLEncoder","decode","registerPendingSessions","unlink","unlinkLast","updateTail","ensureCapacity","_platform_strncmp","java.net.InetAddress","getAllByName","doSignal","sourceSpliterator","resource_allocate_bytes","os::stack_shadow_pages_available","lambda$readBody$2","jdk.internal.net.http.Http1Response$ClientRefCountTracker","truncatedTo","plusNanos","Dictionary::lookup","java.net.http.HttpHeaders$$Lambda$478.0x0000000800dccdf0","applyAsLong","CompilationPolicy::compile_if_required","entrySet","isAsciiString","sendBodyAsync","continueRequest","jdk.internal.net.http.RequestPublishers$ByteArrayPublisher","copy","allocate","jdk.internal.net.http.ResponseSubscribers$$Lambda$511.0x0000000800dcfdd0","lambda$getBodyAsync$3","skipDeletedSuccessors","compiledVFrame::method","java.lang.invoke.VarHandle","checkExactAccessMode","guard_LL_L","pthread_self","jdk.internal.net.http.Response","getAndIncrement","weakCompareAndSetVolatile","_platform_strcpy","valueOf","copyMemory","copyMemoryChecks","checkPrimitivePointer","checkPrimitiveArray","stop","G1BarrierSetRuntime::write_ref_array_post_entry","maybeStartHeaders","free","PreserveExceptionMark::~PreserveExceptionMark","__commpage_gettimeofday","JNI_ArgumentPusherVaArg::push_arguments_on","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$391.0x0000000800dbd298","java.util.ImmutableCollections$MapN$1","java.util.ImmutableCollections$MapN$MapNIterator","call_stub","isFinished","CollectedHeap::hash_oop","Java_sun_nio_ch_KQueue_poll","checkRequestCancelled","requestCancelled","nanov2_pointer_size","JfrConditionalFlush<EventJavaMonitorEnter>::JfrConditionalFlush","hasNext","jdk.internal.net.http.Http2Connection","LRUMaxHeapPolicy::setup","lambda$wrapForUpgrade$11","checkForUpgradeAsync","java.util.stream.ReferencePipeline$2","newCapacity","jdk.internal.util.ArraysSupport","newLength","CallTraceStorage::put","isSameClassPackage","getPackageName","lastIndexOf","mix","nmethod::scopes_pcs_begin","JfrConditionalFlushWithStacktrace<EventJavaMonitorEnter>::JfrConditionalFlushWithStacktrace","G1EvacuateRegionsTask::scan_roots","G1RootProcessor::evacuate_roots","G1RootProcessor::process_java_roots","Threads::possibly_parallel_oops_do","Threads::possibly_parallel_threads_do","Thread::oops_do","JavaThread::oops_do_frames","frame::oops_code_blob_do","OopMapSet::all_do","DerivedPointerTable::add","G1CodeBlobClosure::do_code_blob","nmethod::oops_do_process_weak","sys_icache_invalidate","StackFrameStream::StackFrameStream","G1RemSet::scan_heap_roots","G1RemSetScanState::iterate_dirty_regions_from","G1ScanHRForRegionClosure::do_heap_region","G1ScanHRForRegionClosure::scan_heap_roots","G1ScanHRForRegionClosure::do_claimed_block","G1ScanHRForRegionClosure::scan_memregion","HeapWordImpl** HeapRegion::oops_on_memregion_seq_iterate_careful<true, G1ScanCardClosure>","void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>","void G1ScanCardClosure::do_oop_work<narrowOop>","nmethod::fix_oop_relocations","RelocIterator::next","RelocIterator::advance_over_prefix","ClassLoaderDataGraph::roots_cld_do","G1CLDScanClosure::do_cld","getAddress","jdk.internal.net.http.HttpRequestImpl$$Lambda$259.0x0000000800da6438","lambda$getAddress$5","getByName","getAllByName0","java.util.concurrent.ConcurrentSkipListSet","java.util.concurrent.ConcurrentSkipListMap$KeySet","jdk.internal.net.http.Exchange$$Lambda$523.0x0000000800dd93e8","JavaThreadParkedState::JavaThreadParkedState","linkBefore","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$411.0x0000000800dc4678","lambda$run$5","jdk.internal.net.http.HttpClientImpl$SelectorManager$$Lambda$398.0x0000000800dbe260","lambda$run$2","resetInterestOps","java.util.HashMap$HashIterator","JNI_ArgumentPusherVaArg::do_type","java.util.ImmutableCollections","listCopy","ObjectMonitor::object_peek","Java_sun_nio_ch_FileDispatcherImpl_write0","java.lang.CharacterData","libjava.dylib","jsqrt","java.util.stream.FindOps$FindSink","cancellationRequested","digit","convertReturnVal","jdk.internal.net.http.PullPublisher","jdk.internal.net.http.PullPublisher$Subscription","keyString","java.lang.invoke.LambdaForm$MH.0x0000000800c92000","java.lang.invoke.LambdaForm$MH.0x0000000800da0c00","java.lang.invoke.LambdaForm$MH.0x0000000800c02000","checkOverflow","java.lang.invoke.LambdaForm$MH.0x0000000800c10c00","newArrayWithSuffix","newArray","allocateUninitializedArray","CodeHeap::find_block_for","setColor","G1CollectedHeap::evacuate_initial_collection_set","PUT","method0","ConcurrentGCThread::run","G1ServiceThread::run_service","G1ServiceThread::sleep_before_next_cycle","peek","frame::is_interpreted_frame","jfr_is_event_enabled","Chunk::operator new","ok.dht.test.ilin.hashing.HashEvaluator","ok.dht.test.ilin.hashing.impl.FNV32HashEvaluator","G1BarrierSet::invalidate","java.util.HashMap$KeySet","java.util.HashMap$KeyIterator","mach_thread_self","nmethod::is_zombie","InstanceKlass::initialize","ObjectMonitor::UnlinkAfterAcquire","Java_sun_nio_ch_IOUtil_drain","java.util.stream.FindOps$FindSink$OfRef","java.lang.ref.Cleaner","jdk.internal.ref.CleanerImpl$PhantomCleanableRef","jdk.internal.ref.PhantomCleanable","insert","java.util.Map","ensureOpen","java.nio.MappedByteBuffer","SafeThreadsListPtr::acquire_stable_list","JvmtiThreadEventTransition::JvmtiThreadEventTransition","checkKey","_pthread_exit_if_canceled","SafepointSynchronize::end","SafepointSynchronize::disarm_safepoint","GenericWaitBarrier::disarm","swtch_pri","forward_copy_longs","java.nio.HeapByteBufferR","slice","JNIHandles::resolve_external_guard","fdval","java.util.AbstractCollection","java.util.concurrent.atomic.AtomicBoolean","sun.nio.ch.AllocatedNativeObject","java.util.stream.Sink","begin","CodeBlob::is_zombie","requestURI","JavaCallArguments::parameters","PeriodicTask::real_time_tick","StatSampler::collect_sample",];

    let currentHeatmap = executionsHeatmap;
    let currentHeatmapType = 'executions';

    let heatHeight = 60;

    let heatLastSample = -1;
    let heatActiveSample1 = -1;
    let heatActiveSample2 = -1;
    let heatDiffStart = -1;
    let heatDiffEnd = -1;
    let highlightStart = -1;
    let highlightEnd = -1;

    const titleText = document.getElementById("title").textContent;
    document.getElementById("title").style.display = 'none';
    document.title = titleText;

    const heatCanvas = document.getElementById('heatmap-canvas');
    const heatStatus = document.getElementById('status');
    const heatCanvasWrapper = document.getElementById('heatmap-canvas-wrapper');
    const heatCanvasContainer = document.getElementById('heatmap-canvas-container');

    let heatC;
    let prevDx = -1000000000;

    let searchExecutedCount = 0;
    let searchMax = 0;

    const timeOptions = {
        year: '2-digit',
        month: '2-digit',
        day: '2-digit',
        timeZoneName: 'short',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        fractionalSecondDigits: 2
    };

    const timeOptionsShort = {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        fractionalSecondDigits: 2
    };

    const timeOptionsTiny = {
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit',
        hourCycle: 'h23',
        //hour12: false
    };

    function methodInfo(methodIndex, out) {
        if (methodIndex === -1) {
            out.className = '';
            out.methodName = 'all';
            out.location = 0;
            out.type = 3;
            return;
        }

        methodIndex--;

        let methodAndClass = methods.int36(methodIndex * 12);
        let locationAndType = methods.int36(methodIndex * 12 + 6)
        let className = (methodAndClass & 0x3FFFF) - 1;
        let methodName = (methodAndClass >>> 18) - 1;

        out.className = cpool[className];
        out.methodName = cpool[methodName];
        out.location = locationAndType >>> 4;
        out.type = locationAndType & 15;
    }

    function title(methodIndex, out) {
        methodInfo(methodIndex, out);
        const codeLine = (out.location & 0xffff);
        let locationSuffix = codeLine === 0 ? "" : (":" + codeLine);

        if (out.methodName === '') {
            return out.className + locationSuffix;
        }
        if (out.className === '') {
            return out.methodName + locationSuffix;
        }
        if (out.type >= 3 && out.type <= 5) {
            return out.methodName + locationSuffix;
        }

        return out.className + "." + out.methodName + locationSuffix;
    }

    let bgInterval = null;
    let bgTasks = [];
    let cooldownTime = 0;
    let nextTask = 0;

    function addTask(id, iteration, afterFrame) {
        for (let t of bgTasks) {
            if (t.id === id) {
                t.f = iteration;
                t.a = afterFrame;
                return;
            }
        }

        bgTasks.push({id: id, f: iteration, a: afterFrame});
        if (bgTasks.length === 1) {
            bgInterval = setInterval(function() {
                let start = performance.now();
                if (start <= cooldownTime) {
                    return;
                }
                let overflow = false;
                do {
                    let task = bgTasks[nextTask];
                    if (task.f()) {
                        nextTask++;
                    } else {
                        bgTasks.splice(nextTask, 1);
                        if (bgTasks.length === 0) {
                            clearInterval(bgInterval);
                            nextTask = 0;
                            return;
                        }
                    }

                    if (nextTask >= bgTasks.length) {
                        nextTask = 0;
                        overflow = true;
                    }
                } while(performance.now() - start < 8);

                for (let q = 0; q < overflow ? bgTasks.length : nextTask; q++) {
                    bgTasks[q].a();
                }
            })
        }
    }

    function prepareFrames(from, to) {
        let mul = zoomToGroupSize[currentHeatmap.zoom];
        from *= mul;
        to = (to + 1) * mul - 1;
        if (to >= currentHeatmap.blocks.length) {
            to = currentHeatmap.blocks.length - 1;
        }

        const frames = new Queue();
        const root = new Map();
        root.c = 0;
        root.m = -1;
        root.x = 0;
        const roots = [root];
        let levelsCount = 1;

        for (let pos = from; pos <= to; pos++) {
            const block = currentHeatmap.blocks[pos];

            root.c += block.length;

            for (let stack of block) {
                levelsCount = Math.max(stack.length + 1, levelsCount);

                frames.push(root);
                frames.push(stack);
            }
        }

        return [frames, roots, levelsCount]
    }

    function nextFrames(frames, level) {
        frames.push(null);  // end stacks marker

        let nowFrame = null;

        while (true) {
            const frame = frames.shift();
            if (frame === null) {   // end stack marker
                break;
            }

            const stack = frames.shift();
            if (level >= stack.length) {
                continue;
            }

            const methodId = stack[level];
            nowFrame = frame.get(methodId);
            if (nowFrame === undefined) {
                nowFrame = new Map();
                nowFrame.m = methodId;
                nowFrame.c = 0;
                frame.set(methodId, nowFrame);
            }
            nowFrame.c++;

            frames.push(nowFrame);
            frames.push(stack);
        }
    }

    function renderTraces(from, to) {
        let [frames, roots, levelsCount] = prepareFrames(from, to);
        levels.length = 0;
        for (let i = 0; i < levelsCount; i++) {
            levels.push([]);
        }

        let currentLevel = 0;
        let levelToRedraw = 0;
        let methodInfoOut = {};

        addTask('flame', function () {
                nextFrames(frames, currentLevel);

                let level = levels[currentLevel];
                let nextRoots = [];
                for (let root of roots) {
                    let x = root.x;
                    const t = title(root.m, methodInfoOut);
                    let color = getColor(palette[methodInfoOut.type]);
                    level.push({left: x, width: root.c, color: color, title: t});

                    let nextFrames = [...root.values()];

                    nextFrames.sort((k1, k2) => k2.c - k1.c);
                    for (let frame of nextFrames) {
                        frame.x = x;
                        x += frame.c;
                        nextRoots.push(frame);
                    }
                }
                level.sort((k1, k2) => k1.left - k2.left);

                roots = nextRoots;
                currentLevel++;
                if (currentLevel < levelsCount) {
                    return true;
                }
                renderWithMatch(levelsCount * 16, levels[0][0], 0);
                return false;
            },
            function () {
                renderWithMatch(4096, levels[0][0], 0, levelToRedraw);
                levelToRedraw = currentLevel;
            });
    }

    function renderWithMatch(newCanvasHeight, root, level, minLevel) {
        newCanvasHeight = Math.min(32767, newCanvasHeight);
        if (canvasHeight !== newCanvasHeight) {
            canvasHeight = newCanvasHeight;
            canvas.style.height = canvasHeight + 'px';
            canvas.height = canvasHeight * (devicePixelRatio || 1);
            c = canvas.getContext('2d');
            if (devicePixelRatio) c.scale(devicePixelRatio, devicePixelRatio);
            c.font = document.body.style.font;
        }
        const matched = render(root, level, minLevel);
        if (pattern === undefined) {
            document.getElementById('match').style.display = 'none';
            document.getElementById('produced').style.display = 'inherit';
        } else {
            document.getElementById('matchval').textContent = pct(matched, root.width) + '%';
            document.getElementById('match').style.display = 'inline-block';
            document.getElementById('produced').style.display = 'none';
        }
    }

    function renderDiff(from, to, baseFrom, baseTo) {
        let [frames, roots, levelsCount] = prepareFrames(from, to);
        let [baseFrames, baseRoots, ] = prepareFrames(baseFrom, baseTo);
        roots[0].b = baseRoots[0];

        levels.length = 0;
        for (let i = 0; i < levelsCount; i++) {
            levels.push([]);
        }
        let currentLevel = 0;
        let levelToRedraw = 0;
        let methodInfoOut = {};

        let minDiff = 0;
        let maxDiff = 0;

        addTask('flame', function () {
                nextFrames(frames, currentLevel);
                nextFrames(baseFrames, currentLevel);
                let level = levels[currentLevel];

                for (let root of roots) {
                    let wasCount = root.b === undefined ? 0 : root.b.c;
                    if (wasCount !== 0) {
                        maxDiff = Math.max(maxDiff, root.c - wasCount);
                        minDiff = Math.min(minDiff, root.c - wasCount)
                    }
                }

                let nextRoots = [];
                for (let root of roots) {
                    let x = root.x;

                    let wasCount = root.b === undefined ? 0 : root.b.c;
                    const t = title(root.m, methodInfoOut) + " (" + root.c + "/" + wasCount +")";
                    let color;
                    if (wasCount === 0) {
                        color = "#dac571";
                    } else if (wasCount >= root.c) {
                        const ratio = (root.c - wasCount) / minDiff;
                        color = 'rgb(' + (245 - 90 * ratio) + ',' + (250 - 90 * ratio) + ',' + 255 +')';
                    } else {
                        const ratio = (root.c - wasCount) / maxDiff;
                        color = 'rgb(' + 255 + ',' + (245 - 180 * ratio) + ',' + (240 - 200 * ratio) +')';
                    }
                    level.push({left: x, width: root.c, color: color, title: t});

                    let nextFrames = [];
                    for (let [methodId, frame] of root) {
                        frame.b = root.b && root.b.get(methodId);
                        nextFrames.push(frame);
                    }
                    nextFrames.sort((k1, k2) => k2.c - k1.c);
                    for (let frame of nextFrames) {
                        frame.x = x;
                        x += frame.c;
                        nextRoots.push(frame);
                    }
                }
                level.sort((k1, k2) => k1.left - k2.left);

                roots = nextRoots;
                currentLevel++;
                if (currentLevel < levelsCount) {
                    return true;
                }
                renderWithMatch(levelsCount * 16, levels[0][0], 0);
                return false;
            },
            function () {
                renderWithMatch(4096, levels[0][0], 0, levelToRedraw);
                levelToRedraw = currentLevel;
            });
    }

    function redrawHeatSamplesImpl(from, to, dx) {
        const patternDraw = !!pattern;
        const startBlock = currentHeatmap.startBlock();

        const max = currentHeatmap.max();
        const heatmap = currentHeatmap.heatmap();

        for (let index = from; index <= to; index++) {
            let color;
            let i = index - startBlock;
            if (i < 0 || i >= heatmap.length) {
                color = '#ddd';
            } else {
                let count = heatmap[i];

                let useFound = patternDraw && searchExecutedCount > i;
                let maxValue = useFound ? searchMax : max;
                let value = useFound ? found[i] : count;
                let ratio = value / (maxValue || 1);

                if (useFound) {
                    if (ratio < 0.8) {
                        let value = Math.round(255 - ratio * 255 / 0.8);
                        color = 'rgb(' + value + ',' + value + ',255)';
                    } else {
                        let value = Math.round(255 - (ratio - 0.8) * 100 / 0.2);
                        color = 'rgb(0,0,' + value + ')';
                    }
                } else {
                    if (ratio < 0.8) {
                        let value = Math.round(255 - ratio * 255 / 0.8);
                        color = 'rgb(255,' + value + ',' + value + ')';
                    } else {
                        let value = Math.round(255 - (ratio - 0.8) * 100 / 0.2);
                        color = 'rgb('+ value + ',0,0)';
                    }
                }

            }
            heatC.fillStyle = color;

            let x = Math.floor(index / heatHeight);
            let y = index % heatHeight;
            heatC.fillRect(x * sq - dx, y * sq + canvasTimeHeight, sq, sq);
        }

        let blocksBetweenMarks = 20;

        let fromBlock = Math.floor(from / blocksBetweenMarks / heatHeight) - 1;
        let toBlock = Math.ceil(to / blocksBetweenMarks / heatHeight);

        let markPixels = blocksBetweenMarks * sq;

        heatC.fillStyle = '#fff';
        heatC.fillRect(
            fromBlock * markPixels - dx,
            0,
            (toBlock - fromBlock + 1) * markPixels,
            canvasTimeHeight
        );

        heatC.beginPath();
        heatC.moveTo(fromBlock * markPixels - dx + 0.5, canvasTimeHeight + 0.5);
        heatC.lineTo(toBlock * markPixels - dx + 0.5, canvasTimeHeight + 0.5);
        heatC.stroke();

        heatC.fillStyle = '#000';

        let groupSize = heatHeight;
        let oneBlockMs = currentHeatmap.currentTimeBlock();
        let oneGroupMs = oneBlockMs * groupSize;
        let oneMarkMs = oneGroupMs * blocksBetweenMarks;
        for (let markIndex = fromBlock; markIndex <= toBlock; markIndex++) {
            let origin = Math.floor(startMs / oneMarkMs) * oneMarkMs;
            let ms = origin + markIndex * oneMarkMs;
            let markOffset = markIndex * markPixels - dx;

            let title = new Date(ms).toLocaleTimeString(undefined, timeOptionsTiny);

            let w = heatC.measureText(title).width;
            let x = markOffset + (markPixels - w) / 2;
            heatC.fillText(title, x, canvasTimeHeight - 1, markPixels);

            heatC.beginPath();
            heatC.moveTo(markOffset + 0.5, canvasTimeHeight - 2 * sqScale + 0.5);
            heatC.lineTo(markOffset + 0.5, canvasTimeHeight + 2 * sqScale + 0.5);
            heatC.stroke();
        }
    }

    function redrawHeatSamples(from, to) {
        let dx = Math.floor((heatCanvasContainer.scrollLeft - canvasScrollPadding) * sqScale);

        from = Math.max(from, heatHeight * Math.floor(dx / sq));
        to = Math.min(to, heatHeight * Math.ceil((dx + heatCanvas.width) / sq));
        redrawHeatSamplesImpl(from, to, dx);
    }

    function redrawHeatMap() {
        redrawHeatSamples(0, (1 + currentHeatmap.count() / heatHeight | 0) * heatHeight);
    }

    function fillCanvasWithEvents(zoom) {
        searchExecutedCount = 0;
        searchMax = 0;

        addTask('search', function () {
            return false;
        }, function (){});

        currentHeatmap.setZoom(zoom);
        heatHeight = zoomToHeight[zoom];

        const m = devicePixelRatio || 1;
        sqScale = m;
        sqPx = 5;
        sq = Math.floor(sqPx * m);
        sqPx = sq / m;
        canvasTimeHeight = sq * 2 + 2;
        canvasTimeHeightPx = canvasTimeHeight / m;

        const widthPx = canvasScrollPadding + heatCanvasContainer.offsetWidth + canvasScrollPadding;
        const heightPx = sqPx * heatHeight + canvasTimeHeightPx;

        const heatWidthPx = Math.max(20, Math.ceil(currentHeatmap.count() / heatHeight)) * sqPx;
        heatCanvasWrapper.style.width = heatWidthPx + 'px';
        if (heatCanvasContainer.offsetWidth > heatWidthPx) {
            heatCanvasContainer.style.overflowX = 'hidden';
        } else {
            heatCanvasContainer.style.overflowX = 'scroll';
        }

        heatCanvas.width = Math.ceil(widthPx * m);
        heatCanvas.height = Math.ceil(heightPx * m);
        heatCanvas.style.width = widthPx + 'px';
        heatCanvas.style.height = heightPx + 'px';

        heatC = heatCanvas.getContext('2d');
        heatC.font = sq * 2 + 'px Verdana, sans-serif';
        heatC.lineWidth = 1;
        heatC.strokeStyle = '#000';

        document.getElementById('heatmap-height-line').textContent = [' 1 sec : 20 ms ',' 1 min : 1 sec ',' 5 min : 5 sec ',' 1 hr  : 1 min '][currentHeatmap.zoom];
        redrawHeatMap();
    }

    let found = new Uint32Array(0);

    function searchIterative(r) {
        if (r && (r = prompt('Enter regexp to search:', '')) === null) {
            return;
        }
        searchExecutedCount = 0;
        searchMax = 0;
        if (!r) {
            pattern = undefined;
            redrawHeatMap();
            addTask('search', function () {
                return false;
            }, function (){});
            return;
        }
        let renderFrom = 0;
        let heatmap = currentHeatmap.heatmap();
        let count = heatmap.length;
        found = new Uint32Array(count);
        let start = currentHeatmap.startBlock();
        function renderFunc() {
            redrawHeatSamples(start + renderFrom, start + searchExecutedCount - 1);
            renderFrom = searchExecutedCount;
        }
        pattern = r ? RegExp(r) : undefined;
        const matchedMethods = new Set();
        const methodOut = {};
        for (let index = methods.data.length / 12; index >= 0; index--) {
            if (pattern.test(title(index, methodOut))) {
                matchedMethods.add(index);
            }
        }

        let mul = zoomToGroupSize[currentHeatmap.zoom];

        addTask('search', function () {
            let amount = 0;
            const from = searchExecutedCount * mul;
            const to = (searchExecutedCount + 1) * mul;
            for (let i = from; i < to; i++) {
                const stacks = currentHeatmap.blocks[i];
                if (stacks === undefined) {
                    continue;
                }

                for (let stack of stacks) {
                    for (let methodIndex of stack) {
                        if (matchedMethods.has(methodIndex)) {
                            amount++;
                            break;
                        }
                    }
                }
            }

            if (searchMax < amount) {
                renderFrom = 0;
                searchMax = amount;
            }

            found[searchExecutedCount] = amount;
            searchExecutedCount++;
            if (searchExecutedCount >= count) {
                renderFunc();

                const matched = render(root, rootLevel);
                document.getElementById('matchval').textContent = pct(matched, root.width) + '%';
                document.getElementById('match').style.display = r ? 'inherit' : 'none';
                document.getElementById('produced').style.display = r ? 'none' : 'inherit';

                return false;
            }
            return true;
        }, renderFunc);

    }

    function renderHeatmap() {
        let dx = heatCanvasContainer.scrollLeft - canvasScrollPadding;
        heatCanvas.style.transform = 'translate(' + dx + 'px, 0px)';

        const width = Math.floor(heatCanvasContainer.offsetWidth / sq / (devicePixelRatio || 1));

        let z = 0;
        for (; z < zoomToGroupSize.length; z++) {
            if (currentHeatmap.blocks.length / (zoomToGroupSize[z] * zoomToHeight[z]) < width) {
                break;
            }
        }

        fillCanvasWithEvents(Math.min(z, currentHeatmap.maxZoom - 1));

        renderTraces(0, currentHeatmap.heatmap().length - 1);
    }

    heatCanvasContainer.addEventListener('scroll', function() {
        let dx = Math.floor((heatCanvasContainer.scrollLeft - canvasScrollPadding) * sqScale);
        let dxPx = dx / sqScale;
        heatCanvas.style.transform = 'translate(' + dxPx + 'px, 0px)';
        let delta = Math.abs(dx - prevDx);
        if (delta >= heatCanvas.width || searchExecutedCount !== 0) {
            redrawHeatMap();
        } else {
            heatC.drawImage(heatCanvas, prevDx - dx, 0);
            if (prevDx < dx) {
                let from = heatHeight * Math.floor((prevDx + heatCanvas.width) / sq);
                let to = heatHeight * Math.ceil((dx + heatCanvas.width) / sq);
                redrawHeatSamplesImpl(from, to, dx);
            } else {
                let from = heatHeight * Math.floor(dx / sq);
                let to = heatHeight * Math.ceil(prevDx / sq);
                redrawHeatSamplesImpl(from, to, dx);
            }
        }
        prevDx = dx;
        cooldownTime = performance.now() + 500;
    });

    document.getElementById('heatmap-height-line').onclick = function() {
        fillCanvasWithEvents((currentHeatmap.maxZoom + currentHeatmap.zoom - 1) % (currentHeatmap.maxZoom));
        highlightStart = highlightEnd = heatDiffStart = heatDiffEnd = heatActiveSample1 = heatActiveSample2 = -1;
        for (let suffix of ['Selection', 'Diff', 'Active']) {
            for (let prefix of ['left', 'leftMiddle', 'middle', 'rightMiddle', 'right']) {
                document.getElementById(prefix + suffix).style.display = 'none';
            }
        }
    }

    function callHighlightRedraw(start, end, suffix) {
        let left = document.getElementById('left' + suffix);
        let leftMiddle = document.getElementById('leftMiddle' + suffix);
        let middle = document.getElementById('middle' + suffix);
        let rightMiddle = document.getElementById('rightMiddle' + suffix);
        let right = document.getElementById('right' + suffix);

        let x1 = Math.floor(start / heatHeight);
        let y1 = start % heatHeight;
        let x2 = Math.floor(end / heatHeight);
        let y2 = end % heatHeight;

        let veryStartX = x1 * sqPx;
        let veryStartY = y1 * sqPx;
        let veryEndX = x2 * sqPx;
        let px = 1 / sqScale;
        let singleElementWidth = sqPx + px;

        let topPadding = canvasTimeHeightPx;

        if (x1 === x2) {
            left.style.display = 'none';
            right.style.display = 'none';

            for (let b of [middle, leftMiddle, rightMiddle]) {
                b.style.left = veryStartX + 'px';
                b.style.top = topPadding + veryStartY + 'px';
                b.style.width = singleElementWidth + 'px';
                b.style.height = (y2 - y1 + 1) * sqPx + px + 'px';
                b.style.display = 'block';
            }
        } else {
            left.style.left = veryStartX + 'px';
            left.style.top = topPadding + veryStartY + 'px';
            left.style.width = singleElementWidth + 'px';
            left.style.height = (heatHeight - y1) * sqPx + px + 'px';
            left.style.display = 'block';

            leftMiddle.style.left = veryStartX + 'px';
            leftMiddle.style.top = topPadding + 'px';
            leftMiddle.style.width = singleElementWidth + 'px';
            leftMiddle.style.height = y1 * sqPx + px + 'px';
            leftMiddle.style.display = 'block';

            rightMiddle.style.left = veryEndX + 'px';
            rightMiddle.style.top = topPadding + (y2 + 1) * sqPx + 'px';
            rightMiddle.style.width = sqPx + px + 'px';
            rightMiddle.style.height = (heatHeight - y2 - 1) * sqPx + px + 'px';
            rightMiddle.style.display = 'block';

            right.style.left = veryEndX + 'px';
            right.style.top = topPadding + 'px';
            right.style.width = sqPx + px + 'px';
            right.style.height = (y2 + 1) * sqPx + px + 'px';
            right.style.display = 'block';

            if (x2 - x1 === 1) {
                middle.style.display = 'none';
            } else {
                middle.style.left = veryStartX + sqPx + px + 'px';
                middle.style.top = topPadding + 'px';
                middle.style.width = (x2 - x1 - 1) * sqPx - px + 'px';
                middle.style.height = heatHeight * sqPx + px + 'px';
                middle.style.display = 'block';
            }
        }
    }

    function callSelectionRedraw(sample, shiftPressed, ctrlPressed) {
        if (ctrlPressed) {
            highlightStart = sample;
            highlightEnd = sample + Math.abs(heatActiveSample1 - heatActiveSample2);
        } else if (shiftPressed && heatActiveSample1 !== -1) {
            highlightStart = Math.min(heatActiveSample1, sample);
            highlightEnd = Math.max(heatActiveSample1, sample);
        } else {
            highlightStart = highlightEnd = sample;
        }

        callHighlightRedraw(highlightStart, highlightEnd, 'Selection');

        const index = sample - currentHeatmap.startBlock();
        const heatmap = currentHeatmap.heatmap();
        if (index >= 0 && index < heatmap.length) {
            const ms = startMs + currentHeatmap.currentTimeBlock() * index;
            const total =  heatmap[index];
            const max = currentHeatmap.max();
            heatCanvas.title = new Date(ms).toLocaleTimeString(undefined, timeOptionsShort) + " " + index;  // FIXME
            const totalText = "total: " + total + " (" + Math.floor(total / max * 100) + "%)";
            const searchText = searchExecutedCount > index
                ? "; match: " + found[index] + " (" + Math.floor(found[index] / Math.max(total, 1) * 100) + "%)"
                : "";
            status.textContent = totalText + searchText;
            status.style.display = 'inline';
        } else {
            status.style.display = 'none';
        }
    }

    function callActiveRedraw(sample, shiftPressed, ctrlPressed) {
        if (ctrlPressed) {
            let minSelected = Math.min(heatActiveSample1, heatActiveSample2);
            let maxSelected = Math.max(heatActiveSample1, heatActiveSample2);

            heatDiffStart = highlightStart;
            heatDiffEnd = highlightEnd;

            callHighlightRedraw(highlightStart, highlightEnd, 'Diff');
            renderDiff(
                minSelected - currentHeatmap.startBlock(),
                maxSelected - currentHeatmap.startBlock(),
                heatDiffStart - currentHeatmap.startBlock(),
                heatDiffEnd - currentHeatmap.startBlock()
            );
        } else {
            heatDiffStart = -1;
            heatDiffEnd = -1;
            if (shiftPressed && heatActiveSample1 !== -1) {
                heatActiveSample2 = sample;
            } else {
                heatActiveSample1 = heatActiveSample2 = sample;
            }

            let minSelected = Math.min(heatActiveSample1, heatActiveSample2);
            let maxSelected = Math.max(heatActiveSample1, heatActiveSample2);

            callHighlightRedraw(highlightStart, highlightEnd, 'Diff');
            callHighlightRedraw(minSelected, maxSelected, 'Active');
            renderTraces(
                Math.max(0, minSelected - currentHeatmap.startBlock()),
                Math.min(currentHeatmap.heatmap().length - 1, maxSelected - currentHeatmap.startBlock())
            );
        }
    }

    window.addEventListener('keydown', function (e) {
        if (e.key === 'Shift') {
            callSelectionRedraw(heatLastSample, true, e.ctrlKey);
        } else if (e.key === 'Control') {
            callSelectionRedraw(heatLastSample, e.shiftKey, true);
        }
    });

    window.addEventListener('keyup', function (e) {
        if (e.key === 'Shift') {
            callSelectionRedraw(heatLastSample, false, e.ctrlKey);
        } else if (e.key === 'Control') {
            callSelectionRedraw(heatLastSample, e.shiftKey, false);
        }
    });

    heatCanvas.onmousemove = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        if (y >= heatHeight) {
            y = heatHeight - 1;
        }
        heatLastSample = x * heatHeight + y;
        if ((event.buttons & 1) === 1) {
            callSelectionRedraw(heatLastSample, true, event.ctrlKey);
        } else {
            callSelectionRedraw(heatLastSample, event.shiftKey, event.ctrlKey);
        }
    }

    heatCanvas.onmouseout = function () {
        status.style.display = 'none';
    };

    heatCanvas.onmousedown = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        let sample = x * heatHeight + y;

        callActiveRedraw(sample, event.shiftKey, event.ctrlKey);
    };

    heatCanvas.onmouseup = function (event) {
        let x = Math.floor((event.offsetX + heatCanvasContainer.scrollLeft - canvasScrollPadding) / sqPx);
        let y = Math.floor(Math.max(0, event.offsetY - canvasTimeHeightPx) / sqPx);
        let sample = x * heatHeight + y;

        callActiveRedraw(sample, true, event.ctrlKey);
    };



init();
// FIXME search(/*highlight:*/);
</script></body></html>
